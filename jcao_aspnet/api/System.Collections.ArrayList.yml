items:
- uid: System.Collections.ArrayList
  commentId: T:System.Collections.ArrayList
  id: ArrayList
  parent: System.Collections
  children:
  - System.Collections.ArrayList.#ctor
  - System.Collections.ArrayList.#ctor(System.Collections.ICollection)
  - System.Collections.ArrayList.#ctor(System.Int32)
  - System.Collections.ArrayList.Adapter(System.Collections.IList)
  - System.Collections.ArrayList.Add(System.Object)
  - System.Collections.ArrayList.AddRange(System.Collections.ICollection)
  - System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)
  - System.Collections.ArrayList.BinarySearch(System.Object)
  - System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)
  - System.Collections.ArrayList.Capacity
  - System.Collections.ArrayList.Clear
  - System.Collections.ArrayList.Clone
  - System.Collections.ArrayList.Contains(System.Object)
  - System.Collections.ArrayList.CopyTo(System.Array)
  - System.Collections.ArrayList.CopyTo(System.Array,System.Int32)
  - System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)
  - System.Collections.ArrayList.Count
  - System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)
  - System.Collections.ArrayList.FixedSize(System.Collections.IList)
  - System.Collections.ArrayList.GetEnumerator
  - System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)
  - System.Collections.ArrayList.GetRange(System.Int32,System.Int32)
  - System.Collections.ArrayList.IndexOf(System.Object)
  - System.Collections.ArrayList.IndexOf(System.Object,System.Int32)
  - System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)
  - System.Collections.ArrayList.Insert(System.Int32,System.Object)
  - System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)
  - System.Collections.ArrayList.IsFixedSize
  - System.Collections.ArrayList.IsReadOnly
  - System.Collections.ArrayList.IsSynchronized
  - System.Collections.ArrayList.Item(System.Int32)
  - System.Collections.ArrayList.LastIndexOf(System.Object)
  - System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)
  - System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)
  - System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)
  - System.Collections.ArrayList.ReadOnly(System.Collections.IList)
  - System.Collections.ArrayList.Remove(System.Object)
  - System.Collections.ArrayList.RemoveAt(System.Int32)
  - System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)
  - System.Collections.ArrayList.Repeat(System.Object,System.Int32)
  - System.Collections.ArrayList.Reverse
  - System.Collections.ArrayList.Reverse(System.Int32,System.Int32)
  - System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)
  - System.Collections.ArrayList.Sort
  - System.Collections.ArrayList.Sort(System.Collections.IComparer)
  - System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)
  - System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)
  - System.Collections.ArrayList.Synchronized(System.Collections.IList)
  - System.Collections.ArrayList.SyncRoot
  - System.Collections.ArrayList.ToArray
  - System.Collections.ArrayList.ToArray(System.Type)
  - System.Collections.ArrayList.TrimToSize
  langs:
  - csharp
  - vb
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
  type: Class
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ArrayList
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 10
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: 'public class ArrayList : IEnumerable, IList'
    content.vb: >-
      Public Class ArrayList
          Inherits IEnumerable
          Implements IList
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Collections.ArrayList.#ctor
  commentId: M:System.Collections.ArrayList.#ctor
  id: '#ctor'
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ArrayList()
  nameWithType: ArrayList.ArrayList()
  fullName: System.Collections.ArrayList.ArrayList()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 12
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public ArrayList()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.ArrayList.#ctor(System.Collections.ICollection)
  commentId: M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ArrayList(ICollection)
  nameWithType: ArrayList.ArrayList(ICollection)
  fullName: System.Collections.ArrayList.ArrayList(System.Collections.ICollection)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 13
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public ArrayList(ICollection c)
    content.vb: Public Sub New(c As ICollection)
    parameters:
    - id: c
      type: System.Collections.ICollection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.ArrayList.#ctor(System.Int32)
  commentId: M:System.Collections.ArrayList.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ArrayList(Int32)
  nameWithType: ArrayList.ArrayList(Int32)
  fullName: System.Collections.ArrayList.ArrayList(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 14
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public ArrayList(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.ArrayList.Capacity
  commentId: P:System.Collections.ArrayList.Capacity
  id: Capacity
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Capacity
  nameWithType: ArrayList.Capacity
  fullName: System.Collections.ArrayList.Capacity
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Capacity
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 15
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int Capacity { get; set; }
    content.vb: Public Overridable Property Capacity As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Count
  commentId: P:System.Collections.ArrayList.Count
  id: Count
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ArrayList.Count
  fullName: System.Collections.ArrayList.Count
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 16
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.ArrayList.IsFixedSize
  commentId: P:System.Collections.ArrayList.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: IsFixedSize
  nameWithType: ArrayList.IsFixedSize
  fullName: System.Collections.ArrayList.IsFixedSize
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsFixedSize
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 17
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual bool IsFixedSize { get; }
    content.vb: Public Overridable ReadOnly Property IsFixedSize As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.ArrayList.IsReadOnly
  commentId: P:System.Collections.ArrayList.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ArrayList.IsReadOnly
  fullName: System.Collections.ArrayList.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 18
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual bool IsReadOnly { get; }
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.ArrayList.IsSynchronized
  commentId: P:System.Collections.ArrayList.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: IsSynchronized
  nameWithType: ArrayList.IsSynchronized
  fullName: System.Collections.ArrayList.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSynchronized
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 19
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual bool IsSynchronized { get; }
    content.vb: Public Overridable ReadOnly Property IsSynchronized As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.ArrayList.Item(System.Int32)
  commentId: P:System.Collections.ArrayList.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: ArrayList.Item[Int32]
  fullName: System.Collections.ArrayList.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 20
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual object this[int index] { get; set; }
    content.vb: Public Overridable Property Item(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
  nameWithType.vb: ArrayList.Item(Int32)
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Collections.ArrayList.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Collections.ArrayList.SyncRoot
  commentId: P:System.Collections.ArrayList.SyncRoot
  id: SyncRoot
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: SyncRoot
  nameWithType: ArrayList.SyncRoot
  fullName: System.Collections.ArrayList.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SyncRoot
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 21
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual object SyncRoot { get; }
    content.vb: Public Overridable ReadOnly Property SyncRoot As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.ArrayList.Adapter(System.Collections.IList)
  commentId: M:System.Collections.ArrayList.Adapter(System.Collections.IList)
  id: Adapter(System.Collections.IList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Adapter(IList)
  nameWithType: ArrayList.Adapter(IList)
  fullName: System.Collections.ArrayList.Adapter(System.Collections.IList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adapter
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 22
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public static ArrayList Adapter(IList list)
    content.vb: Public Shared Function Adapter(list As IList) As ArrayList
    parameters:
    - id: list
      type: System.Collections.IList
    return:
      type: System.Collections.ArrayList
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.Add(System.Object)
  commentId: M:System.Collections.ArrayList.Add(System.Object)
  id: Add(System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Add(Object)
  nameWithType: ArrayList.Add(Object)
  fullName: System.Collections.ArrayList.Add(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 23
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int Add(object value)
    content.vb: Public Overridable Function Add(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.AddRange(System.Collections.ICollection)
  commentId: M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)
  id: AddRange(System.Collections.ICollection)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: AddRange(ICollection)
  nameWithType: ArrayList.AddRange(ICollection)
  fullName: System.Collections.ArrayList.AddRange(System.Collections.ICollection)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddRange
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 24
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void AddRange(ICollection c)
    content.vb: Public Overridable Sub AddRange(c As ICollection)
    parameters:
    - id: c
      type: System.Collections.ICollection
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)
  commentId: M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)
  id: BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: BinarySearch(Int32, Int32, Object, IComparer)
  nameWithType: ArrayList.BinarySearch(Int32, Int32, Object, IComparer)
  fullName: System.Collections.ArrayList.BinarySearch(System.Int32, System.Int32, System.Object, System.Collections.IComparer)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinarySearch
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 25
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int BinarySearch(int index, int count, object value, IComparer comparer)
    content.vb: Public Overridable Function BinarySearch(index As Integer, count As Integer, value As Object, comparer As IComparer) As Integer
    parameters:
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    - id: value
      type: System.Object
    - id: comparer
      type: System.Collections.IComparer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.BinarySearch(System.Object)
  commentId: M:System.Collections.ArrayList.BinarySearch(System.Object)
  id: BinarySearch(System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: BinarySearch(Object)
  nameWithType: ArrayList.BinarySearch(Object)
  fullName: System.Collections.ArrayList.BinarySearch(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinarySearch
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 26
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int BinarySearch(object value)
    content.vb: Public Overridable Function BinarySearch(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)
  commentId: M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)
  id: BinarySearch(System.Object,System.Collections.IComparer)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: BinarySearch(Object, IComparer)
  nameWithType: ArrayList.BinarySearch(Object, IComparer)
  fullName: System.Collections.ArrayList.BinarySearch(System.Object, System.Collections.IComparer)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinarySearch
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 27
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int BinarySearch(object value, IComparer comparer)
    content.vb: Public Overridable Function BinarySearch(value As Object, comparer As IComparer) As Integer
    parameters:
    - id: value
      type: System.Object
    - id: comparer
      type: System.Collections.IComparer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Clear
  commentId: M:System.Collections.ArrayList.Clear
  id: Clear
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ArrayList.Clear()
  fullName: System.Collections.ArrayList.Clear()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 28
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Clone
  commentId: M:System.Collections.ArrayList.Clone
  id: Clone
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ArrayList.Clone()
  fullName: System.Collections.ArrayList.Clone()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clone
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 29
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual object Clone()
    content.vb: Public Overridable Function Clone As Object
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Contains(System.Object)
  commentId: M:System.Collections.ArrayList.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Contains(Object)
  nameWithType: ArrayList.Contains(Object)
  fullName: System.Collections.ArrayList.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 30
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual bool Contains(object item)
    content.vb: Public Overridable Function Contains(item As Object) As Boolean
    parameters:
    - id: item
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.CopyTo(System.Array)
  commentId: M:System.Collections.ArrayList.CopyTo(System.Array)
  id: CopyTo(System.Array)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: CopyTo(Array)
  nameWithType: ArrayList.CopyTo(Array)
  fullName: System.Collections.ArrayList.CopyTo(System.Array)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 31
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void CopyTo(Array array)
    content.vb: Public Overridable Sub CopyTo(array As Array)
    parameters:
    - id: array
      type: System.Array
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  nameWithType: ArrayList.CopyTo(Array, Int32)
  fullName: System.Collections.ArrayList.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 32
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void CopyTo(Array array, int arrayIndex)
    content.vb: Public Overridable Sub CopyTo(array As Array, arrayIndex As Integer)
    parameters:
    - id: array
      type: System.Array
    - id: arrayIndex
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)
  id: CopyTo(System.Int32,System.Array,System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: CopyTo(Int32, Array, Int32, Int32)
  nameWithType: ArrayList.CopyTo(Int32, Array, Int32, Int32)
  fullName: System.Collections.ArrayList.CopyTo(System.Int32, System.Array, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 33
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void CopyTo(int index, Array array, int arrayIndex, int count)
    content.vb: Public Overridable Sub CopyTo(index As Integer, array As Array, arrayIndex As Integer, count As Integer)
    parameters:
    - id: index
      type: System.Int32
    - id: array
      type: System.Array
    - id: arrayIndex
      type: System.Int32
    - id: count
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)
  commentId: M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)
  id: FixedSize(System.Collections.ArrayList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: FixedSize(ArrayList)
  nameWithType: ArrayList.FixedSize(ArrayList)
  fullName: System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FixedSize
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 34
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public static ArrayList FixedSize(ArrayList list)
    content.vb: Public Shared Function FixedSize(list As ArrayList) As ArrayList
    parameters:
    - id: list
      type: System.Collections.ArrayList
    return:
      type: System.Collections.ArrayList
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.FixedSize(System.Collections.IList)
  commentId: M:System.Collections.ArrayList.FixedSize(System.Collections.IList)
  id: FixedSize(System.Collections.IList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: FixedSize(IList)
  nameWithType: ArrayList.FixedSize(IList)
  fullName: System.Collections.ArrayList.FixedSize(System.Collections.IList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FixedSize
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 35
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public static IList FixedSize(IList list)
    content.vb: Public Shared Function FixedSize(list As IList) As IList
    parameters:
    - id: list
      type: System.Collections.IList
    return:
      type: System.Collections.IList
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.GetEnumerator
  commentId: M:System.Collections.ArrayList.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ArrayList.GetEnumerator()
  fullName: System.Collections.ArrayList.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 36
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)
  id: GetEnumerator(System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: GetEnumerator(Int32, Int32)
  nameWithType: ArrayList.GetEnumerator(Int32, Int32)
  fullName: System.Collections.ArrayList.GetEnumerator(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 37
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual IEnumerator GetEnumerator(int index, int count)
    content.vb: Public Overridable Function GetEnumerator(index As Integer, count As Integer) As IEnumerator
    parameters:
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Collections.IEnumerator
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)
  id: GetRange(System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: GetRange(Int32, Int32)
  nameWithType: ArrayList.GetRange(Int32, Int32)
  fullName: System.Collections.ArrayList.GetRange(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRange
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 38
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual ArrayList GetRange(int index, int count)
    content.vb: Public Overridable Function GetRange(index As Integer, count As Integer) As ArrayList
    parameters:
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Collections.ArrayList
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.IndexOf(System.Object)
  commentId: M:System.Collections.ArrayList.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: IndexOf(Object)
  nameWithType: ArrayList.IndexOf(Object)
  fullName: System.Collections.ArrayList.IndexOf(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 39
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int IndexOf(object value)
    content.vb: Public Overridable Function IndexOf(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.IndexOf(System.Object,System.Int32)
  commentId: M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)
  id: IndexOf(System.Object,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: IndexOf(Object, Int32)
  nameWithType: ArrayList.IndexOf(Object, Int32)
  fullName: System.Collections.ArrayList.IndexOf(System.Object, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 40
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int IndexOf(object value, int startIndex)
    content.vb: Public Overridable Function IndexOf(value As Object, startIndex As Integer) As Integer
    parameters:
    - id: value
      type: System.Object
    - id: startIndex
      type: System.Int32
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)
  id: IndexOf(System.Object,System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: IndexOf(Object, Int32, Int32)
  nameWithType: ArrayList.IndexOf(Object, Int32, Int32)
  fullName: System.Collections.ArrayList.IndexOf(System.Object, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 41
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int IndexOf(object value, int startIndex, int count)
    content.vb: Public Overridable Function IndexOf(value As Object, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: value
      type: System.Object
    - id: startIndex
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ArrayList.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Insert(Int32, Object)
  nameWithType: ArrayList.Insert(Int32, Object)
  fullName: System.Collections.ArrayList.Insert(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Insert
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 42
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void Insert(int index, object value)
    content.vb: Public Overridable Sub Insert(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)
  commentId: M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)
  id: InsertRange(System.Int32,System.Collections.ICollection)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: InsertRange(Int32, ICollection)
  nameWithType: ArrayList.InsertRange(Int32, ICollection)
  fullName: System.Collections.ArrayList.InsertRange(System.Int32, System.Collections.ICollection)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InsertRange
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 43
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void InsertRange(int index, ICollection c)
    content.vb: Public Overridable Sub InsertRange(index As Integer, c As ICollection)
    parameters:
    - id: index
      type: System.Int32
    - id: c
      type: System.Collections.ICollection
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.LastIndexOf(System.Object)
  commentId: M:System.Collections.ArrayList.LastIndexOf(System.Object)
  id: LastIndexOf(System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: LastIndexOf(Object)
  nameWithType: ArrayList.LastIndexOf(Object)
  fullName: System.Collections.ArrayList.LastIndexOf(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastIndexOf
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 44
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int LastIndexOf(object value)
    content.vb: Public Overridable Function LastIndexOf(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)
  commentId: M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)
  id: LastIndexOf(System.Object,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: LastIndexOf(Object, Int32)
  nameWithType: ArrayList.LastIndexOf(Object, Int32)
  fullName: System.Collections.ArrayList.LastIndexOf(System.Object, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastIndexOf
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 45
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int LastIndexOf(object value, int startIndex)
    content.vb: Public Overridable Function LastIndexOf(value As Object, startIndex As Integer) As Integer
    parameters:
    - id: value
      type: System.Object
    - id: startIndex
      type: System.Int32
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)
  id: LastIndexOf(System.Object,System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: LastIndexOf(Object, Int32, Int32)
  nameWithType: ArrayList.LastIndexOf(Object, Int32, Int32)
  fullName: System.Collections.ArrayList.LastIndexOf(System.Object, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastIndexOf
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 46
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int LastIndexOf(object value, int startIndex, int count)
    content.vb: Public Overridable Function LastIndexOf(value As Object, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: value
      type: System.Object
    - id: startIndex
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)
  commentId: M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)
  id: ReadOnly(System.Collections.ArrayList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ReadOnly(ArrayList)
  nameWithType: ArrayList.ReadOnly(ArrayList)
  fullName: System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadOnly
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 47
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public static ArrayList ReadOnly(ArrayList list)
    content.vb: Public Shared Function ReadOnly(list As ArrayList) As ArrayList
    parameters:
    - id: list
      type: System.Collections.ArrayList
    return:
      type: System.Collections.ArrayList
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.ReadOnly(System.Collections.IList)
  commentId: M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)
  id: ReadOnly(System.Collections.IList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ReadOnly(IList)
  nameWithType: ArrayList.ReadOnly(IList)
  fullName: System.Collections.ArrayList.ReadOnly(System.Collections.IList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadOnly
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 48
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public static IList ReadOnly(IList list)
    content.vb: Public Shared Function ReadOnly(list As IList) As IList
    parameters:
    - id: list
      type: System.Collections.IList
    return:
      type: System.Collections.IList
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.Remove(System.Object)
  commentId: M:System.Collections.ArrayList.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Remove(Object)
  nameWithType: ArrayList.Remove(Object)
  fullName: System.Collections.ArrayList.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 49
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void Remove(object obj)
    content.vb: Public Overridable Sub Remove(obj As Object)
    parameters:
    - id: obj
      type: System.Object
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.RemoveAt(System.Int32)
  commentId: M:System.Collections.ArrayList.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: ArrayList.RemoveAt(Int32)
  fullName: System.Collections.ArrayList.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 50
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void RemoveAt(int index)
    content.vb: Public Overridable Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: RemoveRange(Int32, Int32)
  nameWithType: ArrayList.RemoveRange(Int32, Int32)
  fullName: System.Collections.ArrayList.RemoveRange(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveRange
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 51
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void RemoveRange(int index, int count)
    content.vb: Public Overridable Sub RemoveRange(index As Integer, count As Integer)
    parameters:
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Repeat(System.Object,System.Int32)
  commentId: M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)
  id: Repeat(System.Object,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Repeat(Object, Int32)
  nameWithType: ArrayList.Repeat(Object, Int32)
  fullName: System.Collections.ArrayList.Repeat(System.Object, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Repeat
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 52
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public static ArrayList Repeat(object value, int count)
    content.vb: Public Shared Function Repeat(value As Object, count As Integer) As ArrayList
    parameters:
    - id: value
      type: System.Object
    - id: count
      type: System.Int32
    return:
      type: System.Collections.ArrayList
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.Reverse
  commentId: M:System.Collections.ArrayList.Reverse
  id: Reverse
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Reverse()
  nameWithType: ArrayList.Reverse()
  fullName: System.Collections.ArrayList.Reverse()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reverse
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 53
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void Reverse()
    content.vb: Public Overridable Sub Reverse
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)
  id: Reverse(System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Reverse(Int32, Int32)
  nameWithType: ArrayList.Reverse(Int32, Int32)
  fullName: System.Collections.ArrayList.Reverse(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reverse
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 54
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void Reverse(int index, int count)
    content.vb: Public Overridable Sub Reverse(index As Integer, count As Integer)
    parameters:
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)
  commentId: M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)
  id: SetRange(System.Int32,System.Collections.ICollection)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: SetRange(Int32, ICollection)
  nameWithType: ArrayList.SetRange(Int32, ICollection)
  fullName: System.Collections.ArrayList.SetRange(System.Int32, System.Collections.ICollection)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetRange
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 55
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void SetRange(int index, ICollection c)
    content.vb: Public Overridable Sub SetRange(index As Integer, c As ICollection)
    parameters:
    - id: index
      type: System.Int32
    - id: c
      type: System.Collections.ICollection
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Sort
  commentId: M:System.Collections.ArrayList.Sort
  id: Sort
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Sort()
  nameWithType: ArrayList.Sort()
  fullName: System.Collections.ArrayList.Sort()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Sort
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 56
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void Sort()
    content.vb: Public Overridable Sub Sort
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Sort(System.Collections.IComparer)
  commentId: M:System.Collections.ArrayList.Sort(System.Collections.IComparer)
  id: Sort(System.Collections.IComparer)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Sort(IComparer)
  nameWithType: ArrayList.Sort(IComparer)
  fullName: System.Collections.ArrayList.Sort(System.Collections.IComparer)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Sort
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 57
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void Sort(IComparer comparer)
    content.vb: Public Overridable Sub Sort(comparer As IComparer)
    parameters:
    - id: comparer
      type: System.Collections.IComparer
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)
  commentId: M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)
  id: Sort(System.Int32,System.Int32,System.Collections.IComparer)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Sort(Int32, Int32, IComparer)
  nameWithType: ArrayList.Sort(Int32, Int32, IComparer)
  fullName: System.Collections.ArrayList.Sort(System.Int32, System.Int32, System.Collections.IComparer)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Sort
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 58
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void Sort(int index, int count, IComparer comparer)
    content.vb: Public Overridable Sub Sort(index As Integer, count As Integer, comparer As IComparer)
    parameters:
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    - id: comparer
      type: System.Collections.IComparer
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)
  commentId: M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)
  id: Synchronized(System.Collections.ArrayList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Synchronized(ArrayList)
  nameWithType: ArrayList.Synchronized(ArrayList)
  fullName: System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Synchronized
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 59
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public static ArrayList Synchronized(ArrayList list)
    content.vb: Public Shared Function Synchronized(list As ArrayList) As ArrayList
    parameters:
    - id: list
      type: System.Collections.ArrayList
    return:
      type: System.Collections.ArrayList
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.Synchronized(System.Collections.IList)
  commentId: M:System.Collections.ArrayList.Synchronized(System.Collections.IList)
  id: Synchronized(System.Collections.IList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Synchronized(IList)
  nameWithType: ArrayList.Synchronized(IList)
  fullName: System.Collections.ArrayList.Synchronized(System.Collections.IList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Synchronized
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 60
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public static IList Synchronized(IList list)
    content.vb: Public Shared Function Synchronized(list As IList) As IList
    parameters:
    - id: list
      type: System.Collections.IList
    return:
      type: System.Collections.IList
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.ToArray
  commentId: M:System.Collections.ArrayList.ToArray
  id: ToArray
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: ArrayList.ToArray()
  fullName: System.Collections.ArrayList.ToArray()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToArray
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 61
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual object[] ToArray()
    content.vb: Public Overridable Function ToArray As Object()
    return:
      type: System.Object[]
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.ToArray(System.Type)
  commentId: M:System.Collections.ArrayList.ToArray(System.Type)
  id: ToArray(System.Type)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ToArray(Type)
  nameWithType: ArrayList.ToArray(Type)
  fullName: System.Collections.ArrayList.ToArray(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToArray
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 62
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual Array ToArray(Type type)
    content.vb: Public Overridable Function ToArray(type As Type) As Array
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Array
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.TrimToSize
  commentId: M:System.Collections.ArrayList.TrimToSize
  id: TrimToSize
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: TrimToSize()
  nameWithType: ArrayList.TrimToSize()
  fullName: System.Collections.ArrayList.TrimToSize()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TrimToSize
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 63
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void TrimToSize()
    content.vb: Public Overridable Sub TrimToSize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: Collections.IList
  nameWithType: Collections.IList
  fullName: System.Collections.IList
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: Collections.ICollection
  nameWithType: Collections.ICollection
  fullName: System.Collections.ICollection
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ArrayList
  commentId: T:System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Collections.IComparer
  commentId: T:System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: Collections.IComparer
  nameWithType: Collections.IComparer
  fullName: System.Collections.IComparer
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  nameWithType: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
