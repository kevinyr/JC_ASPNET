items:
- uid: System.Collections.CollectionBase
  commentId: T:System.Collections.CollectionBase
  id: CollectionBase
  parent: System.Collections
  children:
  - System.Collections.CollectionBase.#ctor
  - System.Collections.CollectionBase.#ctor(System.Int32)
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnValidate(System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  langs:
  - csharp
  - vb
  name: CollectionBase
  nameWithType: CollectionBase
  fullName: System.Collections.CollectionBase
  type: Class
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CollectionBase
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 73
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: 'public abstract class CollectionBase : ICollection, IEnumerable, IList'
    content.vb: >-
      Public MustInherit Class CollectionBase
          Inherits ICollection
          Implements IEnumerable, IList
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.Collections.IList
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Collections.CollectionBase.#ctor
  commentId: M:System.Collections.CollectionBase.#ctor
  id: '#ctor'
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: CollectionBase()
  nameWithType: CollectionBase.CollectionBase()
  fullName: System.Collections.CollectionBase.CollectionBase()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 75
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected CollectionBase()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.CollectionBase.#ctor(System.Int32)
  commentId: M:System.Collections.CollectionBase.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: CollectionBase(Int32)
  nameWithType: CollectionBase.CollectionBase(Int32)
  fullName: System.Collections.CollectionBase.CollectionBase(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 76
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected CollectionBase(int capacity)
    content.vb: Protected Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.CollectionBase.Capacity
  commentId: P:System.Collections.CollectionBase.Capacity
  id: Capacity
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: Capacity
  nameWithType: CollectionBase.Capacity
  fullName: System.Collections.CollectionBase.Capacity
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Capacity
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 77
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public int Capacity { get; set; }
    content.vb: Public Property Capacity As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Collections.CollectionBase.Count
  commentId: P:System.Collections.CollectionBase.Count
  id: Count
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: CollectionBase.Count
  fullName: System.Collections.CollectionBase.Count
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 78
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Collections.CollectionBase.InnerList
  commentId: P:System.Collections.CollectionBase.InnerList
  id: InnerList
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: InnerList
  nameWithType: CollectionBase.InnerList
  fullName: System.Collections.CollectionBase.InnerList
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InnerList
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 79
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected ArrayList InnerList { get; }
    content.vb: Protected ReadOnly Property InnerList As ArrayList
    parameters: []
    return:
      type: System.Collections.ArrayList
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Collections.CollectionBase.List
  commentId: P:System.Collections.CollectionBase.List
  id: List
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: List
  nameWithType: CollectionBase.List
  fullName: System.Collections.CollectionBase.List
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: List
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 80
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected IList List { get; }
    content.vb: Protected ReadOnly Property List As IList
    parameters: []
    return:
      type: System.Collections.IList
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Collections.CollectionBase.Clear
  commentId: M:System.Collections.CollectionBase.Clear
  id: Clear
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: CollectionBase.Clear()
  fullName: System.Collections.CollectionBase.Clear()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 86
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.CollectionBase.GetEnumerator
  commentId: M:System.Collections.CollectionBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: CollectionBase.GetEnumerator()
  fullName: System.Collections.CollectionBase.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 87
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.CollectionBase.OnClear
  commentId: M:System.Collections.CollectionBase.OnClear
  id: OnClear
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: OnClear()
  nameWithType: CollectionBase.OnClear()
  fullName: System.Collections.CollectionBase.OnClear()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnClear
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 88
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected virtual void OnClear()
    content.vb: Protected Overridable Sub OnClear
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.CollectionBase.OnClearComplete
  commentId: M:System.Collections.CollectionBase.OnClearComplete
  id: OnClearComplete
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: OnClearComplete()
  nameWithType: CollectionBase.OnClearComplete()
  fullName: System.Collections.CollectionBase.OnClearComplete()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnClearComplete
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 89
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected virtual void OnClearComplete()
    content.vb: Protected Overridable Sub OnClearComplete
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  id: OnInsert(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: OnInsert(Int32, Object)
  nameWithType: CollectionBase.OnInsert(Int32, Object)
  fullName: System.Collections.CollectionBase.OnInsert(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnInsert
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 90
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected virtual void OnInsert(int index, object value)
    content.vb: Protected Overridable Sub OnInsert(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: OnInsertComplete(Int32, Object)
  nameWithType: CollectionBase.OnInsertComplete(Int32, Object)
  fullName: System.Collections.CollectionBase.OnInsertComplete(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnInsertComplete
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 91
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected virtual void OnInsertComplete(int index, object value)
    content.vb: Protected Overridable Sub OnInsertComplete(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  id: OnRemove(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: OnRemove(Int32, Object)
  nameWithType: CollectionBase.OnRemove(Int32, Object)
  fullName: System.Collections.CollectionBase.OnRemove(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnRemove
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 92
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected virtual void OnRemove(int index, object value)
    content.vb: Protected Overridable Sub OnRemove(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: OnRemoveComplete(Int32, Object)
  nameWithType: CollectionBase.OnRemoveComplete(Int32, Object)
  fullName: System.Collections.CollectionBase.OnRemoveComplete(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnRemoveComplete
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 93
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected virtual void OnRemoveComplete(int index, object value)
    content.vb: Protected Overridable Sub OnRemoveComplete(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  commentId: M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  id: OnSet(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: OnSet(Int32, Object, Object)
  nameWithType: CollectionBase.OnSet(Int32, Object, Object)
  fullName: System.Collections.CollectionBase.OnSet(System.Int32, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnSet
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 94
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected virtual void OnSet(int index, object oldValue, object newValue)
    content.vb: Protected Overridable Sub OnSet(index As Integer, oldValue As Object, newValue As Object)
    parameters:
    - id: index
      type: System.Int32
    - id: oldValue
      type: System.Object
    - id: newValue
      type: System.Object
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  commentId: M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  id: OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: OnSetComplete(Int32, Object, Object)
  nameWithType: CollectionBase.OnSetComplete(Int32, Object, Object)
  fullName: System.Collections.CollectionBase.OnSetComplete(System.Int32, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnSetComplete
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 95
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected virtual void OnSetComplete(int index, object oldValue, object newValue)
    content.vb: Protected Overridable Sub OnSetComplete(index As Integer, oldValue As Object, newValue As Object)
    parameters:
    - id: index
      type: System.Int32
    - id: oldValue
      type: System.Object
    - id: newValue
      type: System.Object
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.CollectionBase.OnValidate(System.Object)
  commentId: M:System.Collections.CollectionBase.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: OnValidate(Object)
  nameWithType: CollectionBase.OnValidate(Object)
  fullName: System.Collections.CollectionBase.OnValidate(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnValidate
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 96
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected virtual void OnValidate(object value)
    content.vb: Protected Overridable Sub OnValidate(value As Object)
    parameters:
    - id: value
      type: System.Object
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.CollectionBase.RemoveAt(System.Int32)
  commentId: M:System.Collections.CollectionBase.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: CollectionBase.RemoveAt(Int32)
  fullName: System.Collections.CollectionBase.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 97
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public void RemoveAt(int index)
    content.vb: Public Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  nameWithType: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: Collections.IList
  nameWithType: Collections.IList
  fullName: System.Collections.IList
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ArrayList
  commentId: T:System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  nameWithType: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
