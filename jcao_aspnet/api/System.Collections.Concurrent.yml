items:
- uid: System.Collections.Concurrent
  id: System.Collections.Concurrent
  children:
  - System.Collections.Concurrent.BlockingCollection`1
  - System.Collections.Concurrent.ConcurrentBag`1
  - System.Collections.Concurrent.ConcurrentDictionary`2
  - System.Collections.Concurrent.ConcurrentQueue`1
  - System.Collections.Concurrent.ConcurrentStack`1
  - System.Collections.Concurrent.EnumerablePartitionerOptions
  - System.Collections.Concurrent.IProducerConsumerCollection`1
  - System.Collections.Concurrent.OrderablePartitioner`1
  - System.Collections.Concurrent.Partitioner
  - System.Collections.Concurrent.Partitioner`1
  name: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
  type: Namespace
  source:
    remote:
      path: src/System.Collections.Concurrent/src/System/Collections/Concurrent/PartitionerStatic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections.Concurrent/src/System/Collections/Concurrent/PartitionerStatic.cs
    startLine: 16
  assemblies:
  - System.Collections.Concurrent
  summary: The System.Collections.Concurrent namespace provides several thread-safe collection classes that should be used in place of the corresponding types in the <xref href="System.Collections" data-throw-if-not-resolved="false"></xref> and <xref href="System.Collections.Generic" data-throw-if-not-resolved="false"></xref> namespaces whenever multiple threads are accessing the collection concurrently. However, members accessed through one of the interfaces the current collections implement, including extension methods, are not guaranteed to be thread safe and may need to be synchronized by the caller.
references:
- uid: System.Collections.Concurrent.BlockingCollection`1
  isExternal: false
  name: BlockingCollection<T>
  name.vb: BlockingCollection(Of T)
  fullName: System.Collections.Concurrent.BlockingCollection<T>
  fullName.vb: System.Collections.Concurrent.BlockingCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Concurrent.BlockingCollection`1
    name: BlockingCollection
    fullName: System.Collections.Concurrent.BlockingCollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.BlockingCollection`1
    name: BlockingCollection
    fullName: System.Collections.Concurrent.BlockingCollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentBag`1
  isExternal: false
  name: ConcurrentBag<T>
  name.vb: ConcurrentBag(Of T)
  fullName: System.Collections.Concurrent.ConcurrentBag<T>
  fullName.vb: System.Collections.Concurrent.ConcurrentBag(Of T)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentBag`1
    name: ConcurrentBag
    fullName: System.Collections.Concurrent.ConcurrentBag
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentBag`1
    name: ConcurrentBag
    fullName: System.Collections.Concurrent.ConcurrentBag
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2
  isExternal: false
  name: ConcurrentDictionary<TKey, TValue>
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentQueue`1
  isExternal: false
  name: ConcurrentQueue<T>
  name.vb: ConcurrentQueue(Of T)
  fullName: System.Collections.Concurrent.ConcurrentQueue<T>
  fullName.vb: System.Collections.Concurrent.ConcurrentQueue(Of T)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentStack`1
  isExternal: false
  name: ConcurrentStack<T>
  name.vb: ConcurrentStack(Of T)
  fullName: System.Collections.Concurrent.ConcurrentStack<T>
  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentStack`1
    name: ConcurrentStack
    fullName: System.Collections.Concurrent.ConcurrentStack
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentStack`1
    name: ConcurrentStack
    fullName: System.Collections.Concurrent.ConcurrentStack
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Concurrent.EnumerablePartitionerOptions
  parent: System.Collections.Concurrent
  isExternal: false
  name: EnumerablePartitionerOptions
  fullName: System.Collections.Concurrent.EnumerablePartitionerOptions
- uid: System.Collections.Concurrent.IProducerConsumerCollection`1
  parent: System.Collections.Concurrent
  isExternal: false
  name: IProducerConsumerCollection<T>
  name.vb: IProducerConsumerCollection(Of T)
  fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>
  fullName.vb: System.Collections.Concurrent.IProducerConsumerCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1
    name: IProducerConsumerCollection
    fullName: System.Collections.Concurrent.IProducerConsumerCollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1
    name: IProducerConsumerCollection
    fullName: System.Collections.Concurrent.IProducerConsumerCollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Concurrent.OrderablePartitioner`1
  parent: System.Collections.Concurrent
  isExternal: false
  name: Collections.Concurrent.OrderablePartitioner<>
  name.vb: Collections.Concurrent.OrderablePartitioner(Of )
  fullName: System.Collections.Concurrent.OrderablePartitioner<>
  fullName.vb: System.Collections.Concurrent.OrderablePartitioner(Of )
  spec.csharp:
  - uid: System.Collections.Concurrent.OrderablePartitioner`1
    name: Collections.Concurrent.OrderablePartitioner
    fullName: System.Collections.Concurrent.OrderablePartitioner
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.OrderablePartitioner`1
    name: Collections.Concurrent.OrderablePartitioner
    fullName: System.Collections.Concurrent.OrderablePartitioner
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Concurrent.Partitioner
  isExternal: false
  name: Partitioner
  fullName: System.Collections.Concurrent.Partitioner
- uid: System.Collections.Concurrent.Partitioner`1
  parent: System.Collections.Concurrent
  isExternal: false
  name: Collections.Concurrent.Partitioner<>
  name.vb: Collections.Concurrent.Partitioner(Of )
  fullName: System.Collections.Concurrent.Partitioner<>
  fullName.vb: System.Collections.Concurrent.Partitioner(Of )
  spec.csharp:
  - uid: System.Collections.Concurrent.Partitioner`1
    name: Collections.Concurrent.Partitioner
    fullName: System.Collections.Concurrent.Partitioner
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.Partitioner`1
    name: Collections.Concurrent.Partitioner
    fullName: System.Collections.Concurrent.Partitioner
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Concurrent
  isExternal: false
  name: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
