items:
- uid: System.Collections.Generic.Dictionary`2
  id: Dictionary`2
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.Dictionary`2.#ctor
  - System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  - System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Generic.Dictionary`2.#ctor(System.Int32)
  - System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Generic.Dictionary`2.Add(`0,`1)
  - System.Collections.Generic.Dictionary`2.Clear
  - System.Collections.Generic.Dictionary`2.Comparer
  - System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  - System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  - System.Collections.Generic.Dictionary`2.Count
  - System.Collections.Generic.Dictionary`2.GetEnumerator
  - System.Collections.Generic.Dictionary`2.Item(`0)
  - System.Collections.Generic.Dictionary`2.Keys
  - System.Collections.Generic.Dictionary`2.Remove(`0)
  - System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  - System.Collections.Generic.Dictionary`2.Values
  name: Dictionary<TKey, TValue>
  name.vb: Dictionary(Of TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 52
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Represents a collection of keys and values.To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public class Dictionary<TKey, TValue> : ICollection<KeyValuePair<TKey, TValue>>, IDictionary<TKey, TValue>, IEnumerable<KeyValuePair<TKey, TValue>>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, ICollection, IDictionary, IEnumerable'
    content.vb: Public Class Dictionary(Of TKey, TValue) Inherits ICollection(Of KeyValuePair(Of TKey, TValue)) Implements IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue), ICollection, IDictionary, IEnumerable
    typeParameters:
    - id: TKey
    - id: TValue
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  - System.Collections.ICollection
  - System.Collections.IDictionary
  - System.Collections.IEnumerable
- uid: System.Collections.Generic.Dictionary`2.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.Dictionary`2
  name: Dictionary()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Dictionary()
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 82
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> class that is empty, has the default initial capacity, and uses the default equality comparer for the key type.
  syntax:
    content: public Dictionary()
    content.vb: Public Sub New
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1})'
  parent: System.Collections.Generic.Dictionary`2
  name: Dictionary(IDictionary<TKey, TValue>)
  name.vb: Dictionary(IDictionary(Of TKey, TValue))
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Dictionary(System.Collections.Generic.IDictionary(Of TKey, TValue))
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 101
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> class that contains elements copied from the specified <xref href="System.Collections.Generic.IDictionary`2" data-throw-if-not-resolved="false"></xref> and uses the default equality comparer for the key type.
  syntax:
    content: public Dictionary(IDictionary<TKey, TValue> dictionary)
    content.vb: Public Sub New(dictionary As IDictionary(Of TKey, TValue))
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      description: The <xref href="System.Collections.Generic.IDictionary`2" data-throw-if-not-resolved="false"></xref> whose elements are copied to the new <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    description: '*dictionary* is null.'
  - type: System.ArgumentException
    description: '*dictionary* contains one or more duplicate keys.'
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.Generic.Dictionary`2
  name: Dictionary(IDictionary<TKey, TValue>, IEqualityComparer<TKey>)
  name.vb: Dictionary(IDictionary(Of TKey, TValue), IEqualityComparer(Of TKey))
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Dictionary(System.Collections.Generic.IDictionary(Of TKey, TValue), System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 103
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> class that contains elements copied from the specified <xref href="System.Collections.Generic.IDictionary`2" data-throw-if-not-resolved="false"></xref> and uses the specified <xref href="System.Collections.Generic.IEqualityComparer`1" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public Dictionary(IDictionary<TKey, TValue> dictionary, IEqualityComparer<TKey> comparer)
    content.vb: Public Sub New(dictionary As IDictionary(Of TKey, TValue), comparer As IEqualityComparer(Of TKey))
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      description: The <xref href="System.Collections.Generic.IDictionary`2" data-throw-if-not-resolved="false"></xref> whose elements are copied to the new <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The <xref href="System.Collections.Generic.IEqualityComparer`1" data-throw-if-not-resolved="false"></xref> implementation to use when comparing keys, or null to use the default <xref href="System.Collections.Generic.EqualityComparer`1" data-throw-if-not-resolved="false"></xref> for the type of the key.
  exceptions:
  - type: System.ArgumentNullException
    description: '*dictionary* is null.'
  - type: System.ArgumentException
    description: '*dictionary* contains one or more duplicate keys.'
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.Generic.Dictionary`2
  name: Dictionary(IEqualityComparer<TKey>)
  name.vb: Dictionary(IEqualityComparer(Of TKey))
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Dictionary(System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 86
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> class that is empty, has the default initial capacity, and uses the specified <xref href="System.Collections.Generic.IEqualityComparer`1" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public Dictionary(IEqualityComparer<TKey> comparer)
    content.vb: Public Sub New(comparer As IEqualityComparer(Of TKey))
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The <xref href="System.Collections.Generic.IEqualityComparer`1" data-throw-if-not-resolved="false"></xref> implementation to use when comparing keys, or null to use the default <xref href="System.Collections.Generic.EqualityComparer`1" data-throw-if-not-resolved="false"></xref> for the type of the key.
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Generic.Dictionary`2
  name: Dictionary(Int32)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Dictionary(System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 84
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> class that is empty, has the specified initial capacity, and uses the default equality comparer for the key type.
  syntax:
    content: public Dictionary(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: The initial number of elements that the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> can contain.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*capacity* is less than 0.'
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.Generic.Dictionary`2
  name: Dictionary(Int32, IEqualityComparer<TKey>)
  name.vb: Dictionary(Int32, IEqualityComparer(Of TKey))
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Int32, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Dictionary(System.Int32, System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 88
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> class that is empty, has the specified initial capacity, and uses the specified <xref href="System.Collections.Generic.IEqualityComparer`1" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public Dictionary(int capacity, IEqualityComparer<TKey> comparer)
    content.vb: Public Sub New(capacity As Integer, comparer As IEqualityComparer(Of TKey))
    parameters:
    - id: capacity
      type: System.Int32
      description: The initial number of elements that the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> can contain.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The <xref href="System.Collections.Generic.IEqualityComparer`1" data-throw-if-not-resolved="false"></xref> implementation to use when comparing keys, or null to use the default <xref href="System.Collections.Generic.EqualityComparer`1" data-throw-if-not-resolved="false"></xref> for the type of the key.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*capacity* is less than 0.'
- uid: System.Collections.Generic.Dictionary`2.Comparer
  id: Comparer
  parent: System.Collections.Generic.Dictionary`2
  name: Comparer
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Comparer
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Comparer
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 138
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Gets the <xref href="System.Collections.Generic.IEqualityComparer`1" data-throw-if-not-resolved="false"></xref> that is used to determine equality of keys for the dictionary.
  syntax:
    content: public IEqualityComparer<TKey> Comparer { get; }
    content.vb: Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)
    parameters: []
    return:
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The <xref href="System.Collections.Generic.IEqualityComparer`1" data-throw-if-not-resolved="false"></xref> generic interface implementation that is used to determine equality of keys for the current <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> and to provide hash values for the keys.
- uid: System.Collections.Generic.Dictionary`2.Count
  id: Count
  parent: System.Collections.Generic.Dictionary`2
  name: Count
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Count
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Count
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 144
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Gets the number of key/value pairs contained in the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of key/value pairs contained in the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
- uid: System.Collections.Generic.Dictionary`2.Item(`0)
  id: Item(`0)
  parent: System.Collections.Generic.Dictionary`2
  name: Item[TKey]
  name.vb: Item(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Item[TKey]
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Item(TKey)
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 192
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Gets or sets the value associated with the specified key.
  syntax:
    content: public TValue this[TKey key] { get; set; }
    content.vb: Public Property Item(key As TKey) As TValue
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the value to get or set.
    return:
      type: '{TValue}'
      description: The value associated with the specified key. If the specified key is not found, a get operation throws a <xref href="System.Collections.Generic.KeyNotFoundException" data-throw-if-not-resolved="false"></xref>, and a set operation creates a new element with the specified key.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
  - type: System.Collections.Generic.KeyNotFoundException
    description: The property is retrieved and *key* does not exist in the collection.
- uid: System.Collections.Generic.Dictionary`2.Keys
  id: Keys
  parent: System.Collections.Generic.Dictionary`2
  name: Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Keys
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 148
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Gets a collection containing the keys in the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public Dictionary<TKey, TValue>.KeyCollection Keys { get; }
    content.vb: Public ReadOnly Property Keys As Dictionary(Of TKey, TValue).KeyCollection
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary`2.KeyCollection
      description: A <xref href="System.Collections.Generic.Dictionary`2.KeyCollection" data-throw-if-not-resolved="false"></xref> containing the keys in the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
- uid: System.Collections.Generic.Dictionary`2.Values
  id: Values
  parent: System.Collections.Generic.Dictionary`2
  name: Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Values
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 170
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Gets a collection containing the values in the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public Dictionary<TKey, TValue>.ValueCollection Values { get; }
    content.vb: Public ReadOnly Property Values As Dictionary(Of TKey, TValue).ValueCollection
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary`2.ValueCollection
      description: A <xref href="System.Collections.Generic.Dictionary`2.ValueCollection" data-throw-if-not-resolved="false"></xref> containing the values in the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
- uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
  id: Add(`0,`1)
  parent: System.Collections.Generic.Dictionary`2
  name: Add(TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Add(TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 204
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Adds the specified key and value to the dictionary.
  syntax:
    content: public void Add(TKey key, TValue value)
    content.vb: Public Sub Add(key As TKey, value As TValue)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to add.
    - id: value
      type: '{TValue}'
      description: The value of the element to add. The value can be null for reference types.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
  - type: System.ArgumentException
    description: An element with the same key already exists in the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
- uid: System.Collections.Generic.Dictionary`2.Clear
  id: Clear
  parent: System.Collections.Generic.Dictionary`2
  name: Clear()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Clear()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Clear()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 229
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Removes all keys and values from the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
- uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: System.Collections.Generic.Dictionary`2
  name: ContainsKey(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsKey(TKey)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 240
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Determines whether the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> contains the specified key.
  syntax:
    content: public bool ContainsKey(TKey key)
    content.vb: Public Function ContainsKey(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to locate in the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> contains an element with the specified key; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
- uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  id: ContainsValue(`1)
  parent: System.Collections.Generic.Dictionary`2
  name: ContainsValue(TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsValue(TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsValue(TValue)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 244
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Determines whether the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> contains a specific value.
  syntax:
    content: public bool ContainsValue(TValue value)
    content.vb: Public Function ContainsValue(value As TValue) As Boolean
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to locate in the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>. The value can be null for reference types.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> contains an element with the specified value; otherwise, false.
- uid: System.Collections.Generic.Dictionary`2.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Generic.Dictionary`2
  name: GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 281
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Returns an enumerator that iterates through the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public Dictionary<TKey, TValue>.Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As Dictionary(Of TKey, TValue).Enumerator
    return:
      type: System.Collections.Generic.Dictionary`2.Enumerator
      description: A <xref href="System.Collections.Generic.Dictionary`2.Enumerator" data-throw-if-not-resolved="false"></xref> structure for the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
- uid: System.Collections.Generic.Dictionary`2.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Generic.Dictionary`2
  name: Remove(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove(TKey)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 484
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Removes the value with the specified key from the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public bool Remove(TKey key)
    content.vb: Public Function Remove(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to remove.
    return:
      type: System.Boolean
      description: true if the element is successfully found and removed; otherwise, false.  This method returns false if *key* is not found in the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
- uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: System.Collections.Generic.Dictionary`2
  name: TryGetValue(TKey, out TValue)
  name.vb: TryGetValue(TKey, ByRef TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 515
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Gets the value associated with the specified key.
  syntax:
    content: public bool TryGetValue(TKey key, out TValue value)
    content.vb: Public Function TryGetValue(key As TKey, ByRef value As TValue) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the value to get.
    - id: value
      type: '{TValue}'
      description: When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the *value* parameter. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="false"></xref> contains an element with the specified key; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey, TValue>
  name.vb: IDictionary(Of TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<KeyValuePair<TKey, TValue>>
  name.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<TKey, TValue>
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: Collections.ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: Collections.IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IDictionary`2
  isExternal: false
  name: Collections.Generic.IDictionary<, >
  name.vb: Collections.Generic.IDictionary(Of , )
  fullName: System.Collections.Generic.IDictionary<, >
  fullName.vb: System.Collections.Generic.IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  name.vb: Collections.Generic.IEnumerable(Of )
  fullName: System.Collections.Generic.IEnumerable<>
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  parent: System.Collections.Generic
  isExternal: false
  name: IReadOnlyCollection<>
  name.vb: IReadOnlyCollection(Of )
  fullName: System.Collections.Generic.IReadOnlyCollection<>
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: false
  name: IReadOnlyDictionary<, >
  name.vb: IReadOnlyDictionary(Of , )
  fullName: System.Collections.Generic.IReadOnlyDictionary<, >
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IEqualityComparer{{TKey}}
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<TKey>
  name.vb: IEqualityComparer(Of TKey)
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: IEqualityComparer<>
  name.vb: IEqualityComparer(Of )
  fullName: System.Collections.Generic.IEqualityComparer<>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: '{TKey}'
  isExternal: false
  name: TKey
  fullName: TKey
- uid: '{TValue}'
  isExternal: false
  name: TValue
  fullName: TValue
- uid: System.Collections.Generic.Dictionary`2.KeyCollection
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary.KeyCollection<>
  name.vb: Dictionary.KeyCollection(Of )
  fullName: System.Collections.Generic.Dictionary.KeyCollection<>
  fullName.vb: System.Collections.Generic.Dictionary.KeyCollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.KeyCollection
    name: Dictionary.KeyCollection
    fullName: System.Collections.Generic.Dictionary.KeyCollection
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.KeyCollection
    name: Dictionary.KeyCollection
    fullName: System.Collections.Generic.Dictionary.KeyCollection
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.ValueCollection
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary.ValueCollection<>
  name.vb: Dictionary.ValueCollection(Of )
  fullName: System.Collections.Generic.Dictionary.ValueCollection<>
  fullName.vb: System.Collections.Generic.Dictionary.ValueCollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ValueCollection
    name: Dictionary.ValueCollection
    fullName: System.Collections.Generic.Dictionary.ValueCollection
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ValueCollection
    name: Dictionary.ValueCollection
    fullName: System.Collections.Generic.Dictionary.ValueCollection
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.Dictionary`2.Enumerator
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary.Enumerator<>
  name.vb: Dictionary.Enumerator(Of )
  fullName: System.Collections.Generic.Dictionary.Enumerator<>
  fullName.vb: System.Collections.Generic.Dictionary.Enumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Enumerator
    name: Dictionary.Enumerator
    fullName: System.Collections.Generic.Dictionary.Enumerator
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Enumerator
    name: Dictionary.Enumerator
    fullName: System.Collections.Generic.Dictionary.Enumerator
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Collections.Generic.KeyNotFoundException
  isExternal: false
  name: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
