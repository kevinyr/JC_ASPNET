items:
- uid: System.Collections.Generic.LinkedListNode`1
  commentId: T:System.Collections.Generic.LinkedListNode`1
  id: LinkedListNode`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.LinkedListNode`1.#ctor(`0)
  - System.Collections.Generic.LinkedListNode`1.List
  - System.Collections.Generic.LinkedListNode`1.Next
  - System.Collections.Generic.LinkedListNode`1.Previous
  - System.Collections.Generic.LinkedListNode`1.Value
  langs:
  - csharp
  - vb
  name: LinkedListNode<T>
  nameWithType: LinkedListNode<T>
  fullName: System.Collections.Generic.LinkedListNode<T>
  type: Class
  source:
    remote:
      path: src/System.Collections/ref/System.Collections.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LinkedListNode
    path: src/System.Collections/ref/System.Collections.cs
    startLine: 250
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: 'public sealed class LinkedListNode<T> : object'
    content.vb: >-
      Public NotInheritable Class LinkedListNode(Of T)
          Inherits Object
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  nameWithType.vb: LinkedListNode(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: System.Collections.Generic.LinkedListNode(Of T)
  name.vb: LinkedListNode(Of T)
- uid: System.Collections.Generic.LinkedListNode`1.#ctor(`0)
  commentId: M:System.Collections.Generic.LinkedListNode`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: System.Collections.Generic.LinkedListNode`1
  langs:
  - csharp
  - vb
  name: LinkedListNode(T)
  nameWithType: LinkedListNode<T>.LinkedListNode(T)
  fullName: System.Collections.Generic.LinkedListNode<T>.LinkedListNode(T)
  type: Constructor
  source:
    remote:
      path: src/System.Collections/ref/System.Collections.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections/ref/System.Collections.cs
    startLine: 252
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedListNode(T value)
    content.vb: Public Sub New(value As T)
    parameters:
    - id: value
      type: '{T}'
  nameWithType.vb: LinkedListNode(Of T).LinkedListNode(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.LinkedListNode(Of T).LinkedListNode(T)
- uid: System.Collections.Generic.LinkedListNode`1.List
  commentId: P:System.Collections.Generic.LinkedListNode`1.List
  id: List
  parent: System.Collections.Generic.LinkedListNode`1
  langs:
  - csharp
  - vb
  name: List
  nameWithType: LinkedListNode<T>.List
  fullName: System.Collections.Generic.LinkedListNode<T>.List
  type: Property
  source:
    remote:
      path: src/System.Collections/ref/System.Collections.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: List
    path: src/System.Collections/ref/System.Collections.cs
    startLine: 253
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedList<T> List { get; }
    content.vb: Public ReadOnly Property List As LinkedList(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.LinkedList{{T}}
  nameWithType.vb: LinkedListNode(Of T).List
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Generic.LinkedListNode(Of T).List
- uid: System.Collections.Generic.LinkedListNode`1.Next
  commentId: P:System.Collections.Generic.LinkedListNode`1.Next
  id: Next
  parent: System.Collections.Generic.LinkedListNode`1
  langs:
  - csharp
  - vb
  name: Next
  nameWithType: LinkedListNode<T>.Next
  fullName: System.Collections.Generic.LinkedListNode<T>.Next
  type: Property
  source:
    remote:
      path: src/System.Collections/ref/System.Collections.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Next
    path: src/System.Collections/ref/System.Collections.cs
    startLine: 254
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedListNode<T> Next { get; }
    content.vb: Public ReadOnly Property Next As LinkedListNode(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.LinkedListNode`1
  nameWithType.vb: LinkedListNode(Of T).Next
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Generic.LinkedListNode(Of T).Next
- uid: System.Collections.Generic.LinkedListNode`1.Previous
  commentId: P:System.Collections.Generic.LinkedListNode`1.Previous
  id: Previous
  parent: System.Collections.Generic.LinkedListNode`1
  langs:
  - csharp
  - vb
  name: Previous
  nameWithType: LinkedListNode<T>.Previous
  fullName: System.Collections.Generic.LinkedListNode<T>.Previous
  type: Property
  source:
    remote:
      path: src/System.Collections/ref/System.Collections.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Previous
    path: src/System.Collections/ref/System.Collections.cs
    startLine: 255
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedListNode<T> Previous { get; }
    content.vb: Public ReadOnly Property Previous As LinkedListNode(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.LinkedListNode`1
  nameWithType.vb: LinkedListNode(Of T).Previous
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Generic.LinkedListNode(Of T).Previous
- uid: System.Collections.Generic.LinkedListNode`1.Value
  commentId: P:System.Collections.Generic.LinkedListNode`1.Value
  id: Value
  parent: System.Collections.Generic.LinkedListNode`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: LinkedListNode<T>.Value
  fullName: System.Collections.Generic.LinkedListNode<T>.Value
  type: Property
  source:
    remote:
      path: src/System.Collections/ref/System.Collections.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Collections/ref/System.Collections.cs
    startLine: 256
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public T Value { get; set; }
    content.vb: Public Property Value As T
    parameters: []
    return:
      type: '{T}'
  nameWithType.vb: LinkedListNode(Of T).Value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.LinkedListNode(Of T).Value
references:
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.LinkedList{{T}}
  commentId: T:System.Collections.Generic.LinkedList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.LinkedList`1
  name: LinkedList<T>
  nameWithType: LinkedList<T>
  fullName: System.Collections.Generic.LinkedList<T>
  nameWithType.vb: LinkedList(Of T)
  fullname.vb: System.Collections.Generic.LinkedList(Of T)
  name.vb: LinkedList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    nameWithType: LinkedList
    fullName: System.Collections.Generic.LinkedList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    nameWithType: LinkedList
    fullName: System.Collections.Generic.LinkedList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.LinkedList`1
  commentId: T:System.Collections.Generic.LinkedList`1
  isExternal: false
  name: LinkedList<T>
  nameWithType: LinkedList<T>
  fullName: System.Collections.Generic.LinkedList<T>
  nameWithType.vb: LinkedList(Of T)
  fullname.vb: System.Collections.Generic.LinkedList(Of T)
  name.vb: LinkedList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    nameWithType: LinkedList
    fullName: System.Collections.Generic.LinkedList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    nameWithType: LinkedList
    fullName: System.Collections.Generic.LinkedList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.LinkedListNode`1
  commentId: T:System.Collections.Generic.LinkedListNode`1
  parent: System.Collections.Generic
  isExternal: false
  name: LinkedListNode<T>
  nameWithType: LinkedListNode<T>
  fullName: System.Collections.Generic.LinkedListNode<T>
  nameWithType.vb: LinkedListNode(Of T)
  fullname.vb: System.Collections.Generic.LinkedListNode(Of T)
  name.vb: LinkedListNode(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.LinkedListNode`1
    name: LinkedListNode
    nameWithType: LinkedListNode
    fullName: System.Collections.Generic.LinkedListNode
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedListNode`1
    name: LinkedListNode
    nameWithType: LinkedListNode
    fullName: System.Collections.Generic.LinkedListNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
