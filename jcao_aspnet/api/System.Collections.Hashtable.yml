items:
- uid: System.Collections.Hashtable
  commentId: T:System.Collections.Hashtable
  id: Hashtable
  parent: System.Collections
  children:
  - System.Collections.Hashtable.#ctor
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Int32)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.Add(System.Object,System.Object)
  - System.Collections.Hashtable.Clear
  - System.Collections.Hashtable.Clone
  - System.Collections.Hashtable.Contains(System.Object)
  - System.Collections.Hashtable.ContainsKey(System.Object)
  - System.Collections.Hashtable.ContainsValue(System.Object)
  - System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  - System.Collections.Hashtable.Count
  - System.Collections.Hashtable.EqualityComparer
  - System.Collections.Hashtable.GetEnumerator
  - System.Collections.Hashtable.GetHash(System.Object)
  - System.Collections.Hashtable.IsFixedSize
  - System.Collections.Hashtable.IsReadOnly
  - System.Collections.Hashtable.IsSynchronized
  - System.Collections.Hashtable.Item(System.Object)
  - System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  - System.Collections.Hashtable.Keys
  - System.Collections.Hashtable.Remove(System.Object)
  - System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  - System.Collections.Hashtable.SyncRoot
  - System.Collections.Hashtable.Values
  langs:
  - csharp
  - vb
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
  type: Class
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Hashtable
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 143
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: 'public class Hashtable : ICollection, IDictionary, IEnumerable'
    content.vb: >-
      Public Class Hashtable
          Inherits ICollection
          Implements IDictionary, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Collections.Hashtable.#ctor
  commentId: M:System.Collections.Hashtable.#ctor
  id: '#ctor'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable()
  nameWithType: Hashtable.Hashtable()
  fullName: System.Collections.Hashtable.Hashtable()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 145
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public Hashtable()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  commentId: M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  id: '#ctor(System.Collections.IDictionary)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(IDictionary)
  nameWithType: Hashtable.Hashtable(IDictionary)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IDictionary)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 146
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public Hashtable(IDictionary d)
    content.vb: Public Sub New(d As IDictionary)
    parameters:
    - id: d
      type: System.Collections.IDictionary
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(IDictionary, IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IDictionary, IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IDictionary, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 147
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public Hashtable(IDictionary d, IEqualityComparer equalityComparer)
    content.vb: Public Sub New(d As IDictionary, equalityComparer As IEqualityComparer)
    parameters:
    - id: d
      type: System.Collections.IDictionary
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  commentId: M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  id: '#ctor(System.Collections.IDictionary,System.Single)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(IDictionary, Single)
  nameWithType: Hashtable.Hashtable(IDictionary, Single)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IDictionary, System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 148
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public Hashtable(IDictionary d, float loadFactor)
    content.vb: Public Sub New(d As IDictionary, loadFactor As Single)
    parameters:
    - id: d
      type: System.Collections.IDictionary
    - id: loadFactor
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(IDictionary, Single, IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IDictionary, Single, IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IDictionary, System.Single, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 149
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public Hashtable(IDictionary d, float loadFactor, IEqualityComparer equalityComparer)
    content.vb: Public Sub New(d As IDictionary, loadFactor As Single, equalityComparer As IEqualityComparer)
    parameters:
    - id: d
      type: System.Collections.IDictionary
    - id: loadFactor
      type: System.Single
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 150
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public Hashtable(IEqualityComparer equalityComparer)
    content.vb: Public Sub New(equalityComparer As IEqualityComparer)
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Int32)
  commentId: M:System.Collections.Hashtable.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(Int32)
  nameWithType: Hashtable.Hashtable(Int32)
  fullName: System.Collections.Hashtable.Hashtable(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 151
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public Hashtable(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(Int32, IEqualityComparer)
  nameWithType: Hashtable.Hashtable(Int32, IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Int32, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 152
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public Hashtable(int capacity, IEqualityComparer equalityComparer)
    content.vb: Public Sub New(capacity As Integer, equalityComparer As IEqualityComparer)
    parameters:
    - id: capacity
      type: System.Int32
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  commentId: M:System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  id: '#ctor(System.Int32,System.Single)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(Int32, Single)
  nameWithType: Hashtable.Hashtable(Int32, Single)
  fullName: System.Collections.Hashtable.Hashtable(System.Int32, System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 153
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public Hashtable(int capacity, float loadFactor)
    content.vb: Public Sub New(capacity As Integer, loadFactor As Single)
    parameters:
    - id: capacity
      type: System.Int32
    - id: loadFactor
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(Int32, Single, IEqualityComparer)
  nameWithType: Hashtable.Hashtable(Int32, Single, IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Int32, System.Single, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 154
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public Hashtable(int capacity, float loadFactor, IEqualityComparer equalityComparer)
    content.vb: Public Sub New(capacity As Integer, loadFactor As Single, equalityComparer As IEqualityComparer)
    parameters:
    - id: capacity
      type: System.Int32
    - id: loadFactor
      type: System.Single
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.Count
  commentId: P:System.Collections.Hashtable.Count
  id: Count
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: Hashtable.Count
  fullName: System.Collections.Hashtable.Count
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 155
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.EqualityComparer
  commentId: P:System.Collections.Hashtable.EqualityComparer
  id: EqualityComparer
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: EqualityComparer
  nameWithType: Hashtable.EqualityComparer
  fullName: System.Collections.Hashtable.EqualityComparer
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EqualityComparer
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 156
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected IEqualityComparer EqualityComparer { get; }
    content.vb: Protected ReadOnly Property EqualityComparer As IEqualityComparer
    parameters: []
    return:
      type: System.Collections.IEqualityComparer
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Collections.Hashtable.IsFixedSize
  commentId: P:System.Collections.Hashtable.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: IsFixedSize
  nameWithType: Hashtable.IsFixedSize
  fullName: System.Collections.Hashtable.IsFixedSize
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsFixedSize
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 157
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual bool IsFixedSize { get; }
    content.vb: Public Overridable ReadOnly Property IsFixedSize As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.IsReadOnly
  commentId: P:System.Collections.Hashtable.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: Hashtable.IsReadOnly
  fullName: System.Collections.Hashtable.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 158
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual bool IsReadOnly { get; }
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.IsSynchronized
  commentId: P:System.Collections.Hashtable.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: IsSynchronized
  nameWithType: Hashtable.IsSynchronized
  fullName: System.Collections.Hashtable.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSynchronized
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 159
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual bool IsSynchronized { get; }
    content.vb: Public Overridable ReadOnly Property IsSynchronized As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.Item(System.Object)
  commentId: P:System.Collections.Hashtable.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Item[Object]
  nameWithType: Hashtable.Item[Object]
  fullName: System.Collections.Hashtable.Item[System.Object]
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 160
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual object this[object key] { get; set; }
    content.vb: Public Overridable Property Item(key As Object) As Object
    parameters:
    - id: key
      type: System.Object
    return:
      type: System.Object
  nameWithType.vb: Hashtable.Item(Object)
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Collections.Hashtable.Item(System.Object)
  name.vb: Item(Object)
- uid: System.Collections.Hashtable.Keys
  commentId: P:System.Collections.Hashtable.Keys
  id: Keys
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: Hashtable.Keys
  fullName: System.Collections.Hashtable.Keys
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Keys
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 161
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual ICollection Keys { get; }
    content.vb: Public Overridable ReadOnly Property Keys As ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.SyncRoot
  commentId: P:System.Collections.Hashtable.SyncRoot
  id: SyncRoot
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: SyncRoot
  nameWithType: Hashtable.SyncRoot
  fullName: System.Collections.Hashtable.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SyncRoot
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 162
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual object SyncRoot { get; }
    content.vb: Public Overridable ReadOnly Property SyncRoot As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.Values
  commentId: P:System.Collections.Hashtable.Values
  id: Values
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: Hashtable.Values
  fullName: System.Collections.Hashtable.Values
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Values
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 163
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual ICollection Values { get; }
    content.vb: Public Overridable ReadOnly Property Values As ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.Add(System.Object,System.Object)
  commentId: M:System.Collections.Hashtable.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Add(Object, Object)
  nameWithType: Hashtable.Add(Object, Object)
  fullName: System.Collections.Hashtable.Add(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 164
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void Add(object key, object value)
    content.vb: Public Overridable Sub Add(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
    - id: value
      type: System.Object
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.Clear
  commentId: M:System.Collections.Hashtable.Clear
  id: Clear
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: Hashtable.Clear()
  fullName: System.Collections.Hashtable.Clear()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 165
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.Clone
  commentId: M:System.Collections.Hashtable.Clone
  id: Clone
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Hashtable.Clone()
  fullName: System.Collections.Hashtable.Clone()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clone
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 166
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual object Clone()
    content.vb: Public Overridable Function Clone As Object
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.Contains(System.Object)
  commentId: M:System.Collections.Hashtable.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Contains(Object)
  nameWithType: Hashtable.Contains(Object)
  fullName: System.Collections.Hashtable.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 167
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual bool Contains(object key)
    content.vb: Public Overridable Function Contains(key As Object) As Boolean
    parameters:
    - id: key
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.ContainsKey(System.Object)
  commentId: M:System.Collections.Hashtable.ContainsKey(System.Object)
  id: ContainsKey(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: ContainsKey(Object)
  nameWithType: Hashtable.ContainsKey(Object)
  fullName: System.Collections.Hashtable.ContainsKey(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContainsKey
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 168
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual bool ContainsKey(object key)
    content.vb: Public Overridable Function ContainsKey(key As Object) As Boolean
    parameters:
    - id: key
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.ContainsValue(System.Object)
  commentId: M:System.Collections.Hashtable.ContainsValue(System.Object)
  id: ContainsValue(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: ContainsValue(Object)
  nameWithType: Hashtable.ContainsValue(Object)
  fullName: System.Collections.Hashtable.ContainsValue(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContainsValue
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 169
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual bool ContainsValue(object value)
    content.vb: Public Overridable Function ContainsValue(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  nameWithType: Hashtable.CopyTo(Array, Int32)
  fullName: System.Collections.Hashtable.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 170
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void CopyTo(Array array, int arrayIndex)
    content.vb: Public Overridable Sub CopyTo(array As Array, arrayIndex As Integer)
    parameters:
    - id: array
      type: System.Array
    - id: arrayIndex
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.GetEnumerator
  commentId: M:System.Collections.Hashtable.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: Hashtable.GetEnumerator()
  fullName: System.Collections.Hashtable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 171
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual IDictionaryEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IDictionaryEnumerator
    return:
      type: System.Collections.IDictionaryEnumerator
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.GetHash(System.Object)
  commentId: M:System.Collections.Hashtable.GetHash(System.Object)
  id: GetHash(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: GetHash(Object)
  nameWithType: Hashtable.GetHash(Object)
  fullName: System.Collections.Hashtable.GetHash(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHash
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 172
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected virtual int GetHash(object key)
    content.vb: Protected Overridable Function GetHash(key As Object) As Integer
    parameters:
    - id: key
      type: System.Object
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  commentId: M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  id: KeyEquals(System.Object,System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: KeyEquals(Object, Object)
  nameWithType: Hashtable.KeyEquals(Object, Object)
  fullName: System.Collections.Hashtable.KeyEquals(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeyEquals
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 173
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: protected virtual bool KeyEquals(object item, object key)
    content.vb: Protected Overridable Function KeyEquals(item As Object, key As Object) As Boolean
    parameters:
    - id: item
      type: System.Object
    - id: key
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.Hashtable.Remove(System.Object)
  commentId: M:System.Collections.Hashtable.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Remove(Object)
  nameWithType: Hashtable.Remove(Object)
  fullName: System.Collections.Hashtable.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 174
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public virtual void Remove(object key)
    content.vb: Public Overridable Sub Remove(key As Object)
    parameters:
    - id: key
      type: System.Object
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  commentId: M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  id: Synchronized(System.Collections.Hashtable)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Synchronized(Hashtable)
  nameWithType: Hashtable.Synchronized(Hashtable)
  fullName: System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Synchronized
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 175
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  syntax:
    content: public static Hashtable Synchronized(Hashtable table)
    content.vb: Public Shared Function Synchronized(table As Hashtable) As Hashtable
    parameters:
    - id: table
      type: System.Collections.Hashtable
    return:
      type: System.Collections.Hashtable
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: Collections.IDictionary
  nameWithType: Collections.IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  nameWithType: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.IEqualityComparer
  commentId: T:System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: Collections.IEqualityComparer
  nameWithType: Collections.IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: Collections.ICollection
  nameWithType: Collections.ICollection
  fullName: System.Collections.ICollection
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.IDictionaryEnumerator
  commentId: T:System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IDictionaryEnumerator
  nameWithType: Collections.IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.Hashtable
  commentId: T:System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Collections.Hashtable
  nameWithType: Collections.Hashtable
  fullName: System.Collections.Hashtable
