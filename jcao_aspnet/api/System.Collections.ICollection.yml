items:
- uid: System.Collections.ICollection
  id: ICollection
  parent: System.Collections
  children:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  - System.Collections.ICollection.Count
  - System.Collections.ICollection.IsSynchronized
  - System.Collections.ICollection.SyncRoot
  name: ICollection
  fullName: System.Collections.ICollection
  type: Interface
  source:
    remote: &o0
      path: src/mscorlib/src/System/Collections/ICollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Collections/ICollection.cs
    startLine: 24
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Defines size, enumerators, and synchronization methods for all nongeneric collections.
  syntax:
    content: 'public interface ICollection : IEnumerable'
    content.vb: Public Interface ICollection Inherits IEnumerable
  inheritedMembers:
  - System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.ICollection.Count
  id: Count
  parent: System.Collections.ICollection
  name: Count
  fullName: System.Collections.ICollection.Count
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ICollection.cs
    startLine: 34
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Gets the number of elements contained in the <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: int Count { get; }
    content.vb: ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref>.
- uid: System.Collections.ICollection.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.ICollection
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ICollection.cs
    startLine: 80
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Gets a value indicating whether access to the <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> is synchronized (thread safe).
  syntax:
    content: bool IsSynchronized { get; }
    content.vb: ReadOnly Property IsSynchronized As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if access to the <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> is synchronized (thread safe); otherwise, false.
- uid: System.Collections.ICollection.SyncRoot
  id: SyncRoot
  parent: System.Collections.ICollection
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ICollection.cs
    startLine: 71
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Gets an object that can be used to synchronize access to the <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: object SyncRoot { get; }
    content.vb: ReadOnly Property SyncRoot As Object
    parameters: []
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref>.
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ICollection.cs
    startLine: 31
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Copies the elements of the <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> to an <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at a particular <xref href="System.Array" data-throw-if-not-resolved="false"></xref> index.
  syntax:
    content: void CopyTo(Array array, int index)
    content.vb: Sub CopyTo(array As Array, index As Integer)
    parameters:
    - id: array
      type: System.Array
      description: The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the elements copied from <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing.
    - id: index
      type: System.Int32
      description: The zero-based index in *array* at which copying begins.
  exceptions:
  - type: System.ArgumentNullException
    description: '*array* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*index* is less than zero.'
  - type: System.ArgumentException
    description: '*array* is multidimensional.-or- The number of elements in the source <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> is greater than the available space from *index* to the end of the destination *array*.-or-The type of the source <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> cannot be cast automatically to the type of the destination *array*.'
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
