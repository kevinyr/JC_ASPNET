items:
- uid: System.Collections.IComparer
  id: IComparer
  parent: System.Collections
  children:
  - System.Collections.IComparer.Compare(System.Object,System.Object)
  name: IComparer
  fullName: System.Collections.IComparer
  type: Interface
  source:
    remote: &o0
      path: src/mscorlib/src/System/Collections/IComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Collections/IComparer.cs
    startLine: 23
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Exposes a method that compares two objects.
  syntax:
    content: public interface IComparer
    content.vb: Public Interface IComparer
- uid: System.Collections.IComparer.Compare(System.Object,System.Object)
  id: Compare(System.Object,System.Object)
  parent: System.Collections.IComparer
  name: Compare(Object, Object)
  fullName: System.Collections.IComparer.Compare(System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/IComparer.cs
    startLine: 29
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
  syntax:
    content: int Compare(object x, object y)
    content.vb: Function Compare(x As Object, y As Object) As Integer
    parameters:
    - id: x
      type: System.Object
      description: The first object to compare.
    - id: y
      type: System.Object
      description: The second object to compare.
    return:
      type: System.Int32
      description: A signed integer that indicates the relative values of *x* and *y*, as shown in the following table.Value Meaning Less than zero *x* is less than *y*. Zero *x* equals *y*. Greater than zero *x* is greater than *y*.
  exceptions:
  - type: System.ArgumentException
    description: Neither *x* nor *y* implements the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> interface.-or- *x* and *y* are of different types and neither one can handle comparisons with the other.
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
