items:
- uid: System.Collections.Specialized.NameObjectCollectionBase
  commentId: T:System.Collections.Specialized.NameObjectCollectionBase
  id: NameObjectCollectionBase
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  langs:
  - csharp
  - vb
  name: NameObjectCollectionBase
  nameWithType: NameObjectCollectionBase
  fullName: System.Collections.Specialized.NameObjectCollectionBase
  type: Class
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NameObjectCollectionBase
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 89
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: 'public abstract class NameObjectCollectionBase : ICollection, IEnumerable'
    content.vb: >-
      Public MustInherit Class NameObjectCollectionBase
          Inherits ICollection
          Implements IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: NameObjectCollectionBase()
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 91
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected NameObjectCollectionBase()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: NameObjectCollectionBase(IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 92
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected NameObjectCollectionBase(IEqualityComparer equalityComparer)
    content.vb: Protected Sub New(equalityComparer As IEqualityComparer)
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: NameObjectCollectionBase(Int32)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 93
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected NameObjectCollectionBase(int capacity)
    content.vb: Protected Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: NameObjectCollectionBase(Int32, IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32, IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Int32, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 94
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected NameObjectCollectionBase(int capacity, IEqualityComparer equalityComparer)
    content.vb: Protected Sub New(capacity As Integer, equalityComparer As IEqualityComparer)
    parameters:
    - id: capacity
      type: System.Int32
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.Count
  id: Count
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: NameObjectCollectionBase.Count
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 95
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: NameObjectCollectionBase.IsReadOnly
  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 96
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected bool IsReadOnly { get; set; }
    content.vb: Protected Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.Keys
  id: Keys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: NameObjectCollectionBase.Keys
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Keys
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 97
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: public virtual NameObjectCollectionBase.KeysCollection Keys { get; }
    content.vb: Public Overridable ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection
    parameters: []
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  id: BaseAdd(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseAdd(String, Object)
  nameWithType: NameObjectCollectionBase.BaseAdd(String, Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseAdd
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 100
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected void BaseAdd(string name, object value)
    content.vb: Protected Sub BaseAdd(name As String, value As Object)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  id: BaseClear
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseClear()
  nameWithType: NameObjectCollectionBase.BaseClear()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseClear
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 101
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected void BaseClear()
    content.vb: Protected Sub BaseClear
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  id: BaseGet(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseGet(Int32)
  nameWithType: NameObjectCollectionBase.BaseGet(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseGet
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 102
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected object BaseGet(int index)
    content.vb: Protected Function BaseGet(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  id: BaseGet(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseGet(String)
  nameWithType: NameObjectCollectionBase.BaseGet(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseGet
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 103
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected object BaseGet(string name)
    content.vb: Protected Function BaseGet(name As String) As Object
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  id: BaseGetAllKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseGetAllKeys()
  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseGetAllKeys
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 104
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected string[] BaseGetAllKeys()
    content.vb: Protected Function BaseGetAllKeys As String()
    return:
      type: System.String[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  id: BaseGetAllValues
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseGetAllValues()
  nameWithType: NameObjectCollectionBase.BaseGetAllValues()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseGetAllValues
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 105
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected object[] BaseGetAllValues()
    content.vb: Protected Function BaseGetAllValues As Object()
    return:
      type: System.Object[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  id: BaseGetAllValues(System.Type)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseGetAllValues(Type)
  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseGetAllValues
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 106
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected object[] BaseGetAllValues(Type type)
    content.vb: Protected Function BaseGetAllValues(type As Type) As Object()
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Object[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  id: BaseGetKey(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseGetKey(Int32)
  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseGetKey
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 107
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected string BaseGetKey(int index)
    content.vb: Protected Function BaseGetKey(index As Integer) As String
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  id: BaseHasKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseHasKeys()
  nameWithType: NameObjectCollectionBase.BaseHasKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseHasKeys
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 108
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected bool BaseHasKeys()
    content.vb: Protected Function BaseHasKeys As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  id: BaseRemove(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseRemove(String)
  nameWithType: NameObjectCollectionBase.BaseRemove(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseRemove
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 109
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected void BaseRemove(string name)
    content.vb: Protected Sub BaseRemove(name As String)
    parameters:
    - id: name
      type: System.String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  id: BaseRemoveAt(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseRemoveAt(Int32)
  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseRemoveAt
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 110
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected void BaseRemoveAt(int index)
    content.vb: Protected Sub BaseRemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  id: BaseSet(System.Int32,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseSet(Int32, Object)
  nameWithType: NameObjectCollectionBase.BaseSet(Int32, Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseSet
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 111
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected void BaseSet(int index, object value)
    content.vb: Protected Sub BaseSet(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  id: BaseSet(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseSet(String, Object)
  nameWithType: NameObjectCollectionBase.BaseSet(String, Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseSet
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 112
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected void BaseSet(string name, object value)
    content.vb: Protected Sub BaseSet(name As String, value As Object)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: NameObjectCollectionBase.GetEnumerator()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 113
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  nameWithType: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.IEqualityComparer
  commentId: T:System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: Collections.IEqualityComparer
  nameWithType: Collections.IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  commentId: T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase.KeysCollection
  nameWithType: NameObjectCollectionBase.KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  nameWithType: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
