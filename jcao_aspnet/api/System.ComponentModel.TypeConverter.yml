items:
- uid: System.ComponentModel.TypeConverter
  id: TypeConverter
  parent: System.ComponentModel
  children:
  - System.ComponentModel.TypeConverter.#ctor
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  name: TypeConverter
  fullName: System.ComponentModel.TypeConverter
  type: Class
  source:
    remote: &o1
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 12
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.
  syntax:
    content: 'public class TypeConverter : object'
    content.vb: Public Class TypeConverter Inherits Object
  inheritance:
  - System.Object
- uid: System.ComponentModel.TypeConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeConverter
  name: TypeConverter()
  fullName: System.ComponentModel.TypeConverter.TypeConverter()
  type: Constructor
  source:
    remote: &o0
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 149
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.TypeConverter" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public TypeConverter()
    content.vb: Public Sub New
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 150
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
  syntax:
    content: public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
    content.vb: Public Overridable Function CanConvertFrom(context As ITypeDescriptorContext, sourceType As Type) As Boolean
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext" data-throw-if-not-resolved="false"></xref> that provides a format context.
    - id: sourceType
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the type you want to convert from.
    return:
      type: System.Boolean
      description: true if this converter can perform the conversion; otherwise, false.
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  id: CanConvertFrom(System.Type)
  parent: System.ComponentModel.TypeConverter
  name: CanConvertFrom(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 151
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns whether this converter can convert an object of the given type to the type of this converter.
  syntax:
    content: public bool CanConvertFrom(Type sourceType)
    content.vb: Public Function CanConvertFrom(sourceType As Type) As Boolean
    parameters:
    - id: sourceType
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the type you want to convert from.
    return:
      type: System.Boolean
      description: true if this converter can perform the conversion; otherwise, false.
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  name: CanConvertTo(ITypeDescriptorContext, Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 152
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns whether this converter can convert the object to the specified type, using the specified context.
  syntax:
    content: public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
    content.vb: Public Overridable Function CanConvertTo(context As ITypeDescriptorContext, destinationType As Type) As Boolean
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext" data-throw-if-not-resolved="false"></xref> that provides a format context.
    - id: destinationType
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the type you want to convert to.
    return:
      type: System.Boolean
      description: true if this converter can perform the conversion; otherwise, false.
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  id: CanConvertTo(System.Type)
  parent: System.ComponentModel.TypeConverter
  name: CanConvertTo(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 153
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns whether this converter can convert the object to the specified type.
  syntax:
    content: public bool CanConvertTo(Type destinationType)
    content.vb: Public Function CanConvertTo(destinationType As Type) As Boolean
    parameters:
    - id: destinationType
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the type you want to convert to.
    return:
      type: System.Boolean
      description: true if this converter can perform the conversion; otherwise, false.
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  name: ConvertFrom(ITypeDescriptorContext, Globalization.CultureInfo, Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 154
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Converts the given object to the type of this converter, using the specified context and culture information.
  syntax:
    content: public virtual object ConvertFrom(ITypeDescriptorContext context, Globalization.CultureInfo culture, object value)
    content.vb: Public Overridable Function ConvertFrom(context As ITypeDescriptorContext, culture As Globalization.CultureInfo, value As Object) As Object
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext" data-throw-if-not-resolved="false"></xref> that provides a format context.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> to use as the current culture.
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to convert.
    return:
      type: System.Object
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the converted value.
  exceptions:
  - type: System.NotSupportedException
    description: The conversion cannot be performed.
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  id: ConvertFrom(System.Object)
  parent: System.ComponentModel.TypeConverter
  name: ConvertFrom(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  type: Method
  source:
    remote: *o1
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 55
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Converts the given value to the type of this converter.
  syntax:
    content: public object ConvertFrom(object value)
    content.vb: Public Function ConvertFrom(value As Object) As Object
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to convert.
    return:
      type: System.Object
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the converted value.
  exceptions:
  - type: System.NotSupportedException
    description: The conversion cannot be performed.
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  id: ConvertFromInvariantString(System.String)
  parent: System.ComponentModel.TypeConverter
  name: ConvertFromInvariantString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  type: Method
  source:
    remote: *o1
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 71
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Converts the given string to the type of this converter, using the invariant culture.
  syntax:
    content: public object ConvertFromInvariantString(string text)
    content.vb: Public Function ConvertFromInvariantString(text As String) As Object
    parameters:
    - id: text
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> to convert.
    return:
      type: System.Object
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the converted text.
  exceptions:
  - type: System.NotSupportedException
    description: The conversion cannot be performed.
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  id: ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  parent: System.ComponentModel.TypeConverter
  name: ConvertFromString(ITypeDescriptorContext, Globalization.CultureInfo, String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 157
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Converts the given text to an object, using the specified context and culture information.
  syntax:
    content: public object ConvertFromString(ITypeDescriptorContext context, Globalization.CultureInfo culture, string text)
    content.vb: Public Function ConvertFromString(context As ITypeDescriptorContext, culture As Globalization.CultureInfo, text As String) As Object
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext" data-throw-if-not-resolved="false"></xref> that provides a format context.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref>. If null is passed, the current culture is assumed.
    - id: text
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> to convert.
    return:
      type: System.Object
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the converted text.
  exceptions:
  - type: System.NotSupportedException
    description: The conversion cannot be performed.
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  id: ConvertFromString(System.String)
  parent: System.ComponentModel.TypeConverter
  name: ConvertFromString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  type: Method
  source:
    remote: *o1
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 79
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Converts the specified text to an object.
  syntax:
    content: public object ConvertFromString(string text)
    content.vb: Public Function ConvertFromString(text As String) As Object
    parameters:
    - id: text
      type: System.String
      description: The text representation of the object to convert.
    return:
      type: System.Object
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the converted text.
  exceptions:
  - type: System.NotSupportedException
    description: The string cannot be converted into the appropriate object.
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  name: ConvertTo(ITypeDescriptorContext, Globalization.CultureInfo, Object, Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 159
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Converts the given value object to the specified type, using the specified context and culture information.
  syntax:
    content: public virtual object ConvertTo(ITypeDescriptorContext context, Globalization.CultureInfo culture, object value, Type destinationType)
    content.vb: Public Overridable Function ConvertTo(context As ITypeDescriptorContext, culture As Globalization.CultureInfo, value As Object, destinationType As Type) As Object
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext" data-throw-if-not-resolved="false"></xref> that provides a format context.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref>. If null is passed, the current culture is assumed.
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to convert.
    - id: destinationType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> to convert the *value* parameter to.
    return:
      type: System.Object
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the converted value.
  exceptions:
  - type: System.ArgumentNullException
    description: The *destinationType* parameter is null.
  - type: System.NotSupportedException
    description: The conversion cannot be performed.
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  id: ConvertTo(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  name: ConvertTo(Object, Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(System.Object, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 160
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Converts the given value object to the specified type, using the arguments.
  syntax:
    content: public object ConvertTo(object value, Type destinationType)
    content.vb: Public Function ConvertTo(value As Object, destinationType As Type) As Object
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to convert.
    - id: destinationType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> to convert the *value* parameter to.
    return:
      type: System.Object
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the converted value.
  exceptions:
  - type: System.ArgumentNullException
    description: The *destinationType* parameter is null.
  - type: System.NotSupportedException
    description: The conversion cannot be performed.
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  id: ConvertToInvariantString(System.Object)
  parent: System.ComponentModel.TypeConverter
  name: ConvertToInvariantString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  type: Method
  source:
    remote: *o1
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 135
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Converts the specified value to a culture-invariant string representation.
  syntax:
    content: public string ConvertToInvariantString(object value)
    content.vb: Public Function ConvertToInvariantString(value As Object) As String
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to convert.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the converted value.
  exceptions:
  - type: System.NotSupportedException
    description: The conversion cannot be performed.
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  name: ConvertToString(ITypeDescriptorContext, Globalization.CultureInfo, Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 162
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Converts the given value to a string representation, using the specified context and culture information.
  syntax:
    content: public string ConvertToString(ITypeDescriptorContext context, Globalization.CultureInfo culture, object value)
    content.vb: Public Function ConvertToString(context As ITypeDescriptorContext, culture As Globalization.CultureInfo, value As Object) As String
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext" data-throw-if-not-resolved="false"></xref> that provides a format context.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref>. If null is passed, the current culture is assumed.
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to convert.
    return:
      type: System.String
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the converted value.
  exceptions:
  - type: System.NotSupportedException
    description: The conversion cannot be performed.
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  id: ConvertToString(System.Object)
  parent: System.ComponentModel.TypeConverter
  name: ConvertToString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  type: Method
  source:
    remote: *o1
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 143
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Converts the specified value to a string representation.
  syntax:
    content: public string ConvertToString(object value)
    content.vb: Public Function ConvertToString(value As Object) As String
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to convert.
    return:
      type: System.String
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the converted value.
  exceptions:
  - type: System.NotSupportedException
    description: The conversion cannot be performed.
- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  id: GetConvertFromException(System.Object)
  parent: System.ComponentModel.TypeConverter
  name: GetConvertFromException(Object)
  fullName: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  type: Method
  source:
    remote: *o1
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 162
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns an exception to throw when a conversion cannot be performed.
  syntax:
    content: protected Exception GetConvertFromException(object value)
    content.vb: Protected Function GetConvertFromException(value As Object) As Exception
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to convert, or null if the object is not available.
    return:
      type: System.Exception
      description: An <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> that represents the exception to throw when a conversion cannot be performed.
  exceptions:
  - type: System.NotSupportedException
    description: Automatically thrown by this method.
- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  id: GetConvertToException(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  name: GetConvertToException(Object, Type)
  fullName: System.ComponentModel.TypeConverter.GetConvertToException(System.Object, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 165
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns an exception to throw when a conversion cannot be performed.
  syntax:
    content: protected Exception GetConvertToException(object value, Type destinationType)
    content.vb: Protected Function GetConvertToException(value As Object, destinationType As Type) As Exception
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to convert, or null if the object is not available.
    - id: destinationType
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the type the conversion was trying to convert to.
    return:
      type: System.Exception
      description: An <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> that represents the exception to throw when a conversion cannot be performed.
  exceptions:
  - type: System.NotSupportedException
    description: Automatically thrown by this method.
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: Globalization.CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
