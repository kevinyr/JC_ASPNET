items:
- uid: System.ComponentModel.TypeDescriptionProvider
  commentId: T:System.ComponentModel.TypeDescriptionProvider
  id: TypeDescriptionProvider
  parent: System.ComponentModel
  children:
  - System.ComponentModel.TypeDescriptionProvider.#ctor
  - System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)
  - System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  langs:
  - csharp
  - vb
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TypeDescriptionProvider
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 533
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: 'public abstract class TypeDescriptionProvider : object'
    content.vb: >-
      Public MustInherit Class TypeDescriptionProvider
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor
  commentId: M:System.ComponentModel.TypeDescriptionProvider.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: TypeDescriptionProvider()
  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider()
  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 535
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: protected TypeDescriptionProvider()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)
  id: '#ctor(System.ComponentModel.TypeDescriptionProvider)'
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: TypeDescriptionProvider(TypeDescriptionProvider)
  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)
  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider(System.ComponentModel.TypeDescriptionProvider)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 536
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: protected TypeDescriptionProvider(TypeDescriptionProvider parent)
    content.vb: Protected Sub New(parent As TypeDescriptionProvider)
    parameters:
    - id: parent
      type: System.ComponentModel.TypeDescriptionProvider
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  commentId: M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: CreateInstance(IServiceProvider, Type, Type[], Object[])
  nameWithType: TypeDescriptionProvider.CreateInstance(IServiceProvider, Type, Type[], Object[])
  fullName: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider, System.Type, System.Type[], System.Object[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateInstance
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 537
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: public virtual object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, object[] args)
    content.vb: Public Overridable Function CreateInstance(provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object
    parameters:
    - id: provider
      type: System.IServiceProvider
    - id: objectType
      type: System.Type
    - id: argTypes
      type: System.Type[]
    - id: args
      type: System.Object[]
    return:
      type: System.Object
  nameWithType.vb: TypeDescriptionProvider.CreateInstance(IServiceProvider, Type, Type(), Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider, System.Type, System.Type(), System.Object())
  name.vb: CreateInstance(IServiceProvider, Type, Type(), Object())
- uid: System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  id: GetCache(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetCache(Object)
  nameWithType: TypeDescriptionProvider.GetCache(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCache
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 538
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: public virtual Collections.IDictionary GetCache(object instance)
    content.vb: Public Overridable Function GetCache(instance As Object) As Collections.IDictionary
    parameters:
    - id: instance
      type: System.Object
    return:
      type: System.Collections.IDictionary
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  id: GetExtendedTypeDescriptor(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetExtendedTypeDescriptor(Object)
  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetExtendedTypeDescriptor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 539
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: public virtual ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance)
    content.vb: Public Overridable Function GetExtendedTypeDescriptor(instance As Object) As ICustomTypeDescriptor
    parameters:
    - id: instance
      type: System.Object
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  id: GetExtenderProviders(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetExtenderProviders(Object)
  nameWithType: TypeDescriptionProvider.GetExtenderProviders(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetExtenderProviders
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 540
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: protected virtual IExtenderProvider[] GetExtenderProviders(object instance)
    content.vb: Protected Overridable Function GetExtenderProviders(instance As Object) As IExtenderProvider()
    parameters:
    - id: instance
      type: System.Object
    return:
      type: System.ComponentModel.IExtenderProvider[]
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  id: GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetFullComponentName(Object)
  nameWithType: TypeDescriptionProvider.GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFullComponentName
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 541
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: public virtual string GetFullComponentName(object component)
    content.vb: Public Overridable Function GetFullComponentName(component As Object) As String
    parameters:
    - id: component
      type: System.Object
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  id: GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetReflectionType(Object)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetReflectionType
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 542
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: public Type GetReflectionType(object instance)
    content.vb: Public Function GetReflectionType(instance As Object) As Type
    parameters:
    - id: instance
      type: System.Object
    return:
      type: System.Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  id: GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetReflectionType(Type)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetReflectionType
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 543
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: public Type GetReflectionType(Type objectType)
    content.vb: Public Function GetReflectionType(objectType As Type) As Type
    parameters:
    - id: objectType
      type: System.Type
    return:
      type: System.Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)
  id: GetReflectionType(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetReflectionType(Type, Object)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Type, Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetReflectionType
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 544
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: public virtual Type GetReflectionType(Type objectType, object instance)
    content.vb: Public Overridable Function GetReflectionType(objectType As Type, instance As Object) As Type
    parameters:
    - id: objectType
      type: System.Type
    - id: instance
      type: System.Object
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  id: GetRuntimeType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetRuntimeType(Type)
  nameWithType: TypeDescriptionProvider.GetRuntimeType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRuntimeType
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 545
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: public virtual Type GetRuntimeType(Type reflectionType)
    content.vb: Public Overridable Function GetRuntimeType(reflectionType As Type) As Type
    parameters:
    - id: reflectionType
      type: System.Type
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  id: GetTypeDescriptor(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetTypeDescriptor(Object)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTypeDescriptor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 546
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: public ICustomTypeDescriptor GetTypeDescriptor(object instance)
    content.vb: Public Function GetTypeDescriptor(instance As Object) As ICustomTypeDescriptor
    parameters:
    - id: instance
      type: System.Object
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  id: GetTypeDescriptor(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetTypeDescriptor(Type)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTypeDescriptor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 547
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: public ICustomTypeDescriptor GetTypeDescriptor(Type objectType)
    content.vb: Public Function GetTypeDescriptor(objectType As Type) As ICustomTypeDescriptor
    parameters:
    - id: objectType
      type: System.Type
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)
  id: GetTypeDescriptor(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetTypeDescriptor(Type, Object)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type, Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTypeDescriptor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 548
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: public virtual ICustomTypeDescriptor GetTypeDescriptor(Type objectType, object instance)
    content.vb: Public Overridable Function GetTypeDescriptor(objectType As Type, instance As Object) As ICustomTypeDescriptor
    parameters:
    - id: objectType
      type: System.Type
    - id: instance
      type: System.Object
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  id: IsSupportedType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: IsSupportedType(Type)
  nameWithType: TypeDescriptionProvider.IsSupportedType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSupportedType
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 549
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  syntax:
    content: public virtual bool IsSupportedType(Type type)
    content.vb: Public Overridable Function IsSupportedType(type As Type) As Boolean
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel.TypeDescriptionProvider
  commentId: T:System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  isExternal: false
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: Collections.IDictionary
  nameWithType: Collections.IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.ComponentModel.ICustomTypeDescriptor
  commentId: T:System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.ComponentModel.IExtenderProvider[]
  name: IExtenderProvider[]
  nameWithType: IExtenderProvider[]
  fullName: System.ComponentModel.IExtenderProvider[]
  nameWithType.vb: IExtenderProvider()
  fullname.vb: System.ComponentModel.IExtenderProvider()
  name.vb: IExtenderProvider()
  spec.csharp:
  - uid: System.ComponentModel.IExtenderProvider
    name: IExtenderProvider
    nameWithType: IExtenderProvider
    fullName: System.ComponentModel.IExtenderProvider
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.ComponentModel.IExtenderProvider
    name: IExtenderProvider
    nameWithType: IExtenderProvider
    fullName: System.ComponentModel.IExtenderProvider
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
