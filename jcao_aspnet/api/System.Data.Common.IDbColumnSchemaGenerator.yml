items:
- uid: System.Data.Common.IDbColumnSchemaGenerator
  commentId: T:System.Data.Common.IDbColumnSchemaGenerator
  id: IDbColumnSchemaGenerator
  parent: System.Data.Common
  children:
  - System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema
  langs:
  - csharp
  - vb
  name: IDbColumnSchemaGenerator
  nameWithType: IDbColumnSchemaGenerator
  fullName: System.Data.Common.IDbColumnSchemaGenerator
  type: Interface
  source:
    remote:
      path: src/System.Data.Common/ref/System.Data.Common.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IDbColumnSchemaGenerator
    path: src/System.Data.Common/ref/System.Data.Common.Manual.cs
    startLine: 81
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public interface IDbColumnSchemaGenerator
    content.vb: Public Interface IDbColumnSchemaGenerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema
  commentId: M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema
  id: GetColumnSchema
  parent: System.Data.Common.IDbColumnSchemaGenerator
  langs:
  - csharp
  - vb
  name: GetColumnSchema()
  nameWithType: IDbColumnSchemaGenerator.GetColumnSchema()
  fullName: System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/ref/System.Data.Common.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetColumnSchema
    path: src/System.Data.Common/ref/System.Data.Common.Manual.cs
    startLine: 83
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: Collections.ObjectModel.ReadOnlyCollection<DbColumn> GetColumnSchema()
    content.vb: Function GetColumnSchema As Collections.ObjectModel.ReadOnlyCollection(Of DbColumn)
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.DbColumn}
references:
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.DbColumn}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.DbColumn}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: Collections.ObjectModel.ReadOnlyCollection<DbColumn>
  nameWithType: Collections.ObjectModel.ReadOnlyCollection<DbColumn>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Common.DbColumn>
  nameWithType.vb: Collections.ObjectModel.ReadOnlyCollection(Of DbColumn)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Data.Common.DbColumn)
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of DbColumn)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbColumn
    name: DbColumn
    nameWithType: DbColumn
    fullName: System.Data.Common.DbColumn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Common.DbColumn
    name: DbColumn
    nameWithType: DbColumn
    fullName: System.Data.Common.DbColumn
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: false
  name: Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType: Collections.ObjectModel.ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
