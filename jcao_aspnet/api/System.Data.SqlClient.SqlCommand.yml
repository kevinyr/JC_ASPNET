items:
- uid: System.Data.SqlClient.SqlCommand
  commentId: T:System.Data.SqlClient.SqlCommand
  id: SqlCommand
  parent: System.Data.SqlClient
  children:
  - System.Data.SqlClient.SqlCommand.#ctor
  - System.Data.SqlClient.SqlCommand.#ctor(System.String)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  - System.Data.SqlClient.SqlCommand.Cancel
  - System.Data.SqlClient.SqlCommand.CommandText
  - System.Data.SqlClient.SqlCommand.CommandTimeout
  - System.Data.SqlClient.SqlCommand.CommandType
  - System.Data.SqlClient.SqlCommand.Connection
  - System.Data.SqlClient.SqlCommand.CreateDbParameter
  - System.Data.SqlClient.SqlCommand.CreateParameter
  - System.Data.SqlClient.SqlCommand.DbConnection
  - System.Data.SqlClient.SqlCommand.DbParameterCollection
  - System.Data.SqlClient.SqlCommand.DbTransaction
  - System.Data.SqlClient.SqlCommand.DesignTimeVisible
  - System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReader
  - System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteScalar
  - System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.Parameters
  - System.Data.SqlClient.SqlCommand.Prepare
  - System.Data.SqlClient.SqlCommand.StatementCompleted
  - System.Data.SqlClient.SqlCommand.Transaction
  - System.Data.SqlClient.SqlCommand.UpdatedRowSource
  langs:
  - csharp
  - vb
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlCommand
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.Manual.cs
    startLine: 28
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: 'public sealed class SqlCommand : Common.DbCommand, Common.DbCommand'
    content.vb: >-
      Public NotInheritable Class SqlCommand
          Inherits Common.DbCommand
          Implements Common.DbCommand
  inheritance:
  - System.Object
  implements:
  - System.Data.Common.DbCommand
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Data.SqlClient.SqlCommand.#ctor
  commentId: M:System.Data.SqlClient.SqlCommand.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand()
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 286
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public SqlCommand()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 287
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public SqlCommand(string cmdText)
    content.vb: Public Sub New(cmdText As String)
    parameters:
    - id: cmdText
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: SqlCommand(String, SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String, SqlConnection)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(System.String, System.Data.SqlClient.SqlConnection)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 288
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public SqlCommand(string cmdText, SqlConnection connection)
    content.vb: Public Sub New(cmdText As String, connection As SqlConnection)
    parameters:
    - id: cmdText
      type: System.String
    - id: connection
      type: System.Data.SqlClient.SqlConnection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: SqlCommand(String, SqlConnection, SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(System.String, System.Data.SqlClient.SqlConnection, System.Data.SqlClient.SqlTransaction)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 289
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public SqlCommand(string cmdText, SqlConnection connection, SqlTransaction transaction)
    content.vb: Public Sub New(cmdText As String, connection As SqlConnection, transaction As SqlTransaction)
    parameters:
    - id: cmdText
      type: System.String
    - id: connection
      type: System.Data.SqlClient.SqlConnection
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.CommandText
  commentId: P:System.Data.SqlClient.SqlCommand.CommandText
  id: CommandText
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: System.Data.SqlClient.SqlCommand.CommandText
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CommandText
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 290
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public override string CommandText { get; set; }
    content.vb: Public Overrides Property CommandText As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  commentId: P:System.Data.SqlClient.SqlCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: System.Data.SqlClient.SqlCommand.CommandTimeout
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CommandTimeout
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 291
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public override int CommandTimeout { get; set; }
    content.vb: Public Overrides Property CommandTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.CommandType
  commentId: P:System.Data.SqlClient.SqlCommand.CommandType
  id: CommandType
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: System.Data.SqlClient.SqlCommand.CommandType
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CommandType
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 292
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public override CommandType CommandType { get; set; }
    content.vb: Public Overrides Property CommandType As CommandType
    parameters: []
    return:
      type: System.Data.CommandType
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.Connection
  commentId: P:System.Data.SqlClient.SqlCommand.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: System.Data.SqlClient.SqlCommand.Connection
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connection
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 293
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public SqlConnection Connection { get; set; }
    content.vb: Public Property Connection As SqlConnection
    parameters: []
    return:
      type: System.Data.SqlClient.SqlConnection
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  commentId: P:System.Data.SqlClient.SqlCommand.DbConnection
  id: DbConnection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: System.Data.SqlClient.SqlCommand.DbConnection
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DbConnection
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 294
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: protected override Common.DbConnection DbConnection { get; set; }
    content.vb: Protected Overrides Property DbConnection As Common.DbConnection
    parameters: []
    return:
      type: System.Data.Common.DbConnection
  modifiers.csharp:
  - protected
  - override
  - get
  - set
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  commentId: P:System.Data.SqlClient.SqlCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: System.Data.SqlClient.SqlCommand.DbParameterCollection
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DbParameterCollection
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 295
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: protected override Common.DbParameterCollection DbParameterCollection { get; }
    content.vb: Protected Overrides ReadOnly Property DbParameterCollection As Common.DbParameterCollection
    parameters: []
    return:
      type: System.Data.Common.DbParameterCollection
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  commentId: P:System.Data.SqlClient.SqlCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: System.Data.SqlClient.SqlCommand.DbTransaction
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DbTransaction
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 296
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: protected override Common.DbTransaction DbTransaction { get; set; }
    content.vb: Protected Overrides Property DbTransaction As Common.DbTransaction
    parameters: []
    return:
      type: System.Data.Common.DbTransaction
  modifiers.csharp:
  - protected
  - override
  - get
  - set
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  commentId: P:System.Data.SqlClient.SqlCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DesignTimeVisible
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 297
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    content.vb: Public Overrides Property DesignTimeVisible As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.Parameters
  commentId: P:System.Data.SqlClient.SqlCommand.Parameters
  id: Parameters
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: System.Data.SqlClient.SqlCommand.Parameters
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parameters
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 298
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public SqlParameterCollection Parameters { get; }
    content.vb: Public ReadOnly Property Parameters As SqlParameterCollection
    parameters: []
    return:
      type: System.Data.SqlClient.SqlParameterCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlClient.SqlCommand.Transaction
  commentId: P:System.Data.SqlClient.SqlCommand.Transaction
  id: Transaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: System.Data.SqlClient.SqlCommand.Transaction
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Transaction
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 299
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public SqlTransaction Transaction { get; set; }
    content.vb: Public Property Transaction As SqlTransaction
    parameters: []
    return:
      type: System.Data.SqlClient.SqlTransaction
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  commentId: P:System.Data.SqlClient.SqlCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UpdatedRowSource
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 300
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public override UpdateRowSource UpdatedRowSource { get; set; }
    content.vb: Public Overrides Property UpdatedRowSource As UpdateRowSource
    parameters: []
    return:
      type: System.Data.UpdateRowSource
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  commentId: E:System.Data.SqlClient.SqlCommand.StatementCompleted
  id: StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: System.Data.SqlClient.SqlCommand.StatementCompleted
  type: Event
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StatementCompleted
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 301
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public event StatementCompletedEventHandler StatementCompleted
    content.vb: Public Event StatementCompleted As StatementCompletedEventHandler
    return:
      type: System.Data.StatementCompletedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.Cancel
  commentId: M:System.Data.SqlClient.SqlCommand.Cancel
  id: Cancel
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: System.Data.SqlClient.SqlCommand.Cancel()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Cancel
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 302
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public override void Cancel()
    content.vb: Public Overrides Sub Cancel
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  commentId: M:System.Data.SqlClient.SqlCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateDbParameter()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateDbParameter
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 303
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: protected override Common.DbParameter CreateDbParameter()
    content.vb: Protected Overrides Function CreateDbParameter As Common.DbParameter
    return:
      type: System.Data.Common.DbParameter
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  commentId: M:System.Data.SqlClient.SqlCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateParameter()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateParameter
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 304
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public SqlParameter CreateParameter()
    content.vb: Public Function CreateParameter As SqlParameter
    return:
      type: System.Data.SqlClient.SqlParameter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteDbDataReader
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 305
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: protected override Common.DbDataReader ExecuteDbDataReader(CommandBehavior behavior)
    content.vb: Protected Overrides Function ExecuteDbDataReader(behavior As CommandBehavior) As Common.DbDataReader
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
    return:
      type: System.Data.Common.DbDataReader
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteDbDataReaderAsync(CommandBehavior, Threading.CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior, Threading.CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteDbDataReaderAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 306
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: protected override Threading.Tasks.Task<Common.DbDataReader> ExecuteDbDataReaderAsync(CommandBehavior behavior, Threading.CancellationToken cancellationToken)
    content.vb: Protected Overrides Function ExecuteDbDataReaderAsync(behavior As CommandBehavior, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of Common.DbDataReader)
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteNonQuery
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 307
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public override int ExecuteNonQuery()
    content.vb: Public Overrides Function ExecuteNonQuery As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteNonQueryAsync(Threading.CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(Threading.CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteNonQueryAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 308
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public override Threading.Tasks.Task<int> ExecuteNonQueryAsync(Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function ExecuteNonQueryAsync(cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteReader
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 309
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public SqlDataReader ExecuteReader()
    content.vb: Public Function ExecuteReader As SqlDataReader
    return:
      type: System.Data.SqlClient.SqlDataReader
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteReader
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 310
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public SqlDataReader ExecuteReader(CommandBehavior behavior)
    content.vb: Public Function ExecuteReader(behavior As CommandBehavior) As SqlDataReader
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
    return:
      type: System.Data.SqlClient.SqlDataReader
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  id: ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteReaderAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 311
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public Threading.Tasks.Task<SqlDataReader> ExecuteReaderAsync()
    content.vb: Public Function ExecuteReaderAsync As Threading.Tasks.Task(Of SqlDataReader)
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  id: ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteReaderAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 312
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public Threading.Tasks.Task<SqlDataReader> ExecuteReaderAsync(CommandBehavior behavior)
    content.vb: Public Function ExecuteReaderAsync(behavior As CommandBehavior) As Threading.Tasks.Task(Of SqlDataReader)
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteReaderAsync(CommandBehavior, Threading.CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior, Threading.CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteReaderAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 313
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public Threading.Tasks.Task<SqlDataReader> ExecuteReaderAsync(CommandBehavior behavior, Threading.CancellationToken cancellationToken)
    content.vb: Public Function ExecuteReaderAsync(behavior As CommandBehavior, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of SqlDataReader)
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteReaderAsync(Threading.CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(Threading.CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteReaderAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 314
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public Threading.Tasks.Task<SqlDataReader> ExecuteReaderAsync(Threading.CancellationToken cancellationToken)
    content.vb: Public Function ExecuteReaderAsync(cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of SqlDataReader)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalar()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteScalar
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 315
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public override object ExecuteScalar()
    content.vb: Public Overrides Function ExecuteScalar As Object
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  id: ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteScalarAsync(Threading.CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(Threading.CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteScalarAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 316
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public override Threading.Tasks.Task<object> ExecuteScalarAsync(Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function ExecuteScalarAsync(cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of Object)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Object}
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  id: ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReader()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteXmlReader
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 317
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public Xml.XmlReader ExecuteXmlReader()
    content.vb: Public Function ExecuteXmlReader As Xml.XmlReader
    return:
      type: System.Xml.XmlReader
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  id: ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteXmlReaderAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 318
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public Threading.Tasks.Task<Xml.XmlReader> ExecuteXmlReaderAsync()
    content.vb: Public Function ExecuteXmlReaderAsync As Threading.Tasks.Task(Of Xml.XmlReader)
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  id: ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: ExecuteXmlReaderAsync(Threading.CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(Threading.CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteXmlReaderAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 319
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public Threading.Tasks.Task<Xml.XmlReader> ExecuteXmlReaderAsync(Threading.CancellationToken cancellationToken)
    content.vb: Public Function ExecuteXmlReaderAsync(cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of Xml.XmlReader)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlCommand.Prepare
  commentId: M:System.Data.SqlClient.SqlCommand.Prepare
  id: Prepare
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: System.Data.SqlClient.SqlCommand.Prepare()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Prepare
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 320
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: public override void Prepare()
    content.vb: Public Overrides Sub Prepare
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  commentId: M:System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.Manual.cs
    startLine: 31
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: System.Data.SqlClient
  commentId: N:System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  nameWithType: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DbCommand
  commentId: T:System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnection
  commentId: T:System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlTransaction
  commentId: T:System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  nameWithType: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.CommandType
  commentId: T:System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data
  commentId: N:System.Data
  isExternal: false
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: System.Data.Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Common.DbParameterCollection
  commentId: T:System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.Common.DbTransaction
  commentId: T:System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlParameterCollection
  commentId: T:System.Data.SqlClient.SqlParameterCollection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameterCollection
  nameWithType: SqlParameterCollection
  fullName: System.Data.SqlClient.SqlParameterCollection
- uid: System.Data.UpdateRowSource
  commentId: T:System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.StatementCompletedEventHandler
  commentId: T:System.Data.StatementCompletedEventHandler
  parent: System.Data
  isExternal: false
  name: StatementCompletedEventHandler
  nameWithType: StatementCompletedEventHandler
  fullName: System.Data.StatementCompletedEventHandler
- uid: System.Data.Common.DbParameter
  commentId: T:System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.SqlClient.SqlParameter
  commentId: T:System.Data.SqlClient.SqlParameter
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameter
  nameWithType: SqlParameter
  fullName: System.Data.SqlClient.SqlParameter
- uid: System.Data.CommandBehavior
  commentId: T:System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.Common.DbDataReader
  commentId: T:System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: Threading.CancellationToken
  nameWithType: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  commentId: '!:System.Threading.Tasks.Task{System.Data.Common.DbDataReader}'
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<DbDataReader>
  nameWithType: Threading.Tasks.Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
  nameWithType.vb: Threading.Tasks.Task(Of DbDataReader)
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.Common.DbDataReader)
  name.vb: Threading.Tasks.Task(Of DbDataReader)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: System.Data.Common.DbDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: System.Data.Common.DbDataReader
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: false
  name: Threading.Tasks.Task<>
  nameWithType: Threading.Tasks.Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Threading.Tasks.Task(Of )
  fullname.vb: System.Threading.Tasks.Task(Of )
  name.vb: Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Int32>
  nameWithType: Threading.Tasks.Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Threading.Tasks.Task(Of Int32)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Threading.Tasks.Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.SqlClient.SqlDataReader
  commentId: T:System.Data.SqlClient.SqlDataReader
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
- uid: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
  commentId: '!:System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}'
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<SqlDataReader>
  nameWithType: Threading.Tasks.Task<SqlDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader>
  nameWithType.vb: Threading.Tasks.Task(Of SqlDataReader)
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.SqlClient.SqlDataReader)
  name.vb: Threading.Tasks.Task(Of SqlDataReader)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.SqlClient.SqlDataReader
    name: SqlDataReader
    nameWithType: SqlDataReader
    fullName: System.Data.SqlClient.SqlDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.SqlClient.SqlDataReader
    name: SqlDataReader
    nameWithType: SqlDataReader
    fullName: System.Data.SqlClient.SqlDataReader
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Object}
  commentId: '!:System.Threading.Tasks.Task{System.Object}'
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Object>
  nameWithType: Threading.Tasks.Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  nameWithType.vb: Threading.Tasks.Task(Of Object)
  fullname.vb: System.Threading.Tasks.Task(Of System.Object)
  name.vb: Threading.Tasks.Task(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Threading.Tasks.Task{System.Xml.XmlReader}
  commentId: '!:System.Threading.Tasks.Task{System.Xml.XmlReader}'
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Xml.XmlReader>
  nameWithType: Threading.Tasks.Task<Xml.XmlReader>
  fullName: System.Threading.Tasks.Task<System.Xml.XmlReader>
  nameWithType.vb: Threading.Tasks.Task(Of Xml.XmlReader)
  fullname.vb: System.Threading.Tasks.Task(Of System.Xml.XmlReader)
  name.vb: Threading.Tasks.Task(Of Xml.XmlReader)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlReader
    name: Xml.XmlReader
    nameWithType: Xml.XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.XmlReader
    name: Xml.XmlReader
    nameWithType: Xml.XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
