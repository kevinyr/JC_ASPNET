items:
- uid: System.Data.SqlClient.SqlConnectionStringBuilder
  id: SqlConnectionStringBuilder
  parent: System.Data.SqlClient
  children:
  - System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  - System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  - System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  - System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  - System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  - System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  - System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  - System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  - System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  - System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  - System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  - System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  - System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  - System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  - System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  - System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.Password
  - System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  - System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  - System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  - System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  - System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  - System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  - System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  - System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  - System.Data.SqlClient.SqlConnectionStringBuilder.Values
  - System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  name: SqlConnectionStringBuilder
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder
  type: Class
  source:
    remote: &o0
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 18
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Provides a simple way to create and manage the contents of connection strings used by the <xref href="System.Data.SqlClient.SqlConnection" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: 'public sealed class SqlConnectionStringBuilder : Common.DbConnectionStringBuilder'
    content.vb: Public NotInheritable Class SqlConnectionStringBuilder Inherits Common.DbConnectionStringBuilder
  inheritance:
  - System.Object
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: SqlConnectionStringBuilder()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 189
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Initializes a new instance of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public SqlConnectionStringBuilder()
    content.vb: Public Sub New
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: SqlConnectionStringBuilder(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 193
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Initializes a new instance of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref> class. The provided connection string provides the data for the instance's internal connection information.
  syntax:
    content: public SqlConnectionStringBuilder(string connectionString)
    content.vb: Public Sub New(connectionString As String)
    parameters:
    - id: connectionString
      type: System.String
      description: The basis for the object's internal connection information. Parsed into name/value pairs. Invalid key names raise <xref href="System.Collections.Generic.KeyNotFoundException" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.Collections.Generic.KeyNotFoundException
    description: Invalid key name within the connection string.
  - type: System.FormatException
    description: Invalid value within the connection string (specifically, when a Boolean or numeric value was expected but not supplied).
  - type: System.ArgumentException
    description: The supplied *connectionString* is not valid.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  id: ApplicationIntent
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: ApplicationIntent
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 259
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Declares the application workload type when connecting to a database in an SQL Server Availability Group. You can set the value of this property with <xref href="System.Data.SqlClient.ApplicationIntent" data-throw-if-not-resolved="false"></xref>. For more information about SqlClient support for Always On Availability Groups, see SqlClient Support for High Availability, Disaster Recovery.
  syntax:
    content: public ApplicationIntent ApplicationIntent { get; set; }
    content.vb: Public Property ApplicationIntent As ApplicationIntent
    parameters: []
    return:
      type: System.Data.SqlClient.ApplicationIntent
      description: Returns the current value of the property (a value of type <xref href="System.Data.SqlClient.ApplicationIntent" data-throw-if-not-resolved="false"></xref>).
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  id: ApplicationName
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: ApplicationName
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 274
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the name of the application associated with the connection string.
  syntax:
    content: public string ApplicationName { get; set; }
    content.vb: Public Property ApplicationName As String
    parameters: []
    return:
      type: System.String
      description: The name of the application, or ".NET SqlClient Data Provider" if no name has been supplied.
  exceptions:
  - type: System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value" data-throw-if-not-resolved="false"></xref>.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  id: AttachDBFilename
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: AttachDBFilename
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 284
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets a string that contains the name of the primary data file. This includes the full path name of an attachable database.
  syntax:
    content: public string AttachDBFilename { get; set; }
    content.vb: Public Property AttachDBFilename As String
    parameters: []
    return:
      type: System.String
      description: The value of the AttachDBFilename property, or String.Empty if no value has been supplied.
  exceptions:
  - type: System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value" data-throw-if-not-resolved="false"></xref>.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  id: ConnectRetryCount
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: ConnectRetryCount
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 406
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: '[Supported in the .NET Framework 4.5.1 and later versions] The number of reconnections attempted after identifying that there was an idle connection failure. This must be an integer between 0 and 255. Default is 1. Set to 0 to disable reconnecting on idle connection failures. An <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref> will be thrown if set to a value outside of the allowed range.'
  syntax:
    content: public int ConnectRetryCount { get; set; }
    content.vb: Public Property ConnectRetryCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of reconnections attempted after identifying that there was an idle connection failure.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  id: ConnectRetryInterval
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: ConnectRetryInterval
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 420
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: '[Supported in the .NET Framework 4.5.1 and later versions] Amount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure. This must be an integer between 1 and 60. The default is 10 seconds. An <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref> will be thrown if set to a value outside of the allowed range.'
  syntax:
    content: public int ConnectRetryInterval { get; set; }
    content.vb: Public Property ConnectRetryInterval As Integer
    parameters: []
    return:
      type: System.Int32
      description: Amount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  id: ConnectTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: ConnectTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 294
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error.
  syntax:
    content: public int ConnectTimeout { get; set; }
    content.vb: Public Property ConnectTimeout As Integer
    parameters: []
    return:
      type: System.Int32
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout" data-throw-if-not-resolved="false"></xref> property, or 15 seconds if no value has been supplied.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  id: CurrentLanguage
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: CurrentLanguage
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 308
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the SQL Server Language record name.
  syntax:
    content: public string CurrentLanguage { get; set; }
    content.vb: Public Property CurrentLanguage As String
    parameters: []
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage" data-throw-if-not-resolved="false"></xref> property, or String.Empty if no value has been supplied.
  exceptions:
  - type: System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value" data-throw-if-not-resolved="false"></xref>.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  id: DataSource
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: DataSource
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 318
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the name or network address of the instance of SQL Server to connect to.
  syntax:
    content: public string DataSource { get; set; }
    content.vb: Public Property DataSource As String
    parameters: []
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.DataSource" data-throw-if-not-resolved="false"></xref> property, or String.Empty if none has been supplied.
  exceptions:
  - type: System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value" data-throw-if-not-resolved="false"></xref>.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  id: Encrypt
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: Encrypt
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 328
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets a Boolean value that indicates whether SQL Server uses SSL encryption for all data sent between the client and server if the server has a certificate installed.
  syntax:
    content: public bool Encrypt { get; set; }
    content.vb: Public Property Encrypt As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt" data-throw-if-not-resolved="false"></xref> property, or false if none has been supplied.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  id: FailoverPartner
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: FailoverPartner
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 348
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the name or address of the partner server to connect to if the primary server is down.
  syntax:
    content: public string FailoverPartner { get; set; }
    content.vb: Public Property FailoverPartner As String
    parameters: []
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner" data-throw-if-not-resolved="false"></xref> property, or String.Empty if none has been supplied.
  exceptions:
  - type: System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value" data-throw-if-not-resolved="false"></xref>.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  id: InitialCatalog
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: InitialCatalog
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 358
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the name of the database associated with the connection.
  syntax:
    content: public string InitialCatalog { get; set; }
    content.vb: Public Property InitialCatalog As String
    parameters: []
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog" data-throw-if-not-resolved="false"></xref> property, or String.Empty if none has been supplied.
  exceptions:
  - type: System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value" data-throw-if-not-resolved="false"></xref>.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  id: IntegratedSecurity
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: IntegratedSecurity
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 368
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets a Boolean value that indicates whether User ID and Password are specified in the connection (when false) or whether the current Windows account credentials are used for authentication (when true).
  syntax:
    content: public bool IntegratedSecurity { get; set; }
    content.vb: Public Property IntegratedSecurity As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity" data-throw-if-not-resolved="false"></xref> property, or false if none has been supplied.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  id: Item(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: Item[String]
  name.vb: Item(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Item[System.String]
  fullName.vb: System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 201
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the value associated with the specified key. In C#, this property is the indexer.
  syntax:
    content: public override object this[string keyword] { get; set; }
    content.vb: Public Overrides Property Item(keyword As String) As Object
    parameters:
    - id: keyword
      type: System.String
      description: The key of the item to get or set.
    return:
      type: System.Object
      description: The value associated with the specified key.
  exceptions:
  - type: System.ArgumentNullException
    description: '*keyword* is a null reference (Nothing in Visual Basic).'
  - type: System.Collections.Generic.KeyNotFoundException
    description: Tried to add a key that does not exist within the available keys.
  - type: System.FormatException
    description: Invalid value within the connection string (specifically, a Boolean or numeric value was expected but not supplied).
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  id: Keys
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: Keys
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 579
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets an <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> that contains the keys in the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override Collections.ICollection Keys { get; }
    content.vb: Public Overrides ReadOnly Property Keys As Collections.ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
      description: An <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> that contains the keys in the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref>.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  id: LoadBalanceTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: LoadBalanceTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 378
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the minimum time, in seconds, for the connection to live in the connection pool before being destroyed.
  syntax:
    content: public int LoadBalanceTimeout { get; set; }
    content.vb: Public Property LoadBalanceTimeout As Integer
    parameters: []
    return:
      type: System.Int32
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout" data-throw-if-not-resolved="false"></xref> property, or 0 if none has been supplied.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  id: MaxPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: MaxPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 392
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the maximum number of connections allowed in the connection pool for this specific connection string.
  syntax:
    content: public int MaxPoolSize { get; set; }
    content.vb: Public Property MaxPoolSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize" data-throw-if-not-resolved="false"></xref> property, or 100 if none has been supplied.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  id: MinPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: MinPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 436
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the minimum number of connections allowed in the connection pool for this specific connection string.
  syntax:
    content: public int MinPoolSize { get; set; }
    content.vb: Public Property MinPoolSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize" data-throw-if-not-resolved="false"></xref> property, or 0 if none has been supplied.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  id: MultipleActiveResultSets
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: MultipleActiveResultSets
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 450
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: When true, an application can maintain multiple active result sets (MARS). When false, an application must process or cancel all result sets from one batch before it can execute any other batch on that connection.For more information, see Multiple Active Result Sets (MARS).
  syntax:
    content: public bool MultipleActiveResultSets { get; set; }
    content.vb: Public Property MultipleActiveResultSets As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets" data-throw-if-not-resolved="false"></xref> property, or false if none has been supplied.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  id: MultiSubnetFailover
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: MultiSubnetFailover
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 460
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: If your application is connecting to an AlwaysOn availability group (AG) on different subnets, setting MultiSubnetFailover=true provides faster detection of and connection to the (currently) active server. For more information about SqlClient support for Always On Availability Groups, see SqlClient Support for High Availability, Disaster Recovery.
  syntax:
    content: public bool MultiSubnetFailover { get; set; }
    content.vb: Public Property MultiSubnetFailover As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> indicating the current value of the property.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  id: PacketSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: PacketSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 484
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the size in bytes of the network packets used to communicate with an instance of SQL Server.
  syntax:
    content: public int PacketSize { get; set; }
    content.vb: Public Property PacketSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize" data-throw-if-not-resolved="false"></xref> property, or 8000 if none has been supplied.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  id: Password
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: Password
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 498
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the password for the SQL Server account.
  syntax:
    content: public string Password { get; set; }
    content.vb: Public Property Password As String
    parameters: []
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.Password" data-throw-if-not-resolved="false"></xref> property, or String.Empty if none has been supplied.
  exceptions:
  - type: System.ArgumentNullException
    description: The password was incorrectly set to null.  See code sample below.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  id: PersistSecurityInfo
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: PersistSecurityInfo
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 508
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets a Boolean value that indicates if security-sensitive information, such as the password, is not returned as part of the connection if the connection is open or has ever been in an open state.
  syntax:
    content: public bool PersistSecurityInfo { get; set; }
    content.vb: Public Property PersistSecurityInfo As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo" data-throw-if-not-resolved="false"></xref> property, or false if none has been supplied.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  id: Pooling
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: Pooling
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 518
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets a Boolean value that indicates whether the connection will be pooled or explicitly opened every time that the connection is requested.
  syntax:
    content: public bool Pooling { get; set; }
    content.vb: Public Property Pooling As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.Pooling" data-throw-if-not-resolved="false"></xref> property, or true if none has been supplied.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  id: Replication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: Replication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 528
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets a Boolean value that indicates whether replication is supported using the connection.
  syntax:
    content: public bool Replication { get; set; }
    content.vb: Public Property Replication As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.Replication" data-throw-if-not-resolved="false"></xref> property, or false if none has been supplied.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  id: TrustServerCertificate
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: TrustServerCertificate
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 338
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets a value that indicates whether the channel will be encrypted while bypassing walking the certificate chain to validate trust.
  syntax:
    content: public bool TrustServerCertificate { get; set; }
    content.vb: Public Property TrustServerCertificate As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: A Boolean. Recognized values are true, false, yes, and no.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  id: TypeSystemVersion
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: TypeSystemVersion
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 538
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets a string value that indicates the type system the application expects.
  syntax:
    content: public string TypeSystemVersion { get; set; }
    content.vb: Public Property TypeSystemVersion As String
    parameters: []
    return:
      type: System.String
      description: The following table shows the possible values for the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion" data-throw-if-not-resolved="false"></xref> property:ValueDescriptionSQL Server 2005Uses the SQL Server 2005 type system. No conversions are made for the current version of ADO.NET.SQL Server 2008Uses the SQL Server 2008 type system.LatestUse the latest version than this client-server pair can handle. This will automatically move forward as the client and server components are upgraded.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  id: UserID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: UserID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 548
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the user ID to be used when connecting to SQL Server.
  syntax:
    content: public string UserID { get; set; }
    content.vb: Public Property UserID As String
    parameters: []
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.UserID" data-throw-if-not-resolved="false"></xref> property, or String.Empty if none has been supplied.
  exceptions:
  - type: System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value" data-throw-if-not-resolved="false"></xref>.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  id: UserInstance
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: UserInstance
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 558
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets a value that indicates whether to redirect the connection from the default SQL Server Express instance to a runtime-initiated instance running under the account of the caller.
  syntax:
    content: public bool UserInstance { get; set; }
    content.vb: Public Property UserInstance As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance" data-throw-if-not-resolved="false"></xref> property, or False if none has been supplied.
  exceptions:
  - type: System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value" data-throw-if-not-resolved="false"></xref>.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  id: Values
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: Values
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 587
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets an <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> that contains the values in the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override Collections.ICollection Values { get; }
    content.vb: Public Overrides ReadOnly Property Values As Collections.ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
      description: An <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> that contains the values in the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref>.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  id: WorkstationID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: WorkstationID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  type: Property
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 568
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets or sets the name of the workstation connecting to SQL Server.
  syntax:
    content: public string WorkstationID { get; set; }
    content.vb: Public Property WorkstationID As String
    parameters: []
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID" data-throw-if-not-resolved="false"></xref> property, or String.Empty if none has been supplied.
  exceptions:
  - type: System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value" data-throw-if-not-resolved="false"></xref>.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  id: Clear
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: Clear()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 602
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Clears the contents of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: public override void Clear()
    content.vb: Public Overrides Sub Clear
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: ContainsKey(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 611
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Determines whether the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref> contains a specific key.
  syntax:
    content: public override bool ContainsKey(string keyword)
    content.vb: Public Overrides Function ContainsKey(keyword As String) As Boolean
    parameters:
    - id: keyword
      type: System.String
      description: The key to locate in the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref> contains an element that has the specified key; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*keyword* is null (Nothing in Visual Basic)'
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: Remove(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 689
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Removes the entry with the specified key from the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: public override bool Remove(string keyword)
    content.vb: Public Overrides Function Remove(keyword As String) As Boolean
    parameters:
    - id: keyword
      type: System.String
      description: The key of the key/value pair to be removed from the connection string in this <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: true if the key existed within the connection string and was removed; false if the key did not exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*keyword* is null (Nothing in Visual Basic)'
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  id: ShouldSerialize(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: ShouldSerialize(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 817
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Indicates whether the specified key exists in this <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: public override bool ShouldSerialize(string keyword)
    content.vb: Public Overrides Function ShouldSerialize(keyword As String) As Boolean
    parameters:
    - id: keyword
      type: System.String
      description: The key to locate in the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref> contains an entry with the specified key; otherwise, false.
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  name: TryGetValue(String, out Object)
  name.vb: TryGetValue(String, ByRef Object)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String, out System.Object)
  fullName.vb: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String, ByRef System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionStringBuilder.cs
    startLine: 824
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Retrieves a value corresponding to the supplied key from this <xref href="System.Data.SqlClient.SqlConnectionStringBuilder" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override bool TryGetValue(string keyword, out object value)
    content.vb: Public Overrides Function TryGetValue(keyword As String, ByRef value As Object) As Boolean
    parameters:
    - id: keyword
      type: System.String
      description: The key of the item to retrieve.
    - id: value
      type: System.Object
      description: The value corresponding to *keyword.*
    return:
      type: System.Boolean
      description: true if *keyword* was found within the connection string; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*keyword* contains a null value (Nothing in Visual Basic).'
references:
- uid: System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Data.SqlClient.ApplicationIntent
  parent: System.Data.SqlClient
  isExternal: false
  name: ApplicationIntent
  fullName: System.Data.SqlClient.ApplicationIntent
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: Collections.ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.KeyNotFoundException
  isExternal: false
  name: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
