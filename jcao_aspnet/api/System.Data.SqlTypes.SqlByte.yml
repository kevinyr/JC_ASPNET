items:
- uid: System.Data.SqlTypes.SqlByte
  commentId: T:System.Data.SqlTypes.SqlByte
  id: SqlByte
  parent: System.Data.SqlTypes
  children:
  - System.Data.SqlTypes.SqlByte.#ctor(System.Byte)
  - System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Equals(System.Object)
  - System.Data.SqlTypes.SqlByte.GetHashCode
  - System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.IsNull
  - System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.MaxValue
  - System.Data.SqlTypes.SqlByte.MinValue
  - System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Null
  - System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Parse(System.String)
  - System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.ToSqlBoolean
  - System.Data.SqlTypes.SqlByte.ToSqlDecimal
  - System.Data.SqlTypes.SqlByte.ToSqlDouble
  - System.Data.SqlTypes.SqlByte.ToSqlInt16
  - System.Data.SqlTypes.SqlByte.ToSqlInt32
  - System.Data.SqlTypes.SqlByte.ToSqlInt64
  - System.Data.SqlTypes.SqlByte.ToSqlMoney
  - System.Data.SqlTypes.SqlByte.ToSqlSingle
  - System.Data.SqlTypes.SqlByte.ToSqlString
  - System.Data.SqlTypes.SqlByte.ToString
  - System.Data.SqlTypes.SqlByte.Value
  - System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Zero
  langs:
  - csharp
  - vb
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
  type: Struct
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlByte
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 699
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: 'public struct SqlByte : INullable, IComparable'
    content.vb: >-
      Public Structure SqlByte
          Implements INullable, IComparable
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Data.SqlTypes.SqlByte.MaxValue
  commentId: F:System.Data.SqlTypes.SqlByte.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: SqlByte.MaxValue
  fullName: System.Data.SqlTypes.SqlByte.MaxValue
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxValue
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 702
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static readonly SqlByte MaxValue
    content.vb: Public Shared ReadOnly MaxValue As SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlByte.MinValue
  commentId: F:System.Data.SqlTypes.SqlByte.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: SqlByte.MinValue
  fullName: System.Data.SqlTypes.SqlByte.MinValue
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinValue
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 703
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static readonly SqlByte MinValue
    content.vb: Public Shared ReadOnly MinValue As SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlByte.Null
  commentId: F:System.Data.SqlTypes.SqlByte.Null
  id: Null
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Null
  nameWithType: SqlByte.Null
  fullName: System.Data.SqlTypes.SqlByte.Null
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Null
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 704
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static readonly SqlByte Null
    content.vb: Public Shared ReadOnly Null As SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlByte.Zero
  commentId: F:System.Data.SqlTypes.SqlByte.Zero
  id: Zero
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: SqlByte.Zero
  fullName: System.Data.SqlTypes.SqlByte.Zero
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Zero
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 705
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static readonly SqlByte Zero
    content.vb: Public Shared ReadOnly Zero As SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlByte.#ctor(System.Byte)
  commentId: M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)
  id: '#ctor(System.Byte)'
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: SqlByte(Byte)
  nameWithType: SqlByte.SqlByte(Byte)
  fullName: System.Data.SqlTypes.SqlByte.SqlByte(System.Byte)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 706
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public SqlByte(byte value)
    content.vb: Public Sub New(value As Byte)
    parameters:
    - id: value
      type: System.Byte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.IsNull
  commentId: P:System.Data.SqlTypes.SqlByte.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: IsNull
  nameWithType: SqlByte.IsNull
  fullName: System.Data.SqlTypes.SqlByte.IsNull
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNull
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 707
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public bool IsNull { get; }
    content.vb: Public ReadOnly Property IsNull As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Data.SqlTypes.INullable.IsNull
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlByte.Value
  commentId: P:System.Data.SqlTypes.SqlByte.Value
  id: Value
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SqlByte.Value
  fullName: System.Data.SqlTypes.SqlByte.Value
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 708
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public byte Value { get; }
    content.vb: Public ReadOnly Property Value As Byte
    parameters: []
    return:
      type: System.Byte
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Add(SqlByte, SqlByte)
  nameWithType: SqlByte.Add(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 709
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte Add(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Add(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: BitwiseAnd(SqlByte, SqlByte)
  nameWithType: SqlByte.BitwiseAnd(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BitwiseAnd
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 710
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte BitwiseAnd(SqlByte x, SqlByte y)
    content.vb: Public Shared Function BitwiseAnd(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: BitwiseOr(SqlByte, SqlByte)
  nameWithType: SqlByte.BitwiseOr(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BitwiseOr
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 711
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte BitwiseOr(SqlByte x, SqlByte y)
    content.vb: Public Shared Function BitwiseOr(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)
  id: CompareTo(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: CompareTo(SqlByte)
  nameWithType: SqlByte.CompareTo(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 712
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public int CompareTo(SqlByte value)
    content.vb: Public Function CompareTo(value As SqlByte) As Integer
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.CompareTo(System.Object)
  commentId: M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: SqlByte.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlByte.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 713
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public int CompareTo(object value)
    content.vb: Public Function CompareTo(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Divide(SqlByte, SqlByte)
  nameWithType: SqlByte.Divide(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Divide
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 714
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte Divide(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Divide(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Equals(SqlByte, SqlByte)
  nameWithType: SqlByte.Equals(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 715
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlBoolean Equals(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Equals(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Equals(System.Object)
  commentId: M:System.Data.SqlTypes.SqlByte.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SqlByte.Equals(Object)
  fullName: System.Data.SqlTypes.SqlByte.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 716
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlByte.GetHashCode
  commentId: M:System.Data.SqlTypes.SqlByte.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SqlByte.GetHashCode()
  fullName: System.Data.SqlTypes.SqlByte.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 717
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlByte, SqlByte)
  nameWithType: SqlByte.GreaterThan(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThan
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 718
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlBoolean GreaterThan(SqlByte x, SqlByte y)
    content.vb: Public Shared Function GreaterThan(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlByte, SqlByte)
  nameWithType: SqlByte.GreaterThanOrEqual(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqual
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 719
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlBoolean GreaterThanOrEqual(SqlByte x, SqlByte y)
    content.vb: Public Shared Function GreaterThanOrEqual(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: LessThan(SqlByte, SqlByte)
  nameWithType: SqlByte.LessThan(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThan
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 720
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlBoolean LessThan(SqlByte x, SqlByte y)
    content.vb: Public Shared Function LessThan(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlByte, SqlByte)
  nameWithType: SqlByte.LessThanOrEqual(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqual
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 721
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlBoolean LessThanOrEqual(SqlByte x, SqlByte y)
    content.vb: Public Shared Function LessThanOrEqual(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Mod(SqlByte, SqlByte)
  nameWithType: SqlByte.Mod(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Mod
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 722
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte Mod(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Mod(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Modulus(SqlByte, SqlByte)
  nameWithType: SqlByte.Modulus(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Modulus
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 723
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte Modulus(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Modulus(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Multiply(SqlByte, SqlByte)
  nameWithType: SqlByte.Multiply(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 724
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte Multiply(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Multiply(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: NotEquals(SqlByte, SqlByte)
  nameWithType: SqlByte.NotEquals(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotEquals
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 725
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlBoolean NotEquals(SqlByte x, SqlByte y)
    content.vb: Public Shared Function NotEquals(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  id: OnesComplement(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: OnesComplement(SqlByte)
  nameWithType: SqlByte.OnesComplement(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnesComplement
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 726
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte OnesComplement(SqlByte x)
    content.vb: Public Shared Function OnesComplement(x As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Addition(SqlByte, SqlByte)
  nameWithType: SqlByte.Addition(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Addition(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 727
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte operator +(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator +(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: BitwiseAnd(SqlByte, SqlByte)
  nameWithType: SqlByte.BitwiseAnd(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_BitwiseAnd
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 728
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte operator &(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator And(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: BitwiseOr(SqlByte, SqlByte)
  nameWithType: SqlByte.BitwiseOr(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_BitwiseOr
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 729
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte operator |(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator Or(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Division(SqlByte, SqlByte)
  nameWithType: SqlByte.Division(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Division(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Division
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 730
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte operator /(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator /(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Equality(SqlByte, SqlByte)
  nameWithType: SqlByte.Equality(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Equality(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 731
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlBoolean operator ==(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator =(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ExclusiveOr(SqlByte, SqlByte)
  nameWithType: SqlByte.ExclusiveOr(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.ExclusiveOr(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_ExclusiveOr
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 732
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte operator ^(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator Xor(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlBoolean to SqlByte)
  nameWithType: SqlByte.Explicit(SqlBoolean to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 733
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static explicit operator SqlByte(SqlBoolean x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlBoolean) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
    return:
      type: System.Data.SqlTypes.SqlByte
  nameWithType.vb: SqlByte.Narrowing(SqlBoolean to SqlByte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlBoolean to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte
  id: op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlByte to Byte)
  nameWithType: SqlByte.Explicit(SqlByte to Byte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlByte to System.Byte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 734
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static explicit operator byte (SqlByte x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlByte) As Byte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Byte
  nameWithType.vb: SqlByte.Narrowing(SqlByte to Byte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlByte to System.Byte)
  name.vb: Narrowing(SqlByte to Byte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlDecimal to SqlByte)
  nameWithType: SqlByte.Explicit(SqlDecimal to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 735
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static explicit operator SqlByte(SqlDecimal x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDecimal) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
    return:
      type: System.Data.SqlTypes.SqlByte
  nameWithType.vb: SqlByte.Narrowing(SqlDecimal to SqlByte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlDecimal to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlDouble to SqlByte)
  nameWithType: SqlByte.Explicit(SqlDouble to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 736
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static explicit operator SqlByte(SqlDouble x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDouble) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
    return:
      type: System.Data.SqlTypes.SqlByte
  nameWithType.vb: SqlByte.Narrowing(SqlDouble to SqlByte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlDouble to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlInt16 to SqlByte)
  nameWithType: SqlByte.Explicit(SqlInt16 to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 737
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static explicit operator SqlByte(SqlInt16 x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlInt16) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlByte
  nameWithType.vb: SqlByte.Narrowing(SqlInt16 to SqlByte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlInt16 to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlInt32 to SqlByte)
  nameWithType: SqlByte.Explicit(SqlInt32 to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 738
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static explicit operator SqlByte(SqlInt32 x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlInt32) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
    return:
      type: System.Data.SqlTypes.SqlByte
  nameWithType.vb: SqlByte.Narrowing(SqlInt32 to SqlByte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlInt32 to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlInt64 to SqlByte)
  nameWithType: SqlByte.Explicit(SqlInt64 to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 739
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static explicit operator SqlByte(SqlInt64 x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlInt64) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
    return:
      type: System.Data.SqlTypes.SqlByte
  nameWithType.vb: SqlByte.Narrowing(SqlInt64 to SqlByte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlInt64 to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlMoney to SqlByte)
  nameWithType: SqlByte.Explicit(SqlMoney to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 740
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static explicit operator SqlByte(SqlMoney x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlMoney) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
    return:
      type: System.Data.SqlTypes.SqlByte
  nameWithType.vb: SqlByte.Narrowing(SqlMoney to SqlByte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlMoney to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlSingle to SqlByte)
  nameWithType: SqlByte.Explicit(SqlSingle to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 741
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static explicit operator SqlByte(SqlSingle x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlSingle) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
    return:
      type: System.Data.SqlTypes.SqlByte
  nameWithType.vb: SqlByte.Narrowing(SqlSingle to SqlByte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlSingle to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlString to SqlByte)
  nameWithType: SqlByte.Explicit(SqlString to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 742
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static explicit operator SqlByte(SqlString x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlString) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlByte
  nameWithType.vb: SqlByte.Narrowing(SqlString to SqlByte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlString to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlByte, SqlByte)
  nameWithType: SqlByte.GreaterThan(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 743
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlBoolean operator>(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator>(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlByte, SqlByte)
  nameWithType: SqlByte.GreaterThanOrEqual(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 744
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlBoolean operator >=(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator >=(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte
  id: op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Implicit(Byte to SqlByte)
  nameWithType: SqlByte.Implicit(Byte to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Implicit(System.Byte to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 745
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static implicit operator SqlByte(byte x)
    content.vb: Public Shared Widening Operator CType(x As Byte) As SqlByte
    parameters:
    - id: x
      type: System.Byte
    return:
      type: System.Data.SqlTypes.SqlByte
  nameWithType.vb: SqlByte.Widening(Byte to SqlByte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Widening(System.Byte to System.Data.SqlTypes.SqlByte)
  name.vb: Widening(Byte to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Inequality(SqlByte, SqlByte)
  nameWithType: SqlByte.Inequality(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Inequality(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 746
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlBoolean operator !=(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator <>(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: LessThan(SqlByte, SqlByte)
  nameWithType: SqlByte.LessThan(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 747
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlBoolean operator <(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator <(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlByte, SqlByte)
  nameWithType: SqlByte.LessThanOrEqual(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 748
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlBoolean operator <=(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator <=(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Modulus(SqlByte, SqlByte)
  nameWithType: SqlByte.Modulus(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Modulus
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 749
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte operator %(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator Mod(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Multiply(SqlByte, SqlByte)
  nameWithType: SqlByte.Multiply(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Multiply
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 750
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte operator *(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator *(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)
  id: op_OnesComplement(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: OnesComplement(SqlByte)
  nameWithType: SqlByte.OnesComplement(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_OnesComplement
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 751
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte operator ~(SqlByte x)
    content.vb: Public Shared Operator Not(x As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Subtraction(SqlByte, SqlByte)
  nameWithType: SqlByte.Subtraction(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Subtraction(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 752
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte operator -(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator -(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Parse(System.String)
  commentId: M:System.Data.SqlTypes.SqlByte.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: SqlByte.Parse(String)
  fullName: System.Data.SqlTypes.SqlByte.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 753
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As SqlByte
    parameters:
    - id: s
      type: System.String
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Subtract(SqlByte, SqlByte)
  nameWithType: SqlByte.Subtract(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 754
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte Subtract(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Subtract(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.ToSqlBoolean
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlBoolean()
  nameWithType: SqlByte.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlBoolean()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlBoolean
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 755
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public SqlBoolean ToSqlBoolean()
    content.vb: Public Function ToSqlBoolean As SqlBoolean
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlDecimal
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlDecimal()
  nameWithType: SqlByte.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlDecimal()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlDecimal
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 756
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public SqlDecimal ToSqlDecimal()
    content.vb: Public Function ToSqlDecimal As SqlDecimal
    return:
      type: System.Data.SqlTypes.SqlDecimal
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlDouble
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlDouble()
  nameWithType: SqlByte.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlDouble()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlDouble
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 757
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public SqlDouble ToSqlDouble()
    content.vb: Public Function ToSqlDouble As SqlDouble
    return:
      type: System.Data.SqlTypes.SqlDouble
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt16
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlInt16()
  nameWithType: SqlByte.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt16()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt16
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 758
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public SqlInt16 ToSqlInt16()
    content.vb: Public Function ToSqlInt16 As SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt32
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlInt32()
  nameWithType: SqlByte.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt32()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt32
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 759
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public SqlInt32 ToSqlInt32()
    content.vb: Public Function ToSqlInt32 As SqlInt32
    return:
      type: System.Data.SqlTypes.SqlInt32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt64
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlInt64()
  nameWithType: SqlByte.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt64()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt64
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 760
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public SqlInt64 ToSqlInt64()
    content.vb: Public Function ToSqlInt64 As SqlInt64
    return:
      type: System.Data.SqlTypes.SqlInt64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlMoney
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlMoney()
  nameWithType: SqlByte.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlMoney()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlMoney
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 761
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public SqlMoney ToSqlMoney()
    content.vb: Public Function ToSqlMoney As SqlMoney
    return:
      type: System.Data.SqlTypes.SqlMoney
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlSingle
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlSingle()
  nameWithType: SqlByte.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlSingle()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlSingle
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 762
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public SqlSingle ToSqlSingle()
    content.vb: Public Function ToSqlSingle As SqlSingle
    return:
      type: System.Data.SqlTypes.SqlSingle
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlString
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlString()
  nameWithType: SqlByte.ToSqlString()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlString
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 763
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public SqlString ToSqlString()
    content.vb: Public Function ToSqlString As SqlString
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToString
  commentId: M:System.Data.SqlTypes.SqlByte.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SqlByte.ToString()
  fullName: System.Data.SqlTypes.SqlByte.ToString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 764
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Xor(SqlByte, SqlByte)
  nameWithType: SqlByte.Xor(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Xor
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 765
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  syntax:
    content: public static SqlByte Xor(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Xor(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    - id: y
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Data.SqlTypes
  commentId: N:System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  nameWithType: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
- uid: System.Data.SqlTypes.INullable
  commentId: T:System.Data.SqlTypes.INullable
  parent: System.Data.SqlTypes
  isExternal: false
  name: INullable
  nameWithType: INullable
  fullName: System.Data.SqlTypes.INullable
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Data.SqlTypes.SqlByte
  commentId: T:System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlTypes.INullable.IsNull
  commentId: P:System.Data.SqlTypes.INullable.IsNull
  parent: System.Data.SqlTypes.INullable
  isExternal: false
  name: IsNull
  nameWithType: INullable.IsNull
  fullName: System.Data.SqlTypes.INullable.IsNull
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlBoolean
  commentId: T:System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlDecimal
  commentId: T:System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlDouble
  commentId: T:System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlInt16
  commentId: T:System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlInt32
  commentId: T:System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlInt64
  commentId: T:System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlMoney
  commentId: T:System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlSingle
  commentId: T:System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlString
  commentId: T:System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
