items:
- uid: System.Delegate
  id: Delegate
  parent: System
  children:
  - System.Delegate.Combine(System.Delegate,System.Delegate)
  - System.Delegate.Combine(System.Delegate[])
  - System.Delegate.DynamicInvoke(System.Object[])
  - System.Delegate.Equals(System.Object)
  - System.Delegate.GetHashCode
  - System.Delegate.GetInvocationList
  - System.Delegate.op_Equality(System.Delegate,System.Delegate)
  - System.Delegate.op_Inequality(System.Delegate,System.Delegate)
  - System.Delegate.Remove(System.Delegate,System.Delegate)
  - System.Delegate.RemoveAll(System.Delegate,System.Delegate)
  - System.Delegate.Target
  name: Delegate
  fullName: System.Delegate
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Delegate.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 16
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents a delegate, which is a data structure that refers to a static method or to a class instance and an instance method of that class.
  syntax:
    content: public abstract class Delegate
    content.vb: Public MustInherit Class Delegate
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Delegate.Target
  id: Target
  parent: System.Delegate
  name: Target
  fullName: System.Delegate.Target
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 285
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the class instance on which the current delegate invokes the instance method.
  syntax:
    content: public object Target { get; }
    content.vb: Public ReadOnly Property Target As Object
    parameters: []
    return:
      type: System.Object
      description: The object on which the current delegate invokes the instance method, if the delegate represents an instance method; null if the delegate represents a static method.
- uid: System.Delegate.Combine(System.Delegate,System.Delegate)
  id: Combine(System.Delegate,System.Delegate)
  parent: System.Delegate
  name: Combine(Delegate, Delegate)
  fullName: System.Delegate.Combine(System.Delegate, System.Delegate)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 192
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates the invocation lists of two delegates.
  syntax:
    content: public static Delegate Combine(Delegate a, Delegate b)
    content.vb: Public Shared Function Combine(a As Delegate, b As Delegate) As
    parameters:
    - id: a
      type: System.Delegate
      description: The delegate whose invocation list comes first.
    - id: b
      type: System.Delegate
      description: The delegate whose invocation list comes last.
    return:
      type: System.Delegate
      description: A new delegate with an invocation list that concatenates the invocation lists of *a* and *b* in that order. Returns *a* if *b* is null, returns *b* if *a* is a null reference, and returns a null reference if both *a* and *b* are null references.
  exceptions:
  - type: System.ArgumentException
    description: Both *a* and *b* are not null, and *a* and *b* are not instances of the same delegate type.
- uid: System.Delegate.Combine(System.Delegate[])
  id: Combine(System.Delegate[])
  parent: System.Delegate
  name: Combine(Delegate[])
  name.vb: Combine(Delegate())
  fullName: System.Delegate.Combine(System.Delegate[])
  fullName.vb: System.Delegate.Combine(System.Delegate())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 200
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates the invocation lists of an array of delegates.
  syntax:
    content: public static Delegate Combine(params Delegate[] delegates)
    content.vb: Public Shared Function Combine(ParamArray delegates As Delegate ()) As
    parameters:
    - id: delegates
      type: System.Delegate[]
      description: The array of delegates to combine.
    return:
      type: System.Delegate
      description: A new delegate with an invocation list that concatenates the invocation lists of the delegates in the *delegates* array. Returns null if *delegates* is null, if *delegates* contains zero elements, or if every entry in *delegates* is null.
  exceptions:
  - type: System.ArgumentException
    description: Not all the non-null entries in *delegates* are instances of the same delegate type.
- uid: System.Delegate.DynamicInvoke(System.Object[])
  id: DynamicInvoke(System.Object[])
  parent: System.Delegate
  name: DynamicInvoke(Object[])
  name.vb: DynamicInvoke(Object())
  fullName: System.Delegate.DynamicInvoke(System.Object[])
  fullName.vb: System.Delegate.DynamicInvoke(System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 104
  assemblies:
  - System.Runtime
  namespace: System
  summary: Dynamically invokes (late-bound) the method represented by the current delegate.
  syntax:
    content: public object DynamicInvoke(params object[] args)
    content.vb: Public Function DynamicInvoke(ParamArray args As Object()) As Object
    parameters:
    - id: args
      type: System.Object[]
      description: An array of objects that are the arguments to pass to the method represented by the current delegate.-or- null, if the method represented by the current delegate does not require arguments.
    return:
      type: System.Object
      description: The object returned by the method represented by the delegate.
  exceptions:
  - type: System.MemberAccessException
    description: The caller does not have access to the method represented by the delegate (for example, if the method is private).-or- The number, order, or type of parameters listed in *args* is invalid.
  - type: System.ArgumentException
    description: The method represented by the delegate is invoked on an object or a class that does not support it.
  - type: System.Reflection.TargetInvocationException
    description: The method represented by the delegate is an instance method and the target object is null.-or- One of the encapsulated methods throws an exception.
- uid: System.Delegate.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Delegate
  name: Equals(Object)
  fullName: System.Delegate.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 125
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether the specified object and the current delegate are of the same type and share the same targets, methods, and invocation list.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current delegate.
    return:
      type: System.Boolean
      description: true if *obj* and the current delegate have the same targets, methods, and invocation list; otherwise, false.
  overridden: System.Object.Equals(System.Object)
  exceptions:
  - type: System.MemberAccessException
    description: The caller does not have access to the method represented by the delegate (for example, if the method is private).
- uid: System.Delegate.GetHashCode
  id: GetHashCode
  parent: System.Delegate
  name: GetHashCode()
  fullName: System.Delegate.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 177
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a hash code for the delegate.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A hash code for the delegate.
  overridden: System.Object.GetHashCode
- uid: System.Delegate.GetInvocationList
  id: GetInvocationList
  parent: System.Delegate
  name: GetInvocationList()
  fullName: System.Delegate.GetInvocationList()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 213
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the invocation list of the delegate.
  syntax:
    content: public virtual Delegate[] GetInvocationList()
    content.vb: Public Overridable Function GetInvocationList As
    return:
      type: System.Delegate[]
      description: An array of delegates representing the invocation list of the current delegate.
- uid: System.Delegate.op_Equality(System.Delegate,System.Delegate)
  id: op_Equality(System.Delegate,System.Delegate)
  parent: System.Delegate
  name: Equality(Delegate, Delegate)
  fullName: System.Delegate.Equality(System.Delegate, System.Delegate)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 572
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether the specified delegates are equal.
  syntax:
    content: public static bool operator ==(Delegate d1, Delegate d2)
    content.vb: Public Shared Operator =(d1 As Delegate, d2 As Delegate) As Boolean
    parameters:
    - id: d1
      type: System.Delegate
      description: The first delegate to compare.
    - id: d2
      type: System.Delegate
      description: The second delegate to compare.
    return:
      type: System.Boolean
      description: true if *d1* is equal to *d2*; otherwise, false.
- uid: System.Delegate.op_Inequality(System.Delegate,System.Delegate)
  id: op_Inequality(System.Delegate,System.Delegate)
  parent: System.Delegate
  name: Inequality(Delegate, Delegate)
  fullName: System.Delegate.Inequality(System.Delegate, System.Delegate)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 580
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether the specified delegates are not equal.
  syntax:
    content: public static bool operator !=(Delegate d1, Delegate d2)
    content.vb: Public Shared Operator <>(d1 As Delegate, d2 As Delegate) As Boolean
    parameters:
    - id: d1
      type: System.Delegate
      description: The first delegate to compare.
    - id: d2
      type: System.Delegate
      description: The second delegate to compare.
    return:
      type: System.Boolean
      description: true if *d1* is not equal to *d2*; otherwise, false.
- uid: System.Delegate.Remove(System.Delegate,System.Delegate)
  id: Remove(System.Delegate,System.Delegate)
  parent: System.Delegate
  name: Remove(Delegate, Delegate)
  fullName: System.Delegate.Remove(System.Delegate, System.Delegate)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 294
  assemblies:
  - System.Runtime
  namespace: System
  summary: Removes the last occurrence of the invocation list of a delegate from the invocation list of another delegate.
  syntax:
    content: public static Delegate Remove(Delegate source, Delegate value)
    content.vb: Public Shared Function Remove(source As Delegate, value As Delegate) As
    parameters:
    - id: source
      type: System.Delegate
      description: The delegate from which to remove the invocation list of *value*.
    - id: value
      type: System.Delegate
      description: The delegate that supplies the invocation list to remove from the invocation list of *source*.
    return:
      type: System.Delegate
      description: A new delegate with an invocation list formed by taking the invocation list of *source* and removing the last occurrence of the invocation list of *value*, if the invocation list of *value* is found within the invocation list of *source*. Returns *source* if *value* is null or if the invocation list of *value* is not found within the invocation list of *source*. Returns a null reference if the invocation list of *value* is equal to the invocation list of *source* or if *source* is a null reference.
  exceptions:
  - type: System.MemberAccessException
    description: The caller does not have access to the method represented by the delegate (for example, if the method is private).
  - type: System.ArgumentException
    description: The delegate types do not match.
- uid: System.Delegate.RemoveAll(System.Delegate,System.Delegate)
  id: RemoveAll(System.Delegate,System.Delegate)
  parent: System.Delegate
  name: RemoveAll(Delegate, Delegate)
  fullName: System.Delegate.RemoveAll(System.Delegate, System.Delegate)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 309
  assemblies:
  - System.Runtime
  namespace: System
  summary: Removes all occurrences of the invocation list of a delegate from the invocation list of another delegate.
  syntax:
    content: public static Delegate RemoveAll(Delegate source, Delegate value)
    content.vb: Public Shared Function RemoveAll(source As Delegate, value As Delegate) As
    parameters:
    - id: source
      type: System.Delegate
      description: The delegate from which to remove the invocation list of *value*.
    - id: value
      type: System.Delegate
      description: The delegate that supplies the invocation list to remove from the invocation list of *source*.
    return:
      type: System.Delegate
      description: A new delegate with an invocation list formed by taking the invocation list of *source* and removing all occurrences of the invocation list of *value*, if the invocation list of *value* is found within the invocation list of *source*. Returns *source* if *value* is null or if the invocation list of *value* is not found within the invocation list of *source*. Returns a null reference if the invocation list of *value* is equal to the invocation list of *source*, if *source* contains only a series of invocation lists that are equal to the invocation list of *value*, or if *source* is a null reference.
  exceptions:
  - type: System.MemberAccessException
    description: The caller does not have access to the method represented by the delegate (for example, if the method is private).
  - type: System.ArgumentException
    description: The delegate types do not match.
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Delegate
  parent: System
  isExternal: false
  name: Delegate
  fullName: System.Delegate
- uid: System.Delegate[]
  isExternal: false
  name: Delegate[]
  name.vb: Delegate()
  fullName: System.Delegate[]
  fullName.vb: System.Delegate()
  spec.csharp:
  - uid: System.Delegate
    name: Delegate
    fullName: System.Delegate
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Delegate
    name: Delegate
    fullName: System.Delegate
  - name: ()
    fullName: ()
- uid: System.Object[]
  isExternal: false
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.MemberAccessException
  parent: System
  isExternal: false
  name: MemberAccessException
  fullName: System.MemberAccessException
- uid: System.Reflection.TargetInvocationException
  isExternal: false
  name: TargetInvocationException
  fullName: System.Reflection.TargetInvocationException
