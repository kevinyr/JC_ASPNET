items:
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs
  commentId: T:System.Diagnostics.Contracts.ContractFailedEventArgs
  id: ContractFailedEventArgs
  parent: System.Diagnostics.Contracts
  children:
  - System.Diagnostics.Contracts.ContractFailedEventArgs.#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)
  - System.Diagnostics.Contracts.ContractFailedEventArgs.Condition
  - System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind
  - System.Diagnostics.Contracts.ContractFailedEventArgs.Handled
  - System.Diagnostics.Contracts.ContractFailedEventArgs.Message
  - System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException
  - System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled
  - System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind
  - System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind
  langs:
  - csharp
  - vb
  name: ContractFailedEventArgs
  nameWithType: ContractFailedEventArgs
  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContractFailedEventArgs
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 80
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  syntax:
    content: 'public sealed class ContractFailedEventArgs : EventArgs'
    content.vb: >-
      Public NotInheritable Class ContractFailedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)
  commentId: M:System.Diagnostics.Contracts.ContractFailedEventArgs.#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)
  id: '#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)'
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  - vb
  name: ContractFailedEventArgs(ContractFailureKind, String, String, Exception)
  nameWithType: ContractFailedEventArgs.ContractFailedEventArgs(ContractFailureKind, String, String, Exception)
  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.ContractFailedEventArgs(System.Diagnostics.Contracts.ContractFailureKind, System.String, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 82
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public ContractFailedEventArgs(ContractFailureKind failureKind, string message, string condition, Exception originalException)
    content.vb: Public Sub New(failureKind As ContractFailureKind, message As String, condition As String, originalException As Exception)
    parameters:
    - id: failureKind
      type: System.Diagnostics.Contracts.ContractFailureKind
    - id: message
      type: System.String
    - id: condition
      type: System.String
    - id: originalException
      type: System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Condition
  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.Condition
  id: Condition
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: ContractFailedEventArgs.Condition
  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.Condition
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Condition
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 83
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public string Condition { get; }
    content.vb: Public ReadOnly Property Condition As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind
  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind
  id: FailureKind
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  - vb
  name: FailureKind
  nameWithType: ContractFailedEventArgs.FailureKind
  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FailureKind
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 84
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public ContractFailureKind FailureKind { get; }
    content.vb: Public ReadOnly Property FailureKind As ContractFailureKind
    parameters: []
    return:
      type: System.Diagnostics.Contracts.ContractFailureKind
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Handled
  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.Handled
  id: Handled
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  - vb
  name: Handled
  nameWithType: ContractFailedEventArgs.Handled
  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.Handled
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Handled
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 85
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public bool Handled { get; }
    content.vb: Public ReadOnly Property Handled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Message
  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.Message
  id: Message
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ContractFailedEventArgs.Message
  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.Message
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Message
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 86
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public string Message { get; }
    content.vb: Public ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException
  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException
  id: OriginalException
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  - vb
  name: OriginalException
  nameWithType: ContractFailedEventArgs.OriginalException
  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OriginalException
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 87
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public Exception OriginalException { get; }
    content.vb: Public ReadOnly Property OriginalException As Exception
    parameters: []
    return:
      type: System.Exception
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind
  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind
  id: Unwind
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  - vb
  name: Unwind
  nameWithType: ContractFailedEventArgs.Unwind
  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Unwind
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 88
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public bool Unwind { get; }
    content.vb: Public ReadOnly Property Unwind As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled
  commentId: M:System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled
  id: SetHandled
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  - vb
  name: SetHandled()
  nameWithType: ContractFailedEventArgs.SetHandled()
  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetHandled
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 89
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public void SetHandled()
    content.vb: Public Sub SetHandled
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind
  commentId: M:System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind
  id: SetUnwind
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  - vb
  name: SetUnwind()
  nameWithType: ContractFailedEventArgs.SetUnwind()
  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetUnwind
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 91
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public void SetUnwind()
    content.vb: Public Sub SetUnwind
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Diagnostics.Contracts
  commentId: N:System.Diagnostics.Contracts
  isExternal: false
  name: System.Diagnostics.Contracts
  nameWithType: System.Diagnostics.Contracts
  fullName: System.Diagnostics.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Diagnostics.Contracts.ContractFailureKind
  commentId: T:System.Diagnostics.Contracts.ContractFailureKind
  parent: System.Diagnostics.Contracts
  isExternal: false
  name: ContractFailureKind
  nameWithType: ContractFailureKind
  fullName: System.Diagnostics.Contracts.ContractFailureKind
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
