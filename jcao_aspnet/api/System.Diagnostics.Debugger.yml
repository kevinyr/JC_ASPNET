items:
- uid: System.Diagnostics.Debugger
  id: Debugger
  parent: System.Diagnostics
  children:
  - System.Diagnostics.Debugger.Break
  - System.Diagnostics.Debugger.IsAttached
  - System.Diagnostics.Debugger.Launch
  name: Debugger
  fullName: System.Diagnostics.Debugger
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Diagnostics/Debugger.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Diagnostics/Debugger.cs
    startLine: 19
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: Enables communication with a debugger. This class cannot be inherited.
  syntax:
    content: 'public class Debugger : object'
    content.vb: Public Class Debugger Inherits Object
  inheritance:
  - System.Object
- uid: System.Diagnostics.Debugger.IsAttached
  id: IsAttached
  parent: System.Diagnostics.Debugger
  name: IsAttached
  fullName: System.Diagnostics.Debugger.IsAttached
  type: Property
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: Gets a value that indicates whether a debugger is attached to the process.
  syntax:
    content: public static bool IsAttached { get; }
    content.vb: Public Shared ReadOnly Property IsAttached As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if a debugger is attached; otherwise, false.
- uid: System.Diagnostics.Debugger.Break
  id: Break
  parent: System.Diagnostics.Debugger
  name: Break()
  fullName: System.Diagnostics.Debugger.Break()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Diagnostics/Debugger.cs
    startLine: 34
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: Signals a breakpoint to an attached debugger.
  syntax:
    content: public static void Break()
    content.vb: Public Shared Sub Break
  exceptions:
  - type: System.Security.SecurityException
    description: The <xref href="System.Security.Permissions.UIPermission" data-throw-if-not-resolved="false"></xref> is not set to break into the debugger.
- uid: System.Diagnostics.Debugger.Launch
  id: Launch
  parent: System.Diagnostics.Debugger
  name: Launch()
  fullName: System.Diagnostics.Debugger.Launch()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Diagnostics/Debugger.cs
    startLine: 84
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: Launches and attaches a debugger to the process.
  syntax:
    content: public static bool Launch()
    content.vb: Public Shared Function Launch As Boolean
    return:
      type: System.Boolean
      description: true if the startup is successful or if the debugger is already attached; otherwise, false.
  exceptions:
  - type: System.Security.SecurityException
    description: The <xref href="System.Security.Permissions.UIPermission" data-throw-if-not-resolved="false"></xref> is not set to start the debugger.
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
