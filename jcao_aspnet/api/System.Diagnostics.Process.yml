items:
- uid: System.Diagnostics.Process
  commentId: T:System.Diagnostics.Process
  id: Process
  parent: System.Diagnostics
  children:
  - System.Diagnostics.Process.#ctor
  - System.Diagnostics.Process.BasePriority
  - System.Diagnostics.Process.BeginErrorReadLine
  - System.Diagnostics.Process.BeginOutputReadLine
  - System.Diagnostics.Process.CancelErrorRead
  - System.Diagnostics.Process.CancelOutputRead
  - System.Diagnostics.Process.Dispose
  - System.Diagnostics.Process.Dispose(System.Boolean)
  - System.Diagnostics.Process.EnableRaisingEvents
  - System.Diagnostics.Process.EnterDebugMode
  - System.Diagnostics.Process.ErrorDataReceived
  - System.Diagnostics.Process.ExitCode
  - System.Diagnostics.Process.Exited
  - System.Diagnostics.Process.ExitTime
  - System.Diagnostics.Process.GetCurrentProcess
  - System.Diagnostics.Process.GetProcessById(System.Int32)
  - System.Diagnostics.Process.GetProcessById(System.Int32,System.String)
  - System.Diagnostics.Process.GetProcesses
  - System.Diagnostics.Process.GetProcesses(System.String)
  - System.Diagnostics.Process.GetProcessesByName(System.String)
  - System.Diagnostics.Process.GetProcessesByName(System.String,System.String)
  - System.Diagnostics.Process.HasExited
  - System.Diagnostics.Process.Id
  - System.Diagnostics.Process.Kill
  - System.Diagnostics.Process.LeaveDebugMode
  - System.Diagnostics.Process.MachineName
  - System.Diagnostics.Process.MainModule
  - System.Diagnostics.Process.MaxWorkingSet
  - System.Diagnostics.Process.MinWorkingSet
  - System.Diagnostics.Process.Modules
  - System.Diagnostics.Process.NonpagedSystemMemorySize64
  - System.Diagnostics.Process.OnExited
  - System.Diagnostics.Process.OutputDataReceived
  - System.Diagnostics.Process.PagedMemorySize64
  - System.Diagnostics.Process.PagedSystemMemorySize64
  - System.Diagnostics.Process.PeakPagedMemorySize64
  - System.Diagnostics.Process.PeakVirtualMemorySize64
  - System.Diagnostics.Process.PeakWorkingSet64
  - System.Diagnostics.Process.PriorityBoostEnabled
  - System.Diagnostics.Process.PriorityClass
  - System.Diagnostics.Process.PrivateMemorySize64
  - System.Diagnostics.Process.PrivilegedProcessorTime
  - System.Diagnostics.Process.ProcessName
  - System.Diagnostics.Process.ProcessorAffinity
  - System.Diagnostics.Process.Refresh
  - System.Diagnostics.Process.SafeHandle
  - System.Diagnostics.Process.SessionId
  - System.Diagnostics.Process.StandardError
  - System.Diagnostics.Process.StandardInput
  - System.Diagnostics.Process.StandardOutput
  - System.Diagnostics.Process.Start
  - System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)
  - System.Diagnostics.Process.Start(System.String)
  - System.Diagnostics.Process.Start(System.String,System.String)
  - System.Diagnostics.Process.StartInfo
  - System.Diagnostics.Process.StartTime
  - System.Diagnostics.Process.Threads
  - System.Diagnostics.Process.TotalProcessorTime
  - System.Diagnostics.Process.UserProcessorTime
  - System.Diagnostics.Process.VirtualMemorySize64
  - System.Diagnostics.Process.WaitForExit
  - System.Diagnostics.Process.WaitForExit(System.Int32)
  - System.Diagnostics.Process.WorkingSet64
  langs:
  - csharp
  - vb
  name: Process
  nameWithType: Process
  fullName: System.Diagnostics.Process
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Process
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.Manual.cs
    startLine: 9
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: 'public class Process : IDisposable'
    content.vb: >-
      Public Class Process
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.Process.#ctor
  commentId: M:System.Diagnostics.Process.#ctor
  id: '#ctor'
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Process()
  nameWithType: Process.Process()
  fullName: System.Diagnostics.Process.Process()
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 25
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public Process()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.BasePriority
  commentId: P:System.Diagnostics.Process.BasePriority
  id: BasePriority
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: BasePriority
  nameWithType: Process.BasePriority
  fullName: System.Diagnostics.Process.BasePriority
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BasePriority
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 26
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public int BasePriority { get; }
    content.vb: Public ReadOnly Property BasePriority As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.EnableRaisingEvents
  commentId: P:System.Diagnostics.Process.EnableRaisingEvents
  id: EnableRaisingEvents
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: EnableRaisingEvents
  nameWithType: Process.EnableRaisingEvents
  fullName: System.Diagnostics.Process.EnableRaisingEvents
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnableRaisingEvents
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 27
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool EnableRaisingEvents { get; set; }
    content.vb: Public Property EnableRaisingEvents As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.ExitCode
  commentId: P:System.Diagnostics.Process.ExitCode
  id: ExitCode
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: ExitCode
  nameWithType: Process.ExitCode
  fullName: System.Diagnostics.Process.ExitCode
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExitCode
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 29
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public int ExitCode { get; }
    content.vb: Public ReadOnly Property ExitCode As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.ExitTime
  commentId: P:System.Diagnostics.Process.ExitTime
  id: ExitTime
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: ExitTime
  nameWithType: Process.ExitTime
  fullName: System.Diagnostics.Process.ExitTime
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExitTime
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 30
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public DateTime ExitTime { get; }
    content.vb: Public ReadOnly Property ExitTime As DateTime
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.HasExited
  commentId: P:System.Diagnostics.Process.HasExited
  id: HasExited
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: HasExited
  nameWithType: Process.HasExited
  fullName: System.Diagnostics.Process.HasExited
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasExited
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 31
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool HasExited { get; }
    content.vb: Public ReadOnly Property HasExited As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.Id
  commentId: P:System.Diagnostics.Process.Id
  id: Id
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Process.Id
  fullName: System.Diagnostics.Process.Id
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Id
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 32
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public int Id { get; }
    content.vb: Public ReadOnly Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.MachineName
  commentId: P:System.Diagnostics.Process.MachineName
  id: MachineName
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: MachineName
  nameWithType: Process.MachineName
  fullName: System.Diagnostics.Process.MachineName
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MachineName
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 33
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public string MachineName { get; }
    content.vb: Public ReadOnly Property MachineName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.MainModule
  commentId: P:System.Diagnostics.Process.MainModule
  id: MainModule
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: MainModule
  nameWithType: Process.MainModule
  fullName: System.Diagnostics.Process.MainModule
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MainModule
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 34
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public ProcessModule MainModule { get; }
    content.vb: Public ReadOnly Property MainModule As ProcessModule
    parameters: []
    return:
      type: System.Diagnostics.ProcessModule
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.MaxWorkingSet
  commentId: P:System.Diagnostics.Process.MaxWorkingSet
  id: MaxWorkingSet
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: MaxWorkingSet
  nameWithType: Process.MaxWorkingSet
  fullName: System.Diagnostics.Process.MaxWorkingSet
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxWorkingSet
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 35
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public IntPtr MaxWorkingSet { get; set; }
    content.vb: Public Property MaxWorkingSet As IntPtr
    parameters: []
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.MinWorkingSet
  commentId: P:System.Diagnostics.Process.MinWorkingSet
  id: MinWorkingSet
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: MinWorkingSet
  nameWithType: Process.MinWorkingSet
  fullName: System.Diagnostics.Process.MinWorkingSet
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinWorkingSet
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 36
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public IntPtr MinWorkingSet { get; set; }
    content.vb: Public Property MinWorkingSet As IntPtr
    parameters: []
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.Modules
  commentId: P:System.Diagnostics.Process.Modules
  id: Modules
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: Process.Modules
  fullName: System.Diagnostics.Process.Modules
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Modules
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 37
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public ProcessModuleCollection Modules { get; }
    content.vb: Public ReadOnly Property Modules As ProcessModuleCollection
    parameters: []
    return:
      type: System.Diagnostics.ProcessModuleCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.NonpagedSystemMemorySize64
  commentId: P:System.Diagnostics.Process.NonpagedSystemMemorySize64
  id: NonpagedSystemMemorySize64
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: NonpagedSystemMemorySize64
  nameWithType: Process.NonpagedSystemMemorySize64
  fullName: System.Diagnostics.Process.NonpagedSystemMemorySize64
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NonpagedSystemMemorySize64
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 38
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public long NonpagedSystemMemorySize64 { get; }
    content.vb: Public ReadOnly Property NonpagedSystemMemorySize64 As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.PagedMemorySize64
  commentId: P:System.Diagnostics.Process.PagedMemorySize64
  id: PagedMemorySize64
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: PagedMemorySize64
  nameWithType: Process.PagedMemorySize64
  fullName: System.Diagnostics.Process.PagedMemorySize64
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PagedMemorySize64
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 39
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public long PagedMemorySize64 { get; }
    content.vb: Public ReadOnly Property PagedMemorySize64 As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.PagedSystemMemorySize64
  commentId: P:System.Diagnostics.Process.PagedSystemMemorySize64
  id: PagedSystemMemorySize64
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: PagedSystemMemorySize64
  nameWithType: Process.PagedSystemMemorySize64
  fullName: System.Diagnostics.Process.PagedSystemMemorySize64
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PagedSystemMemorySize64
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 40
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public long PagedSystemMemorySize64 { get; }
    content.vb: Public ReadOnly Property PagedSystemMemorySize64 As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.PeakPagedMemorySize64
  commentId: P:System.Diagnostics.Process.PeakPagedMemorySize64
  id: PeakPagedMemorySize64
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: PeakPagedMemorySize64
  nameWithType: Process.PeakPagedMemorySize64
  fullName: System.Diagnostics.Process.PeakPagedMemorySize64
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PeakPagedMemorySize64
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 41
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public long PeakPagedMemorySize64 { get; }
    content.vb: Public ReadOnly Property PeakPagedMemorySize64 As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.PeakVirtualMemorySize64
  commentId: P:System.Diagnostics.Process.PeakVirtualMemorySize64
  id: PeakVirtualMemorySize64
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: PeakVirtualMemorySize64
  nameWithType: Process.PeakVirtualMemorySize64
  fullName: System.Diagnostics.Process.PeakVirtualMemorySize64
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PeakVirtualMemorySize64
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 42
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public long PeakVirtualMemorySize64 { get; }
    content.vb: Public ReadOnly Property PeakVirtualMemorySize64 As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.PeakWorkingSet64
  commentId: P:System.Diagnostics.Process.PeakWorkingSet64
  id: PeakWorkingSet64
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: PeakWorkingSet64
  nameWithType: Process.PeakWorkingSet64
  fullName: System.Diagnostics.Process.PeakWorkingSet64
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PeakWorkingSet64
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 43
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public long PeakWorkingSet64 { get; }
    content.vb: Public ReadOnly Property PeakWorkingSet64 As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.PriorityBoostEnabled
  commentId: P:System.Diagnostics.Process.PriorityBoostEnabled
  id: PriorityBoostEnabled
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: PriorityBoostEnabled
  nameWithType: Process.PriorityBoostEnabled
  fullName: System.Diagnostics.Process.PriorityBoostEnabled
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PriorityBoostEnabled
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 44
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool PriorityBoostEnabled { get; set; }
    content.vb: Public Property PriorityBoostEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.PriorityClass
  commentId: P:System.Diagnostics.Process.PriorityClass
  id: PriorityClass
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: PriorityClass
  nameWithType: Process.PriorityClass
  fullName: System.Diagnostics.Process.PriorityClass
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PriorityClass
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 45
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public ProcessPriorityClass PriorityClass { get; set; }
    content.vb: Public Property PriorityClass As ProcessPriorityClass
    parameters: []
    return:
      type: System.Diagnostics.ProcessPriorityClass
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.PrivateMemorySize64
  commentId: P:System.Diagnostics.Process.PrivateMemorySize64
  id: PrivateMemorySize64
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: PrivateMemorySize64
  nameWithType: Process.PrivateMemorySize64
  fullName: System.Diagnostics.Process.PrivateMemorySize64
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PrivateMemorySize64
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 46
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public long PrivateMemorySize64 { get; }
    content.vb: Public ReadOnly Property PrivateMemorySize64 As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.PrivilegedProcessorTime
  commentId: P:System.Diagnostics.Process.PrivilegedProcessorTime
  id: PrivilegedProcessorTime
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: PrivilegedProcessorTime
  nameWithType: Process.PrivilegedProcessorTime
  fullName: System.Diagnostics.Process.PrivilegedProcessorTime
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PrivilegedProcessorTime
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 47
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public TimeSpan PrivilegedProcessorTime { get; }
    content.vb: Public ReadOnly Property PrivilegedProcessorTime As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.ProcessName
  commentId: P:System.Diagnostics.Process.ProcessName
  id: ProcessName
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: ProcessName
  nameWithType: Process.ProcessName
  fullName: System.Diagnostics.Process.ProcessName
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProcessName
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 48
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public string ProcessName { get; }
    content.vb: Public ReadOnly Property ProcessName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.ProcessorAffinity
  commentId: P:System.Diagnostics.Process.ProcessorAffinity
  id: ProcessorAffinity
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: ProcessorAffinity
  nameWithType: Process.ProcessorAffinity
  fullName: System.Diagnostics.Process.ProcessorAffinity
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProcessorAffinity
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 49
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public IntPtr ProcessorAffinity { get; set; }
    content.vb: Public Property ProcessorAffinity As IntPtr
    parameters: []
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.SafeHandle
  commentId: P:System.Diagnostics.Process.SafeHandle
  id: SafeHandle
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: SafeHandle
  nameWithType: Process.SafeHandle
  fullName: System.Diagnostics.Process.SafeHandle
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SafeHandle
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 50
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public SafeProcessHandle SafeHandle { get; }
    content.vb: Public ReadOnly Property SafeHandle As SafeProcessHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafeProcessHandle
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.SessionId
  commentId: P:System.Diagnostics.Process.SessionId
  id: SessionId
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: SessionId
  nameWithType: Process.SessionId
  fullName: System.Diagnostics.Process.SessionId
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SessionId
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 51
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public int SessionId { get; }
    content.vb: Public ReadOnly Property SessionId As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.StandardError
  commentId: P:System.Diagnostics.Process.StandardError
  id: StandardError
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: StandardError
  nameWithType: Process.StandardError
  fullName: System.Diagnostics.Process.StandardError
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StandardError
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 52
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public IO.StreamReader StandardError { get; }
    content.vb: Public ReadOnly Property StandardError As IO.StreamReader
    parameters: []
    return:
      type: System.IO.StreamReader
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.StandardInput
  commentId: P:System.Diagnostics.Process.StandardInput
  id: StandardInput
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: StandardInput
  nameWithType: Process.StandardInput
  fullName: System.Diagnostics.Process.StandardInput
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StandardInput
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 53
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public IO.StreamWriter StandardInput { get; }
    content.vb: Public ReadOnly Property StandardInput As IO.StreamWriter
    parameters: []
    return:
      type: System.IO.StreamWriter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.StandardOutput
  commentId: P:System.Diagnostics.Process.StandardOutput
  id: StandardOutput
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: StandardOutput
  nameWithType: Process.StandardOutput
  fullName: System.Diagnostics.Process.StandardOutput
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StandardOutput
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 54
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public IO.StreamReader StandardOutput { get; }
    content.vb: Public ReadOnly Property StandardOutput As IO.StreamReader
    parameters: []
    return:
      type: System.IO.StreamReader
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.StartInfo
  commentId: P:System.Diagnostics.Process.StartInfo
  id: StartInfo
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: StartInfo
  nameWithType: Process.StartInfo
  fullName: System.Diagnostics.Process.StartInfo
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StartInfo
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 55
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public ProcessStartInfo StartInfo { get; set; }
    content.vb: Public Property StartInfo As ProcessStartInfo
    parameters: []
    return:
      type: System.Diagnostics.ProcessStartInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.StartTime
  commentId: P:System.Diagnostics.Process.StartTime
  id: StartTime
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: Process.StartTime
  fullName: System.Diagnostics.Process.StartTime
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StartTime
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 56
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public DateTime StartTime { get; }
    content.vb: Public ReadOnly Property StartTime As DateTime
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.Threads
  commentId: P:System.Diagnostics.Process.Threads
  id: Threads
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Threads
  nameWithType: Process.Threads
  fullName: System.Diagnostics.Process.Threads
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Threads
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 57
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public ProcessThreadCollection Threads { get; }
    content.vb: Public ReadOnly Property Threads As ProcessThreadCollection
    parameters: []
    return:
      type: System.Diagnostics.ProcessThreadCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.TotalProcessorTime
  commentId: P:System.Diagnostics.Process.TotalProcessorTime
  id: TotalProcessorTime
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: TotalProcessorTime
  nameWithType: Process.TotalProcessorTime
  fullName: System.Diagnostics.Process.TotalProcessorTime
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TotalProcessorTime
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 58
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public TimeSpan TotalProcessorTime { get; }
    content.vb: Public ReadOnly Property TotalProcessorTime As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.UserProcessorTime
  commentId: P:System.Diagnostics.Process.UserProcessorTime
  id: UserProcessorTime
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: UserProcessorTime
  nameWithType: Process.UserProcessorTime
  fullName: System.Diagnostics.Process.UserProcessorTime
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UserProcessorTime
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 59
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public TimeSpan UserProcessorTime { get; }
    content.vb: Public ReadOnly Property UserProcessorTime As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.VirtualMemorySize64
  commentId: P:System.Diagnostics.Process.VirtualMemorySize64
  id: VirtualMemorySize64
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: VirtualMemorySize64
  nameWithType: Process.VirtualMemorySize64
  fullName: System.Diagnostics.Process.VirtualMemorySize64
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VirtualMemorySize64
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 60
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public long VirtualMemorySize64 { get; }
    content.vb: Public ReadOnly Property VirtualMemorySize64 As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.WorkingSet64
  commentId: P:System.Diagnostics.Process.WorkingSet64
  id: WorkingSet64
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: WorkingSet64
  nameWithType: Process.WorkingSet64
  fullName: System.Diagnostics.Process.WorkingSet64
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WorkingSet64
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 61
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public long WorkingSet64 { get; }
    content.vb: Public ReadOnly Property WorkingSet64 As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Process.ErrorDataReceived
  commentId: E:System.Diagnostics.Process.ErrorDataReceived
  id: ErrorDataReceived
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: ErrorDataReceived
  nameWithType: Process.ErrorDataReceived
  fullName: System.Diagnostics.Process.ErrorDataReceived
  type: Event
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ErrorDataReceived
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 62
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public event DataReceivedEventHandler ErrorDataReceived
    content.vb: Public Event ErrorDataReceived As DataReceivedEventHandler
    return:
      type: System.Diagnostics.DataReceivedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.Exited
  commentId: E:System.Diagnostics.Process.Exited
  id: Exited
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Exited
  nameWithType: Process.Exited
  fullName: System.Diagnostics.Process.Exited
  type: Event
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exited
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 63
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public event EventHandler Exited
    content.vb: Public Event Exited As EventHandler
    return:
      type: System.EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.OutputDataReceived
  commentId: E:System.Diagnostics.Process.OutputDataReceived
  id: OutputDataReceived
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: OutputDataReceived
  nameWithType: Process.OutputDataReceived
  fullName: System.Diagnostics.Process.OutputDataReceived
  type: Event
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OutputDataReceived
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 64
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public event DataReceivedEventHandler OutputDataReceived
    content.vb: Public Event OutputDataReceived As DataReceivedEventHandler
    return:
      type: System.Diagnostics.DataReceivedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.BeginErrorReadLine
  commentId: M:System.Diagnostics.Process.BeginErrorReadLine
  id: BeginErrorReadLine
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: BeginErrorReadLine()
  nameWithType: Process.BeginErrorReadLine()
  fullName: System.Diagnostics.Process.BeginErrorReadLine()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginErrorReadLine
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 65
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void BeginErrorReadLine()
    content.vb: Public Sub BeginErrorReadLine
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.BeginOutputReadLine
  commentId: M:System.Diagnostics.Process.BeginOutputReadLine
  id: BeginOutputReadLine
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: BeginOutputReadLine()
  nameWithType: Process.BeginOutputReadLine()
  fullName: System.Diagnostics.Process.BeginOutputReadLine()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginOutputReadLine
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 66
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void BeginOutputReadLine()
    content.vb: Public Sub BeginOutputReadLine
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.CancelErrorRead
  commentId: M:System.Diagnostics.Process.CancelErrorRead
  id: CancelErrorRead
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: CancelErrorRead()
  nameWithType: Process.CancelErrorRead()
  fullName: System.Diagnostics.Process.CancelErrorRead()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CancelErrorRead
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 67
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void CancelErrorRead()
    content.vb: Public Sub CancelErrorRead
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.CancelOutputRead
  commentId: M:System.Diagnostics.Process.CancelOutputRead
  id: CancelOutputRead
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: CancelOutputRead()
  nameWithType: Process.CancelOutputRead()
  fullName: System.Diagnostics.Process.CancelOutputRead()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CancelOutputRead
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 68
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void CancelOutputRead()
    content.vb: Public Sub CancelOutputRead
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.EnterDebugMode
  commentId: M:System.Diagnostics.Process.EnterDebugMode
  id: EnterDebugMode
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: EnterDebugMode()
  nameWithType: Process.EnterDebugMode()
  fullName: System.Diagnostics.Process.EnterDebugMode()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnterDebugMode
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 69
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public static void EnterDebugMode()
    content.vb: Public Shared Sub EnterDebugMode
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Process.GetCurrentProcess
  commentId: M:System.Diagnostics.Process.GetCurrentProcess
  id: GetCurrentProcess
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: GetCurrentProcess()
  nameWithType: Process.GetCurrentProcess()
  fullName: System.Diagnostics.Process.GetCurrentProcess()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCurrentProcess
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 70
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public static Process GetCurrentProcess()
    content.vb: Public Shared Function GetCurrentProcess As Process
    return:
      type: System.Diagnostics.Process
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Process.GetProcessById(System.Int32)
  commentId: M:System.Diagnostics.Process.GetProcessById(System.Int32)
  id: GetProcessById(System.Int32)
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: GetProcessById(Int32)
  nameWithType: Process.GetProcessById(Int32)
  fullName: System.Diagnostics.Process.GetProcessById(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProcessById
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 71
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public static Process GetProcessById(int processId)
    content.vb: Public Shared Function GetProcessById(processId As Integer) As Process
    parameters:
    - id: processId
      type: System.Int32
    return:
      type: System.Diagnostics.Process
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Process.GetProcessById(System.Int32,System.String)
  commentId: M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)
  id: GetProcessById(System.Int32,System.String)
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: GetProcessById(Int32, String)
  nameWithType: Process.GetProcessById(Int32, String)
  fullName: System.Diagnostics.Process.GetProcessById(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProcessById
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 72
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public static Process GetProcessById(int processId, string machineName)
    content.vb: Public Shared Function GetProcessById(processId As Integer, machineName As String) As Process
    parameters:
    - id: processId
      type: System.Int32
    - id: machineName
      type: System.String
    return:
      type: System.Diagnostics.Process
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Process.GetProcesses
  commentId: M:System.Diagnostics.Process.GetProcesses
  id: GetProcesses
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: GetProcesses()
  nameWithType: Process.GetProcesses()
  fullName: System.Diagnostics.Process.GetProcesses()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProcesses
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 73
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public static Process[] GetProcesses()
    content.vb: Public Shared Function GetProcesses As Process()
    return:
      type: System.Diagnostics.Process[]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Process.GetProcesses(System.String)
  commentId: M:System.Diagnostics.Process.GetProcesses(System.String)
  id: GetProcesses(System.String)
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: GetProcesses(String)
  nameWithType: Process.GetProcesses(String)
  fullName: System.Diagnostics.Process.GetProcesses(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProcesses
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 74
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public static Process[] GetProcesses(string machineName)
    content.vb: Public Shared Function GetProcesses(machineName As String) As Process()
    parameters:
    - id: machineName
      type: System.String
    return:
      type: System.Diagnostics.Process[]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Process.GetProcessesByName(System.String)
  commentId: M:System.Diagnostics.Process.GetProcessesByName(System.String)
  id: GetProcessesByName(System.String)
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: GetProcessesByName(String)
  nameWithType: Process.GetProcessesByName(String)
  fullName: System.Diagnostics.Process.GetProcessesByName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProcessesByName
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 75
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public static Process[] GetProcessesByName(string processName)
    content.vb: Public Shared Function GetProcessesByName(processName As String) As Process()
    parameters:
    - id: processName
      type: System.String
    return:
      type: System.Diagnostics.Process[]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Process.GetProcessesByName(System.String,System.String)
  commentId: M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)
  id: GetProcessesByName(System.String,System.String)
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: GetProcessesByName(String, String)
  nameWithType: Process.GetProcessesByName(String, String)
  fullName: System.Diagnostics.Process.GetProcessesByName(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProcessesByName
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 76
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public static Process[] GetProcessesByName(string processName, string machineName)
    content.vb: Public Shared Function GetProcessesByName(processName As String, machineName As String) As Process()
    parameters:
    - id: processName
      type: System.String
    - id: machineName
      type: System.String
    return:
      type: System.Diagnostics.Process[]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Process.Kill
  commentId: M:System.Diagnostics.Process.Kill
  id: Kill
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Kill()
  nameWithType: Process.Kill()
  fullName: System.Diagnostics.Process.Kill()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Kill
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 77
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void Kill()
    content.vb: Public Sub Kill
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.LeaveDebugMode
  commentId: M:System.Diagnostics.Process.LeaveDebugMode
  id: LeaveDebugMode
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: LeaveDebugMode()
  nameWithType: Process.LeaveDebugMode()
  fullName: System.Diagnostics.Process.LeaveDebugMode()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LeaveDebugMode
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 78
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public static void LeaveDebugMode()
    content.vb: Public Shared Sub LeaveDebugMode
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Process.OnExited
  commentId: M:System.Diagnostics.Process.OnExited
  id: OnExited
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: OnExited()
  nameWithType: Process.OnExited()
  fullName: System.Diagnostics.Process.OnExited()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnExited
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 79
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: protected void OnExited()
    content.vb: Protected Sub OnExited
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Diagnostics.Process.Refresh
  commentId: M:System.Diagnostics.Process.Refresh
  id: Refresh
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: Process.Refresh()
  fullName: System.Diagnostics.Process.Refresh()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Refresh
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 80
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void Refresh()
    content.vb: Public Sub Refresh
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.Start
  commentId: M:System.Diagnostics.Process.Start
  id: Start
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Process.Start()
  fullName: System.Diagnostics.Process.Start()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Start
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 81
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool Start()
    content.vb: Public Function Start As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)
  commentId: M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)
  id: Start(System.Diagnostics.ProcessStartInfo)
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Start(ProcessStartInfo)
  nameWithType: Process.Start(ProcessStartInfo)
  fullName: System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Start
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 82
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public static Process Start(ProcessStartInfo startInfo)
    content.vb: Public Shared Function Start(startInfo As ProcessStartInfo) As Process
    parameters:
    - id: startInfo
      type: System.Diagnostics.ProcessStartInfo
    return:
      type: System.Diagnostics.Process
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Process.Start(System.String)
  commentId: M:System.Diagnostics.Process.Start(System.String)
  id: Start(System.String)
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Start(String)
  nameWithType: Process.Start(String)
  fullName: System.Diagnostics.Process.Start(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Start
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 83
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public static Process Start(string fileName)
    content.vb: Public Shared Function Start(fileName As String) As Process
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.Diagnostics.Process
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Process.Start(System.String,System.String)
  commentId: M:System.Diagnostics.Process.Start(System.String,System.String)
  id: Start(System.String,System.String)
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Start(String, String)
  nameWithType: Process.Start(String, String)
  fullName: System.Diagnostics.Process.Start(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Start
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 84
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public static Process Start(string fileName, string arguments)
    content.vb: Public Shared Function Start(fileName As String, arguments As String) As Process
    parameters:
    - id: fileName
      type: System.String
    - id: arguments
      type: System.String
    return:
      type: System.Diagnostics.Process
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Process.WaitForExit
  commentId: M:System.Diagnostics.Process.WaitForExit
  id: WaitForExit
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: WaitForExit()
  nameWithType: Process.WaitForExit()
  fullName: System.Diagnostics.Process.WaitForExit()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WaitForExit
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 85
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void WaitForExit()
    content.vb: Public Sub WaitForExit
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.WaitForExit(System.Int32)
  commentId: M:System.Diagnostics.Process.WaitForExit(System.Int32)
  id: WaitForExit(System.Int32)
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: WaitForExit(Int32)
  nameWithType: Process.WaitForExit(Int32)
  fullName: System.Diagnostics.Process.WaitForExit(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WaitForExit
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.cs
    startLine: 86
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool WaitForExit(int milliseconds)
    content.vb: Public Function WaitForExit(milliseconds As Integer) As Boolean
    parameters:
    - id: milliseconds
      type: System.Int32
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.Dispose
  commentId: M:System.Diagnostics.Process.Dispose
  id: Dispose
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Process.Dispose()
  fullName: System.Diagnostics.Process.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.Manual.cs
    startLine: 11
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Process.Dispose(System.Boolean)
  commentId: M:System.Diagnostics.Process.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.Process
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: Process.Dispose(Boolean)
  fullName: System.Diagnostics.Process.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Diagnostics.Process/ref/4.0/System.Diagnostics.Process.Manual.cs
    startLine: 12
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.ProcessModule
  commentId: T:System.Diagnostics.ProcessModule
  parent: System.Diagnostics
  isExternal: false
  name: ProcessModule
  nameWithType: ProcessModule
  fullName: System.Diagnostics.ProcessModule
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.ProcessModuleCollection
  commentId: T:System.Diagnostics.ProcessModuleCollection
  parent: System.Diagnostics
  isExternal: false
  name: ProcessModuleCollection
  nameWithType: ProcessModuleCollection
  fullName: System.Diagnostics.ProcessModuleCollection
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.ProcessPriorityClass
  commentId: T:System.Diagnostics.ProcessPriorityClass
  parent: System.Diagnostics
  isExternal: false
  name: ProcessPriorityClass
  nameWithType: ProcessPriorityClass
  fullName: System.Diagnostics.ProcessPriorityClass
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Win32.SafeHandles.SafeProcessHandle
  commentId: T:Microsoft.Win32.SafeHandles.SafeProcessHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeProcessHandle
  nameWithType: SafeProcessHandle
  fullName: Microsoft.Win32.SafeHandles.SafeProcessHandle
- uid: Microsoft.Win32.SafeHandles
  commentId: N:Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  nameWithType: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
- uid: System.IO.StreamReader
  commentId: T:System.IO.StreamReader
  parent: System.IO
  isExternal: false
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IO.StreamWriter
  commentId: T:System.IO.StreamWriter
  parent: System.IO
  isExternal: false
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.Diagnostics.ProcessStartInfo
  commentId: T:System.Diagnostics.ProcessStartInfo
  parent: System.Diagnostics
  isExternal: false
  name: ProcessStartInfo
  nameWithType: ProcessStartInfo
  fullName: System.Diagnostics.ProcessStartInfo
- uid: System.Diagnostics.ProcessThreadCollection
  commentId: T:System.Diagnostics.ProcessThreadCollection
  parent: System.Diagnostics
  isExternal: false
  name: ProcessThreadCollection
  nameWithType: ProcessThreadCollection
  fullName: System.Diagnostics.ProcessThreadCollection
- uid: System.Diagnostics.DataReceivedEventHandler
  commentId: T:System.Diagnostics.DataReceivedEventHandler
  parent: System.Diagnostics
  isExternal: false
  name: DataReceivedEventHandler
  nameWithType: DataReceivedEventHandler
  fullName: System.Diagnostics.DataReceivedEventHandler
- uid: System.EventHandler
  commentId: T:System.EventHandler
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Diagnostics.Process
  commentId: T:System.Diagnostics.Process
  parent: System.Diagnostics
  isExternal: false
  name: Process
  nameWithType: Process
  fullName: System.Diagnostics.Process
- uid: System.Diagnostics.Process[]
  name: Process[]
  nameWithType: Process[]
  fullName: System.Diagnostics.Process[]
  nameWithType.vb: Process()
  fullname.vb: System.Diagnostics.Process()
  name.vb: Process()
  spec.csharp:
  - uid: System.Diagnostics.Process
    name: Process
    nameWithType: Process
    fullName: System.Diagnostics.Process
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Diagnostics.Process
    name: Process
    nameWithType: Process
    fullName: System.Diagnostics.Process
  - name: ()
    nameWithType: ()
    fullName: ()
