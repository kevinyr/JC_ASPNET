items:
- uid: System.Diagnostics.Tracing.EventCommandEventArgs
  id: EventCommandEventArgs
  parent: System.Diagnostics.Tracing
  children:
  - System.Diagnostics.Tracing.EventCommandEventArgs.Arguments
  - System.Diagnostics.Tracing.EventCommandEventArgs.Command
  - System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent(System.Int32)
  - System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent(System.Int32)
  name: EventCommandEventArgs
  fullName: System.Diagnostics.Tracing.EventCommandEventArgs
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4676
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Provides the arguments for the <xref href="System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" data-throw-if-not-resolved="false"></xref> callback.
  syntax:
    content: 'public class EventCommandEventArgs : EventArgs'
    content.vb: Public Class EventCommandEventArgs Inherits EventArgs
  inheritance:
  - System.Object
- uid: System.Diagnostics.Tracing.EventCommandEventArgs.Arguments
  id: Arguments
  parent: System.Diagnostics.Tracing.EventCommandEventArgs
  name: Arguments
  fullName: System.Diagnostics.Tracing.EventCommandEventArgs.Arguments
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4686
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Gets the array of arguments for the callback.
  syntax:
    content: public Collections.Generic.IDictionary<string, string> Arguments { get; }
    content.vb: Public ReadOnly Property Arguments As Collections.Generic.IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: An array of callback arguments.
- uid: System.Diagnostics.Tracing.EventCommandEventArgs.Command
  id: Command
  parent: System.Diagnostics.Tracing.EventCommandEventArgs
  name: Command
  fullName: System.Diagnostics.Tracing.EventCommandEventArgs.Command
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4681
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Gets the command for the callback.
  syntax:
    content: public EventCommand Command { get; }
    content.vb: Public ReadOnly Property Command As EventCommand
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventCommand
      description: The callback command.
- uid: System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent(System.Int32)
  id: DisableEvent(System.Int32)
  parent: System.Diagnostics.Tracing.EventCommandEventArgs
  name: DisableEvent(Int32)
  fullName: System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4705
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Disables the event that have the specified identifier.
  syntax:
    content: public bool DisableEvent(int eventId)
    content.vb: Public Function DisableEvent(eventId As Integer) As Boolean
    parameters:
    - id: eventId
      type: System.Int32
      description: The identifier of the event to disable.
    return:
      type: System.Boolean
      description: true if *eventId* is in range; otherwise, false.
- uid: System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent(System.Int32)
  id: EnableEvent(System.Int32)
  parent: System.Diagnostics.Tracing.EventCommandEventArgs
  name: EnableEvent(Int32)
  fullName: System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4693
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Enables the event that has the specified identifier.
  syntax:
    content: public bool EnableEvent(int eventId)
    content.vb: Public Function EnableEvent(eventId As Integer) As Boolean
    parameters:
    - id: eventId
      type: System.Int32
      description: The identifier of the event to enable.
    return:
      type: System.Boolean
      description: true if *eventId* is in range; otherwise, false.
references:
- uid: System.Diagnostics.Tracing
  isExternal: false
  name: System.Diagnostics.Tracing
  fullName: System.Diagnostics.Tracing
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  definition: System.Collections.Generic.IDictionary`2
  name: Collections.Generic.IDictionary<String, String>
  name.vb: Collections.Generic.IDictionary(Of String, String)
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  isExternal: false
  name: Collections.Generic.IDictionary<, >
  name.vb: Collections.Generic.IDictionary(Of , )
  fullName: System.Collections.Generic.IDictionary<, >
  fullName.vb: System.Collections.Generic.IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Diagnostics.Tracing.EventCommand
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventCommand
  fullName: System.Diagnostics.Tracing.EventCommand
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
