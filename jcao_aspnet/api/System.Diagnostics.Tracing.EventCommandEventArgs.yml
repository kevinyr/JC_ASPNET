items:
- uid: System.Diagnostics.Tracing.EventCommandEventArgs
  commentId: T:System.Diagnostics.Tracing.EventCommandEventArgs
  id: EventCommandEventArgs
  parent: System.Diagnostics.Tracing
  children:
  - System.Diagnostics.Tracing.EventCommandEventArgs.Arguments
  - System.Diagnostics.Tracing.EventCommandEventArgs.Command
  - System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent(System.Int32)
  - System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent(System.Int32)
  langs:
  - csharp
  - vb
  name: EventCommandEventArgs
  nameWithType: EventCommandEventArgs
  fullName: System.Diagnostics.Tracing.EventCommandEventArgs
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventCommandEventArgs
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 48
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: 'public class EventCommandEventArgs : EventArgs'
    content.vb: >-
      Public Class EventCommandEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.Tracing.EventCommandEventArgs.Arguments
  commentId: P:System.Diagnostics.Tracing.EventCommandEventArgs.Arguments
  id: Arguments
  parent: System.Diagnostics.Tracing.EventCommandEventArgs
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: EventCommandEventArgs.Arguments
  fullName: System.Diagnostics.Tracing.EventCommandEventArgs.Arguments
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Arguments
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 51
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public Collections.Generic.IDictionary<string, string> Arguments { get; }
    content.vb: Public ReadOnly Property Arguments As Collections.Generic.IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventCommandEventArgs.Command
  commentId: P:System.Diagnostics.Tracing.EventCommandEventArgs.Command
  id: Command
  parent: System.Diagnostics.Tracing.EventCommandEventArgs
  langs:
  - csharp
  - vb
  name: Command
  nameWithType: EventCommandEventArgs.Command
  fullName: System.Diagnostics.Tracing.EventCommandEventArgs.Command
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Command
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 52
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public EventCommand Command { get; }
    content.vb: Public ReadOnly Property Command As EventCommand
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent(System.Int32)
  commentId: M:System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent(System.Int32)
  id: DisableEvent(System.Int32)
  parent: System.Diagnostics.Tracing.EventCommandEventArgs
  langs:
  - csharp
  - vb
  name: DisableEvent(Int32)
  nameWithType: EventCommandEventArgs.DisableEvent(Int32)
  fullName: System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DisableEvent
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 53
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public bool DisableEvent(int eventId)
    content.vb: Public Function DisableEvent(eventId As Integer) As Boolean
    parameters:
    - id: eventId
      type: System.Int32
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent(System.Int32)
  commentId: M:System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent(System.Int32)
  id: EnableEvent(System.Int32)
  parent: System.Diagnostics.Tracing.EventCommandEventArgs
  langs:
  - csharp
  - vb
  name: EnableEvent(Int32)
  nameWithType: EventCommandEventArgs.EnableEvent(Int32)
  fullName: System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnableEvent
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 54
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public bool EnableEvent(int eventId)
    content.vb: Public Function EnableEvent(eventId As Integer) As Boolean
    parameters:
    - id: eventId
      type: System.Int32
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Diagnostics.Tracing
  commentId: N:System.Diagnostics.Tracing
  isExternal: false
  name: System.Diagnostics.Tracing
  nameWithType: System.Diagnostics.Tracing
  fullName: System.Diagnostics.Tracing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: '!:System.Collections.Generic.IDictionary{System.String,System.String}'
  definition: System.Collections.Generic.IDictionary`2
  name: Collections.Generic.IDictionary<String, String>
  nameWithType: Collections.Generic.IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: Collections.Generic.IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: Collections.Generic.IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    nameWithType: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    nameWithType: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: false
  name: Generic.IDictionary<, >
  nameWithType: Generic.IDictionary<, >
  fullName: System.Collections.Generic.IDictionary<, >
  nameWithType.vb: Generic.IDictionary(Of , )
  fullname.vb: System.Collections.Generic.IDictionary(Of , )
  name.vb: Generic.IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Generic.IDictionary
    nameWithType: Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Generic.IDictionary
    nameWithType: Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.Tracing.EventCommand
  commentId: T:System.Diagnostics.Tracing.EventCommand
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventCommand
  nameWithType: EventCommand
  fullName: System.Diagnostics.Tracing.EventCommand
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
