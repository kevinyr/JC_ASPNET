items:
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs
  commentId: T:System.Diagnostics.Tracing.EventWrittenEventArgs
  id: EventWrittenEventArgs
  parent: System.Diagnostics.Tracing
  children:
  - System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Channel
  - System.Diagnostics.Tracing.EventWrittenEventArgs.EventId
  - System.Diagnostics.Tracing.EventWrittenEventArgs.EventName
  - System.Diagnostics.Tracing.EventWrittenEventArgs.EventSource
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Keywords
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Level
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Message
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Opcode
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Payload
  - System.Diagnostics.Tracing.EventWrittenEventArgs.PayloadNames
  - System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Tags
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Task
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Version
  langs:
  - csharp
  - vb
  name: EventWrittenEventArgs
  nameWithType: EventWrittenEventArgs
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventWrittenEventArgs
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 260
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: 'public class EventWrittenEventArgs : EventArgs'
    content.vb: >-
      Public Class EventWrittenEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId
  id: ActivityId
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: ActivityId
  nameWithType: EventWrittenEventArgs.ActivityId
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ActivityId
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 263
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public Guid ActivityId { get; }
    content.vb: Public ReadOnly Property ActivityId As Guid
    parameters: []
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Channel
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Channel
  id: Channel
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: EventWrittenEventArgs.Channel
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Channel
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Channel
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 264
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public EventChannel Channel { get; }
    content.vb: Public ReadOnly Property Channel As EventChannel
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventChannel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.EventId
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventId
  id: EventId
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: EventId
  nameWithType: EventWrittenEventArgs.EventId
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.EventId
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventId
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 265
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public int EventId { get; }
    content.vb: Public ReadOnly Property EventId As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.EventName
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventName
  id: EventName
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: EventName
  nameWithType: EventWrittenEventArgs.EventName
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.EventName
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventName
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 266
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public string EventName { get; }
    content.vb: Public ReadOnly Property EventName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.EventSource
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventSource
  id: EventSource
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: EventSource
  nameWithType: EventWrittenEventArgs.EventSource
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.EventSource
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventSource
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 267
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public EventSource EventSource { get; }
    content.vb: Public ReadOnly Property EventSource As EventSource
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventSource
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Keywords
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Keywords
  id: Keywords
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Keywords
  nameWithType: EventWrittenEventArgs.Keywords
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Keywords
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Keywords
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 268
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public EventKeywords Keywords { get; }
    content.vb: Public ReadOnly Property Keywords As EventKeywords
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventKeywords
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Level
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Level
  id: Level
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: EventWrittenEventArgs.Level
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Level
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Level
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 269
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public EventLevel Level { get; }
    content.vb: Public ReadOnly Property Level As EventLevel
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventLevel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Message
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Message
  id: Message
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: EventWrittenEventArgs.Message
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Message
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Message
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 270
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public string Message { get; }
    content.vb: Public ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Opcode
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Opcode
  id: Opcode
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Opcode
  nameWithType: EventWrittenEventArgs.Opcode
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Opcode
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Opcode
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 271
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public EventOpcode Opcode { get; }
    content.vb: Public ReadOnly Property Opcode As EventOpcode
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventOpcode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Payload
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Payload
  id: Payload
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: EventWrittenEventArgs.Payload
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Payload
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Payload
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 272
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public Collections.ObjectModel.ReadOnlyCollection<object> Payload { get; }
    content.vb: Public ReadOnly Property Payload As Collections.ObjectModel.ReadOnlyCollection(Of Object)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.PayloadNames
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.PayloadNames
  id: PayloadNames
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: PayloadNames
  nameWithType: EventWrittenEventArgs.PayloadNames
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.PayloadNames
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PayloadNames
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 273
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public Collections.ObjectModel.ReadOnlyCollection<string> PayloadNames { get; }
    content.vb: Public ReadOnly Property PayloadNames As Collections.ObjectModel.ReadOnlyCollection(Of String)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId
  id: RelatedActivityId
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: RelatedActivityId
  nameWithType: EventWrittenEventArgs.RelatedActivityId
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RelatedActivityId
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 274
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public Guid RelatedActivityId { get; }
    content.vb: Public ReadOnly Property RelatedActivityId As Guid
    parameters: []
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Tags
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Tags
  id: Tags
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: EventWrittenEventArgs.Tags
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Tags
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Tags
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 275
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public EventTags Tags { get; }
    content.vb: Public ReadOnly Property Tags As EventTags
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventTags
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Task
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Task
  id: Task
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Task
  nameWithType: EventWrittenEventArgs.Task
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Task
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Task
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 276
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public EventTask Task { get; }
    content.vb: Public ReadOnly Property Task As EventTask
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventTask
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Version
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Version
  id: Version
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: EventWrittenEventArgs.Version
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Version
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Version
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 277
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  syntax:
    content: public byte Version { get; }
    content.vb: Public ReadOnly Property Version As Byte
    parameters: []
    return:
      type: System.Byte
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Diagnostics.Tracing
  commentId: N:System.Diagnostics.Tracing
  isExternal: false
  name: System.Diagnostics.Tracing
  nameWithType: System.Diagnostics.Tracing
  fullName: System.Diagnostics.Tracing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.Tracing.EventChannel
  commentId: T:System.Diagnostics.Tracing.EventChannel
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventChannel
  nameWithType: EventChannel
  fullName: System.Diagnostics.Tracing.EventChannel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Tracing.EventSource
  commentId: T:System.Diagnostics.Tracing.EventSource
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventSource
  nameWithType: EventSource
  fullName: System.Diagnostics.Tracing.EventSource
- uid: System.Diagnostics.Tracing.EventKeywords
  commentId: T:System.Diagnostics.Tracing.EventKeywords
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventKeywords
  nameWithType: EventKeywords
  fullName: System.Diagnostics.Tracing.EventKeywords
- uid: System.Diagnostics.Tracing.EventLevel
  commentId: T:System.Diagnostics.Tracing.EventLevel
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventLevel
  nameWithType: EventLevel
  fullName: System.Diagnostics.Tracing.EventLevel
- uid: System.Diagnostics.Tracing.EventOpcode
  commentId: T:System.Diagnostics.Tracing.EventOpcode
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventOpcode
  nameWithType: EventOpcode
  fullName: System.Diagnostics.Tracing.EventOpcode
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{System.Object}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: Collections.ObjectModel.ReadOnlyCollection<Object>
  nameWithType: Collections.ObjectModel.ReadOnlyCollection<Object>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Object>
  nameWithType.vb: Collections.ObjectModel.ReadOnlyCollection(Of Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Object)
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: false
  name: Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType: Collections.ObjectModel.ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{System.String}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: Collections.ObjectModel.ReadOnlyCollection<String>
  nameWithType: Collections.ObjectModel.ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  nameWithType.vb: Collections.ObjectModel.ReadOnlyCollection(Of String)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.String)
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.Tracing.EventTags
  commentId: T:System.Diagnostics.Tracing.EventTags
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventTags
  nameWithType: EventTags
  fullName: System.Diagnostics.Tracing.EventTags
- uid: System.Diagnostics.Tracing.EventTask
  commentId: T:System.Diagnostics.Tracing.EventTask
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventTask
  nameWithType: EventTask
  fullName: System.Diagnostics.Tracing.EventTask
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
