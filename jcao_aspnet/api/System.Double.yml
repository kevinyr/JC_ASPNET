items:
- uid: System.Double
  id: Double
  parent: System
  children:
  - System.Double.CompareTo(System.Double)
  - System.Double.Epsilon
  - System.Double.Equals(System.Double)
  - System.Double.Equals(System.Object)
  - System.Double.GetHashCode
  - System.Double.IsInfinity(System.Double)
  - System.Double.IsNaN(System.Double)
  - System.Double.IsNegativeInfinity(System.Double)
  - System.Double.IsPositiveInfinity(System.Double)
  - System.Double.MaxValue
  - System.Double.MinValue
  - System.Double.NaN
  - System.Double.NegativeInfinity
  - System.Double.op_Equality(System.Double,System.Double)
  - System.Double.op_GreaterThan(System.Double,System.Double)
  - System.Double.op_GreaterThanOrEqual(System.Double,System.Double)
  - System.Double.op_Inequality(System.Double,System.Double)
  - System.Double.op_LessThan(System.Double,System.Double)
  - System.Double.op_LessThanOrEqual(System.Double,System.Double)
  - System.Double.Parse(System.String)
  - System.Double.Parse(System.String,System.Globalization.NumberStyles)
  - System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  - System.Double.Parse(System.String,System.IFormatProvider)
  - System.Double.PositiveInfinity
  - System.Double.System#IComparable#CompareTo(System.Object)
  - System.Double.System#IConvertible#GetTypeCode
  - System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.Double.System#IConvertible#ToByte(System.IFormatProvider)
  - System.Double.System#IConvertible#ToChar(System.IFormatProvider)
  - System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.Double.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.Double.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.Double.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.Double.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.Double.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.Double.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.Double.ToString
  - System.Double.ToString(System.IFormatProvider)
  - System.Double.ToString(System.String)
  - System.Double.ToString(System.String,System.IFormatProvider)
  - System.Double.TryParse(System.String,System.Double@)
  - System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)
  name: Double
  fullName: System.Double
  type: Struct
  source:
    remote: &o0
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Double.cs
    startLine: 22
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents a double-precision floating-point number.
  syntax:
    content: 'public struct Double : IComparable, IComparable<double>, IConvertible, IEquatable<double>, IFormattable'
    content.vb: Public Structure Double Implements IComparable, IComparable(Of Double), IConvertible, IEquatable(Of Double), IFormattable
  implements:
  - System.IComparable
  - System.IComparable{System.Double}
  - System.IConvertible
  - System.IEquatable{System.Double}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Double.CompareTo(System.Double)
  id: CompareTo(System.Double)
  parent: System.Double
  name: CompareTo(Double)
  fullName: System.Double.CompareTo(System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 122
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares this instance to a specified double-precision floating-point number and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified double-precision floating-point number.
  syntax:
    content: public int CompareTo(double value)
    content.vb: Public Function CompareTo(value As Double) As Integer
    parameters:
    - id: value
      type: System.Double
      description: A double-precision floating-point number to compare.
    return:
      type: System.Int32
      description: A signed number indicating the relative values of this instance and *value*.Return Value Description Less than zero This instance is less than *value*.-or- This instance is not a number (<xref href="System.Double.NaN" data-throw-if-not-resolved="false"></xref>) and *value* is a number. Zero This instance is equal to *value*.-or- Both this instance and *value* are not a number (<xref href="System.Double.NaN" data-throw-if-not-resolved="false"></xref>), <xref href="System.Double.PositiveInfinity" data-throw-if-not-resolved="false"></xref>, or <xref href="System.Double.NegativeInfinity" data-throw-if-not-resolved="false"></xref>. Greater than zero This instance is greater than *value*.-or- This instance is a number and *value* is not a number (<xref href="System.Double.NaN" data-throw-if-not-resolved="false"></xref>).
- uid: System.Double.Equals(System.Double)
  id: Equals(System.Double)
  parent: System.Double
  name: Equals(Double)
  fullName: System.Double.Equals(System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 178
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether this instance and a specified <xref href="System.Double" data-throw-if-not-resolved="false"></xref> object represent the same value.
  syntax:
    content: public bool Equals(double obj)
    content.vb: Public Function Equals(obj As Double) As Boolean
    parameters:
    - id: obj
      type: System.Double
      description: A <xref href="System.Double" data-throw-if-not-resolved="false"></xref> object to compare to this instance.
    return:
      type: System.Boolean
      description: true if *obj* is equal to this instance; otherwise, false.
- uid: System.Double.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Double
  name: Equals(Object)
  fullName: System.Double.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 136
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether this instance is equal to a specified object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Boolean
      description: true if *obj* is an instance of <xref href="System.Double" data-throw-if-not-resolved="false"></xref> and equals the value of this instance; otherwise, false.
  overridden: System.ValueType.Equals(System.Object)
- uid: System.Double.GetHashCode
  id: GetHashCode
  parent: System.Double
  name: GetHashCode()
  fullName: System.Double.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 189
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overridden: System.ValueType.GetHashCode
- uid: System.Double.IsInfinity(System.Double)
  id: IsInfinity(System.Double)
  parent: System.Double
  name: IsInfinity(Double)
  fullName: System.Double.IsInfinity(System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 45
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether the specified number evaluates to negative or positive infinity
  syntax:
    content: public static bool IsInfinity(double d)
    content.vb: Public Shared Function IsInfinity(d As Double) As Boolean
    parameters:
    - id: d
      type: System.Double
      description: A double-precision floating-point number.
    return:
      type: System.Boolean
      description: true if *d* evaluates to <xref href="System.Double.PositiveInfinity" data-throw-if-not-resolved="false"></xref> or <xref href="System.Double.NegativeInfinity" data-throw-if-not-resolved="false"></xref>; otherwise, false.
- uid: System.Double.IsNaN(System.Double)
  id: IsNaN(System.Double)
  parent: System.Double
  name: IsNaN(Double)
  fullName: System.Double.IsNaN(System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 86
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value that indicates whether the specified value is not a number (<xref href="System.Double.NaN" data-throw-if-not-resolved="false"></xref>).
  syntax:
    content: public static bool IsNaN(double d)
    content.vb: Public Shared Function IsNaN(d As Double) As Boolean
    parameters:
    - id: d
      type: System.Double
      description: A double-precision floating-point number.
    return:
      type: System.Boolean
      description: true if *d* evaluates to <xref href="System.Double.NaN" data-throw-if-not-resolved="false"></xref>; otherwise, false.
- uid: System.Double.IsNegativeInfinity(System.Double)
  id: IsNegativeInfinity(System.Double)
  parent: System.Double
  name: IsNegativeInfinity(Double)
  fullName: System.Double.IsNegativeInfinity(System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 66
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether the specified number evaluates to negative infinity.
  syntax:
    content: public static bool IsNegativeInfinity(double d)
    content.vb: Public Shared Function IsNegativeInfinity(d As Double) As Boolean
    parameters:
    - id: d
      type: System.Double
      description: A double-precision floating-point number.
    return:
      type: System.Boolean
      description: true if *d* evaluates to <xref href="System.Double.NegativeInfinity" data-throw-if-not-resolved="false"></xref>; otherwise, false.
- uid: System.Double.IsPositiveInfinity(System.Double)
  id: IsPositiveInfinity(System.Double)
  parent: System.Double
  name: IsPositiveInfinity(Double)
  fullName: System.Double.IsPositiveInfinity(System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 52
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether the specified number evaluates to positive infinity.
  syntax:
    content: public static bool IsPositiveInfinity(double d)
    content.vb: Public Shared Function IsPositiveInfinity(d As Double) As Boolean
    parameters:
    - id: d
      type: System.Double
      description: A double-precision floating-point number.
    return:
      type: System.Boolean
      description: true if *d* evaluates to <xref href="System.Double.PositiveInfinity" data-throw-if-not-resolved="false"></xref>; otherwise, false.
- uid: System.Double.op_Equality(System.Double,System.Double)
  id: op_Equality(System.Double,System.Double)
  parent: System.Double
  name: Equality(Double, Double)
  fullName: System.Double.Equality(System.Double, System.Double)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 148
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value that indicates whether two specified <xref href="System.Double" data-throw-if-not-resolved="false"></xref> values are equal.
  syntax:
    content: public static bool operator ==(double left, double right)
    content.vb: Public Shared Operator =(left As Double, right As Double) As Boolean
    parameters:
    - id: left
      type: System.Double
      description: The first value to compare.
    - id: right
      type: System.Double
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* and *right* are equal; otherwise, false.
- uid: System.Double.op_GreaterThan(System.Double,System.Double)
  id: op_GreaterThan(System.Double,System.Double)
  parent: System.Double
  name: GreaterThan(Double, Double)
  fullName: System.Double.GreaterThan(System.Double, System.Double)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 163
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value that indicates whether a specified <xref href="System.Double" data-throw-if-not-resolved="false"></xref> value is greater than another specified <xref href="System.Double" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public static bool operator>(double left, double right)
    content.vb: Public Shared Operator>(left As Double, right As Double) As Boolean
    parameters:
    - id: left
      type: System.Double
      description: The first value to compare.
    - id: right
      type: System.Double
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is greater than *right*; otherwise, false.
- uid: System.Double.op_GreaterThanOrEqual(System.Double,System.Double)
  id: op_GreaterThanOrEqual(System.Double,System.Double)
  parent: System.Double
  name: GreaterThanOrEqual(Double, Double)
  fullName: System.Double.GreaterThanOrEqual(System.Double, System.Double)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 173
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value that indicates whether a specified <xref href="System.Double" data-throw-if-not-resolved="false"></xref> value is greater than or equal to another specified <xref href="System.Double" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public static bool operator >=(double left, double right)
    content.vb: Public Shared Operator >=(left As Double, right As Double) As Boolean
    parameters:
    - id: left
      type: System.Double
      description: The first value to compare.
    - id: right
      type: System.Double
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is greater than or equal to *right*; otherwise, false.
- uid: System.Double.op_Inequality(System.Double,System.Double)
  id: op_Inequality(System.Double,System.Double)
  parent: System.Double
  name: Inequality(Double, Double)
  fullName: System.Double.Inequality(System.Double, System.Double)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 153
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value that indicates whether two specified <xref href="System.Double" data-throw-if-not-resolved="false"></xref> values are not equal.
  syntax:
    content: public static bool operator !=(double left, double right)
    content.vb: Public Shared Operator <>(left As Double, right As Double) As Boolean
    parameters:
    - id: left
      type: System.Double
      description: The first value to compare.
    - id: right
      type: System.Double
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* and *right* are not equal; otherwise, false.
- uid: System.Double.op_LessThan(System.Double,System.Double)
  id: op_LessThan(System.Double,System.Double)
  parent: System.Double
  name: LessThan(Double, Double)
  fullName: System.Double.LessThan(System.Double, System.Double)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 158
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value that indicates whether a specified <xref href="System.Double" data-throw-if-not-resolved="false"></xref> value is less than another specified <xref href="System.Double" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public static bool operator <(double left, double right)
    content.vb: Public Shared Operator <(left As Double, right As Double) As Boolean
    parameters:
    - id: left
      type: System.Double
      description: The first value to compare.
    - id: right
      type: System.Double
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is less than *right*; otherwise, false.
- uid: System.Double.op_LessThanOrEqual(System.Double,System.Double)
  id: op_LessThanOrEqual(System.Double,System.Double)
  parent: System.Double
  name: LessThanOrEqual(Double, Double)
  fullName: System.Double.LessThanOrEqual(System.Double, System.Double)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 168
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value that indicates whether a specified <xref href="System.Double" data-throw-if-not-resolved="false"></xref> value is less than or equal to another specified <xref href="System.Double" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public static bool operator <=(double left, double right)
    content.vb: Public Shared Operator <=(left As Double, right As Double) As Boolean
    parameters:
    - id: left
      type: System.Double
      description: The first value to compare.
    - id: right
      type: System.Double
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is less than or equal to *right*; otherwise, false.
- uid: System.Double.Parse(System.String)
  id: Parse(System.String)
  parent: System.Double
  name: Parse(String)
  fullName: System.Double.Parse(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 224
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of a number to its double-precision floating-point number equivalent.
  syntax:
    content: public static double Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As Double
    parameters:
    - id: s
      type: System.String
      description: A string that contains a number to convert.
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to the numeric value or symbol specified in *s*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*s* is null.'
  - type: System.FormatException
    description: '*s* does not represent a number in a valid format.'
  - type: System.OverflowException
    description: '*s* represents a number that is less than <xref href="System.Double.MinValue" data-throw-if-not-resolved="false"></xref> or greater than <xref href="System.Double.MaxValue" data-throw-if-not-resolved="false"></xref>.'
- uid: System.Double.Parse(System.String,System.Globalization.NumberStyles)
  id: Parse(System.String,System.Globalization.NumberStyles)
  parent: System.Double
  name: Parse(String, NumberStyles)
  fullName: System.Double.Parse(System.String, System.Globalization.NumberStyles)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 228
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of a number in a specified style to its double-precision floating-point number equivalent.
  syntax:
    content: public static double Parse(string s, NumberStyles style)
    content.vb: Public Shared Function Parse(s As String, style As NumberStyles) As Double
    parameters:
    - id: s
      type: System.String
      description: A string that contains a number to convert.
    - id: style
      type: System.Globalization.NumberStyles
      description: A bitwise combination of enumeration values that indicate the style elements that can be present in *s*. A typical value to specify is a combination of <xref href="System.Globalization.NumberStyles.Float" data-throw-if-not-resolved="false"></xref> combined with <xref href="System.Globalization.NumberStyles.AllowThousands" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to the numeric value or symbol specified in *s*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*s* is null.'
  - type: System.FormatException
    description: '*s* does not represent a number in a valid format.'
  - type: System.OverflowException
    description: '*s* represents a number that is less than <xref href="System.Double.MinValue" data-throw-if-not-resolved="false"></xref> or greater than <xref href="System.Double.MaxValue" data-throw-if-not-resolved="false"></xref>.'
  - type: System.ArgumentException
    description: '*style* is not a <xref href="System.Globalization.NumberStyles" data-throw-if-not-resolved="false"></xref> value. -or-*style* includes the <xref href="System.Globalization.NumberStyles.AllowHexSpecifier" data-throw-if-not-resolved="false"></xref> value.'
- uid: System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  parent: System.Double
  name: Parse(String, NumberStyles, IFormatProvider)
  fullName: System.Double.Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 237
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent.
  syntax:
    content: public static double Parse(string s, NumberStyles style, IFormatProvider provider)
    content.vb: Public Shared Function Parse(s As String, style As NumberStyles, provider As IFormatProvider) As Double
    parameters:
    - id: s
      type: System.String
      description: A string that contains a number to convert.
    - id: style
      type: System.Globalization.NumberStyles
      description: A bitwise combination of enumeration values that indicate the style elements that can be present in *s*. A typical value to specify is <xref href="System.Globalization.NumberStyles.Float" data-throw-if-not-resolved="false"></xref> combined with <xref href="System.Globalization.NumberStyles.AllowThousands" data-throw-if-not-resolved="false"></xref>.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about *s*.
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to the numeric value or symbol specified in *s*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*s* is null.'
  - type: System.FormatException
    description: '*s* does not represent a numeric value.'
  - type: System.ArgumentException
    description: '*style* is not a <xref href="System.Globalization.NumberStyles" data-throw-if-not-resolved="false"></xref> value. -or-*style* is the <xref href="System.Globalization.NumberStyles.AllowHexSpecifier" data-throw-if-not-resolved="false"></xref> value.'
  - type: System.OverflowException
    description: '*s* represents a number that is less than <xref href="System.Double.MinValue" data-throw-if-not-resolved="false"></xref> or greater than <xref href="System.Double.MaxValue" data-throw-if-not-resolved="false"></xref>.'
- uid: System.Double.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.Double
  name: Parse(String, IFormatProvider)
  fullName: System.Double.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 233
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of a number in a specified culture-specific format to its double-precision floating-point number equivalent.
  syntax:
    content: public static double Parse(string s, IFormatProvider provider)
    content.vb: Public Shared Function Parse(s As String, provider As IFormatProvider) As Double
    parameters:
    - id: s
      type: System.String
      description: A string that contains a number to convert.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about *s*.
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to the numeric value or symbol specified in *s*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*s* is null.'
  - type: System.FormatException
    description: '*s* does not represent a number in a valid format.'
  - type: System.OverflowException
    description: '*s* represents a number that is less than <xref href="System.Double.MinValue" data-throw-if-not-resolved="false"></xref> or greater than <xref href="System.Double.MaxValue" data-throw-if-not-resolved="false"></xref>.'
- uid: System.Double.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  parent: System.Double
  name: IComparable.CompareTo(Object)
  name.vb: System.IComparable.CompareTo(Object)
  fullName: System.Double.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote: &o1
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 760
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object value)
    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
- uid: System.Double.System#IConvertible#GetTypeCode
  id: System#IConvertible#GetTypeCode
  parent: System.Double
  name: IConvertible.GetTypeCode()
  name.vb: System.IConvertible.GetTypeCode()
  fullName: System.Double.System.IConvertible.GetTypeCode()
  type: Method
  source:
    remote: *o1
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 761
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: TypeCode IConvertible.GetTypeCode()
    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode
    return:
      type: System.TypeCode
- uid: System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToBoolean(IFormatProvider)
  name.vb: System.IConvertible.ToBoolean(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToBoolean(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 292
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToBoolean(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: bool IConvertible.ToBoolean(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.Boolean
      description: true if the value of the current instance is not zero; otherwise, false.
- uid: System.Double.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToByte(IFormatProvider)
  name.vb: System.IConvertible.ToByte(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToByte(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 307
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToByte(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: byte IConvertible.ToByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.Byte
      description: The value of the current instance, converted to a <xref href="System.Byte" data-throw-if-not-resolved="false"></xref>.
- uid: System.Double.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToChar(IFormatProvider)
  name.vb: System.IConvertible.ToChar(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToChar(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 297
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: char IConvertible.ToChar(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.Char
      description: This conversion is not supported. No value is returned.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToDateTime(IFormatProvider)
  name.vb: System.IConvertible.ToDateTime(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToDateTime(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 357
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException" data-throw-if-not-resolved="false"></xref>
  syntax:
    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.DateTime
      description: This conversion is not supported. No value is returned.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToDecimal(IFormatProvider)
  name.vb: System.IConvertible.ToDecimal(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToDecimal(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 352
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToDecimal(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: decimal IConvertible.ToDecimal(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.Decimal
      description: The value of the current instance, converted to a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref>.
- uid: System.Double.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToDouble(IFormatProvider)
  name.vb: System.IConvertible.ToDouble(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToDouble(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 347
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToDouble(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: double IConvertible.ToDouble(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.Double
      description: The value of the current instance, unchanged.
- uid: System.Double.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToInt16(IFormatProvider)
  name.vb: System.IConvertible.ToInt16(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToInt16(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 312
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToInt16(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: short IConvertible.ToInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.Int16
      description: The value of the current instance, converted to an <xref href="System.Int16" data-throw-if-not-resolved="false"></xref>.
- uid: System.Double.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToInt32(IFormatProvider)
  name.vb: System.IConvertible.ToInt32(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToInt32(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 322
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToInt32(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: int IConvertible.ToInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.Int32
      description: The value of the current instance, converted to an <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
- uid: System.Double.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToInt64(IFormatProvider)
  name.vb: System.IConvertible.ToInt64(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToInt64(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 332
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToInt64(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: long IConvertible.ToInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.Int64
      description: The value of the current instance, converted to an <xref href="System.Int64" data-throw-if-not-resolved="false"></xref>.
- uid: System.Double.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToSByte(IFormatProvider)
  name.vb: System.IConvertible.ToSByte(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToSByte(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 302
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToSByte(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: sbyte IConvertible.ToSByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.SByte
      description: The value of the current instance, converted to an <xref href="System.SByte" data-throw-if-not-resolved="false"></xref>.
- uid: System.Double.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToSingle(IFormatProvider)
  name.vb: System.IConvertible.ToSingle(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToSingle(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 342
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToSingle(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: float IConvertible.ToSingle(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.Single
      description: The value of the current instance, converted to a <xref href="System.Single" data-throw-if-not-resolved="false"></xref>.
- uid: System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToType(Type, IFormatProvider)
  name.vb: System.IConvertible.ToType(Type, IFormatProvider)
  fullName: System.Double.System.IConvertible.ToType(System.Type, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 362
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToType(System.Type,System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: object IConvertible.ToType(Type type, IFormatProvider provider)
    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType
    parameters:
    - id: type
      type: System.Type
      description: The type to which to convert this <xref href="System.Double" data-throw-if-not-resolved="false"></xref> value.
    - id: provider
      type: System.IFormatProvider
      description: An <xref href="System.IFormatProvider" data-throw-if-not-resolved="false"></xref> implementation that supplies culture-specific information about the format of the returned value.
    return:
      type: System.Object
      description: The value of the current instance, converted to *type*.
- uid: System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToUInt16(IFormatProvider)
  name.vb: System.IConvertible.ToUInt16(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToUInt16(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 317
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToUInt16(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: ushort IConvertible.ToUInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.UInt16
      description: The value of the current instance, converted to a <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref>.
- uid: System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToUInt32(IFormatProvider)
  name.vb: System.IConvertible.ToUInt32(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToUInt32(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 327
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToUInt32(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: uint IConvertible.ToUInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.UInt32
      description: The value of the current instance, converted to a <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref>.
- uid: System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  parent: System.Double
  name: IConvertible.ToUInt64(IFormatProvider)
  name.vb: System.IConvertible.ToUInt64(IFormatProvider)
  fullName: System.Double.System.IConvertible.ToUInt64(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 337
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see <xref href="System.IConvertible.ToUInt64(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: ulong IConvertible.ToUInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.UInt64
      description: The value of the current instance, converted to a <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref>.
- uid: System.Double.ToString
  id: ToString
  parent: System.Double
  name: ToString()
  fullName: System.Double.ToString()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 200
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the numeric value of this instance to its equivalent string representation.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The string representation of the value of this instance.
  overridden: System.ValueType.ToString
- uid: System.Double.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Double
  name: ToString(IFormatProvider)
  fullName: System.Double.ToString(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 212
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.
  syntax:
    content: public string ToString(IFormatProvider provider)
    content.vb: Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: The string representation of the value of this instance as specified by *provider*.
- uid: System.Double.ToString(System.String)
  id: ToString(System.String)
  parent: System.Double
  name: ToString(String)
  fullName: System.Double.ToString(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 206
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the numeric value of this instance to its equivalent string representation, using the specified format.
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: A numeric format string.
    return:
      type: System.String
      description: The string representation of the value of this instance as specified by *format*.
  exceptions:
  - type: System.FormatException
    description: '*format* is invalid.'
- uid: System.Double.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Double
  name: ToString(String, IFormatProvider)
  fullName: System.Double.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 218
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.
  syntax:
    content: public string ToString(string format, IFormatProvider provider)
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: A numeric format string.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: The string representation of the value of this instance as specified by *format* and *provider*.
- uid: System.Double.TryParse(System.String,System.Double@)
  id: TryParse(System.String,System.Double@)
  parent: System.Double
  name: TryParse(String, out Double)
  name.vb: TryParse(String, ByRef Double)
  fullName: System.Double.TryParse(System.String, out System.Double)
  fullName.vb: System.Double.TryParse(System.String, ByRef System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 254
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of a number to its double-precision floating-point number equivalent. A return value indicates whether the conversion succeeded or failed.
  syntax:
    content: public static bool TryParse(string s, out double result)
    content.vb: Public Shared Function TryParse(s As String, ByRef result As Double) As Boolean
    parameters:
    - id: s
      type: System.String
      description: A string containing a number to convert.
    - id: result
      type: System.Double
      description: When this method returns, contains the double-precision floating-point number equivalent of the *s* parameter, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the *s* parameter is null  or <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>, is not a number in a valid format, or represents a number less than <xref href="System.Double.MinValue" data-throw-if-not-resolved="false"></xref> or greater than <xref href="System.Double.MaxValue" data-throw-if-not-resolved="false"></xref>. This parameter is passed uninitialized; any value originally supplied in *result* will be overwritten.
    return:
      type: System.Boolean
      description: true if *s* was converted successfully; otherwise, false.
- uid: System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)
  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)
  parent: System.Double
  name: TryParse(String, NumberStyles, IFormatProvider, out Double)
  name.vb: TryParse(String, NumberStyles, IFormatProvider, ByRef Double)
  fullName: System.Double.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Double)
  fullName.vb: System.Double.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, ByRef System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 258
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent. A return value indicates whether the conversion succeeded or failed.
  syntax:
    content: public static bool TryParse(string s, NumberStyles style, IFormatProvider provider, out double result)
    content.vb: Public Shared Function TryParse(s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Double) As Boolean
    parameters:
    - id: s
      type: System.String
      description: A string containing a number to convert.
    - id: style
      type: System.Globalization.NumberStyles
      description: A bitwise combination of <xref href="System.Globalization.NumberStyles" data-throw-if-not-resolved="false"></xref> values that indicates the permitted format of *s*. A typical value to specify is <xref href="System.Globalization.NumberStyles.Float" data-throw-if-not-resolved="false"></xref> combined with <xref href="System.Globalization.NumberStyles.AllowThousands" data-throw-if-not-resolved="false"></xref>.
    - id: provider
      type: System.IFormatProvider
      description: An <xref href="System.IFormatProvider" data-throw-if-not-resolved="false"></xref> that supplies culture-specific formatting information about *s*.
    - id: result
      type: System.Double
      description: When this method returns, contains a double-precision floating-point number equivalent of the numeric value or symbol contained in *s*, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the *s* parameter is null or <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>, is not in a format compliant with *style*, represents a number less than <xref href="System.SByte.MinValue" data-throw-if-not-resolved="false"></xref> or greater than <xref href="System.SByte.MaxValue" data-throw-if-not-resolved="false"></xref>, or if *style* is not a valid combination of <xref href="System.Globalization.NumberStyles" data-throw-if-not-resolved="false"></xref> enumerated constants. This parameter is passed uninitialized; any value originally supplied in *result* will be overwritten.
    return:
      type: System.Boolean
      description: true if *s* was converted successfully; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    description: '*style* is not a <xref href="System.Globalization.NumberStyles" data-throw-if-not-resolved="false"></xref> value. -or-*style* includes the <xref href="System.Globalization.NumberStyles.AllowHexSpecifier" data-throw-if-not-resolved="false"></xref> value.'
- uid: System.Double.MinValue
  id: MinValue
  parent: System.Double
  name: MinValue
  fullName: System.Double.MinValue
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 33
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents the smallest possible value of a <xref href="System.Double" data-throw-if-not-resolved="false"></xref>. This field is constant.
  syntax:
    content: public const double MinValue
    content.vb: Public Const MinValue As Double = -1.7976931348623157E+308
- uid: System.Double.MaxValue
  id: MaxValue
  parent: System.Double
  name: MaxValue
  fullName: System.Double.MaxValue
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 34
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents the largest possible value of a <xref href="System.Double" data-throw-if-not-resolved="false"></xref>. This field is constant.
  syntax:
    content: public const double MaxValue
    content.vb: Public Const MaxValue As Double = 1.7976931348623157E+308
- uid: System.Double.Epsilon
  id: Epsilon
  parent: System.Double
  name: Epsilon
  fullName: System.Double.Epsilon
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 38
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents the smallest positive <xref href="System.Double" data-throw-if-not-resolved="false"></xref> value that is greater than zero. This field is constant.
  syntax:
    content: public const double Epsilon
    content.vb: Public Const Epsilon As Double = 4.94065645841247E-324
- uid: System.Double.NegativeInfinity
  id: NegativeInfinity
  parent: System.Double
  name: NegativeInfinity
  fullName: System.Double.NegativeInfinity
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 39
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents negative infinity. This field is constant.
  syntax:
    content: public const double NegativeInfinity
    content.vb: Public Const NegativeInfinity As Double = -Infinity
- uid: System.Double.PositiveInfinity
  id: PositiveInfinity
  parent: System.Double
  name: PositiveInfinity
  fullName: System.Double.PositiveInfinity
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 40
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents positive infinity. This field is constant.
  syntax:
    content: public const double PositiveInfinity
    content.vb: Public Const PositiveInfinity As Double = Infinity
- uid: System.Double.NaN
  id: NaN
  parent: System.Double
  name: NaN
  fullName: System.Double.NaN
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Double.cs
    startLine: 41
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents a value that is not a number (NaN). This field is constant.
  syntax:
    content: public const double NaN
    content.vb: Public Const NaN As Double = NaN
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System.IComparable{System.Double}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Double>
  name.vb: IComparable(Of Double)
  fullName: System.IComparable<System.Double>
  fullName.vb: System.IComparable(Of System.Double)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
  - name: )
    fullName: )
- uid: System.IConvertible
  parent: System
  isExternal: false
  name: IConvertible
  fullName: System.IConvertible
- uid: System.IEquatable{System.Double}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Double>
  name.vb: IEquatable(Of Double)
  fullName: System.IEquatable<System.Double>
  fullName.vb: System.IEquatable(Of System.Double)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
  - name: )
    fullName: )
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.IComparable`1
  parent: System
  isExternal: false
  name: IComparable<>
  name.vb: IComparable(Of )
  fullName: System.IComparable<>
  fullName.vb: System.IComparable(Of )
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<>
  name.vb: IEquatable(Of )
  fullName: System.IEquatable<>
  fullName.vb: System.IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Globalization.NumberStyles
  parent: System.Globalization
  isExternal: false
  name: NumberStyles
  fullName: System.Globalization.NumberStyles
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.TypeCode
  parent: System
  isExternal: false
  name: TypeCode
  fullName: System.TypeCode
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  fullName: System.SByte
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  fullName: System.UInt16
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  fullName: System.UInt64
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
- uid: System.OverflowException
  isExternal: false
  name: OverflowException
  fullName: System.OverflowException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
