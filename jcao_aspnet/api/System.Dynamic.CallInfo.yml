items:
- uid: System.Dynamic.CallInfo
  commentId: T:System.Dynamic.CallInfo
  id: CallInfo
  parent: System.Dynamic
  children:
  - System.Dynamic.CallInfo.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})
  - System.Dynamic.CallInfo.#ctor(System.Int32,System.String[])
  - System.Dynamic.CallInfo.ArgumentCount
  - System.Dynamic.CallInfo.ArgumentNames
  - System.Dynamic.CallInfo.Equals(System.Object)
  - System.Dynamic.CallInfo.GetHashCode
  langs:
  - csharp
  - vb
  name: CallInfo
  nameWithType: CallInfo
  fullName: System.Dynamic.CallInfo
  type: Class
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CallInfo
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 30
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  syntax:
    content: 'public sealed class CallInfo : object'
    content.vb: >-
      Public NotInheritable Class CallInfo
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Dynamic.CallInfo.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Dynamic.CallInfo.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})'
  parent: System.Dynamic.CallInfo
  langs:
  - csharp
  - vb
  name: CallInfo(Int32, Collections.Generic.IEnumerable<String>)
  nameWithType: CallInfo.CallInfo(Int32, Collections.Generic.IEnumerable<String>)
  fullName: System.Dynamic.CallInfo.CallInfo(System.Int32, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 32
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  syntax:
    content: public CallInfo(int argCount, Collections.Generic.IEnumerable<string> argNames)
    content.vb: Public Sub New(argCount As Integer, argNames As Collections.Generic.IEnumerable(Of String))
    parameters:
    - id: argCount
      type: System.Int32
    - id: argNames
      type: System.Collections.Generic.IEnumerable{System.String}
  nameWithType.vb: CallInfo.CallInfo(Int32, Collections.Generic.IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Dynamic.CallInfo.CallInfo(System.Int32, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: CallInfo(Int32, Collections.Generic.IEnumerable(Of String))
- uid: System.Dynamic.CallInfo.#ctor(System.Int32,System.String[])
  commentId: M:System.Dynamic.CallInfo.#ctor(System.Int32,System.String[])
  id: '#ctor(System.Int32,System.String[])'
  parent: System.Dynamic.CallInfo
  langs:
  - csharp
  - vb
  name: CallInfo(Int32, String[])
  nameWithType: CallInfo.CallInfo(Int32, String[])
  fullName: System.Dynamic.CallInfo.CallInfo(System.Int32, System.String[])
  type: Constructor
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 33
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  syntax:
    content: public CallInfo(int argCount, params string[] argNames)
    content.vb: Public Sub New(argCount As Integer, ParamArray argNames As String())
    parameters:
    - id: argCount
      type: System.Int32
    - id: argNames
      type: System.String[]
  nameWithType.vb: CallInfo.CallInfo(Int32, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Dynamic.CallInfo.CallInfo(System.Int32, System.String())
  name.vb: CallInfo(Int32, String())
- uid: System.Dynamic.CallInfo.ArgumentCount
  commentId: P:System.Dynamic.CallInfo.ArgumentCount
  id: ArgumentCount
  parent: System.Dynamic.CallInfo
  langs:
  - csharp
  - vb
  name: ArgumentCount
  nameWithType: CallInfo.ArgumentCount
  fullName: System.Dynamic.CallInfo.ArgumentCount
  type: Property
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ArgumentCount
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 34
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  syntax:
    content: public int ArgumentCount { get; }
    content.vb: Public ReadOnly Property ArgumentCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Dynamic.CallInfo.ArgumentNames
  commentId: P:System.Dynamic.CallInfo.ArgumentNames
  id: ArgumentNames
  parent: System.Dynamic.CallInfo
  langs:
  - csharp
  - vb
  name: ArgumentNames
  nameWithType: CallInfo.ArgumentNames
  fullName: System.Dynamic.CallInfo.ArgumentNames
  type: Property
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ArgumentNames
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 35
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  syntax:
    content: public Collections.ObjectModel.ReadOnlyCollection<string> ArgumentNames { get; }
    content.vb: Public ReadOnly Property ArgumentNames As Collections.ObjectModel.ReadOnlyCollection(Of String)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Dynamic.CallInfo.Equals(System.Object)
  commentId: M:System.Dynamic.CallInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Dynamic.CallInfo
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: CallInfo.Equals(Object)
  fullName: System.Dynamic.CallInfo.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 36
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Dynamic.CallInfo.GetHashCode
  commentId: M:System.Dynamic.CallInfo.GetHashCode
  id: GetHashCode
  parent: System.Dynamic.CallInfo
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CallInfo.GetHashCode()
  fullName: System.Dynamic.CallInfo.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 37
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: false
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<String>
  nameWithType: Collections.Generic.IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: Collections.Generic.IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: Collections.Generic.IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  nameWithType: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: Collections.Generic.IEnumerable(Of )
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{System.String}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: Collections.ObjectModel.ReadOnlyCollection<String>
  nameWithType: Collections.ObjectModel.ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  nameWithType.vb: Collections.ObjectModel.ReadOnlyCollection(Of String)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.String)
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: false
  name: Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType: Collections.ObjectModel.ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
