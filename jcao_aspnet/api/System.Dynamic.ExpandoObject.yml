items:
- uid: System.Dynamic.ExpandoObject
  commentId: T:System.Dynamic.ExpandoObject
  id: ExpandoObject
  parent: System.Dynamic
  children:
  - System.Dynamic.ExpandoObject.#ctor
  - System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: ExpandoObject
  nameWithType: ExpandoObject
  fullName: System.Dynamic.ExpandoObject
  type: Class
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExpandoObject
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 131
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  syntax:
    content: 'public sealed class ExpandoObject : Collections.Generic.ICollection<Collections.Generic.KeyValuePair<string, object>>, Collections.Generic.IDictionary<string, object>, Collections.Generic.IEnumerable<Collections.Generic.KeyValuePair<string, object>>, Collections.IEnumerable, ComponentModel.INotifyPropertyChanged, IDynamicMetaObjectProvider'
    content.vb: >-
      Public NotInheritable Class ExpandoObject
          Inherits Collections.Generic.ICollection(Of Collections.Generic.KeyValuePair(Of String, Object))
          Implements Collections.Generic.IDictionary(Of String, Object), Collections.Generic.IEnumerable(Of Collections.Generic.KeyValuePair(Of String, Object)), Collections.IEnumerable, ComponentModel.INotifyPropertyChanged, IDynamicMetaObjectProvider
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IDictionary{System.String,System.Object}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  - System.Collections.IEnumerable
  - System.ComponentModel.INotifyPropertyChanged
  - System.Dynamic.IDynamicMetaObjectProvider
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Dynamic.ExpandoObject.#ctor
  commentId: M:System.Dynamic.ExpandoObject.#ctor
  id: '#ctor'
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: ExpandoObject()
  nameWithType: ExpandoObject.ExpandoObject()
  fullName: System.Dynamic.ExpandoObject.ExpandoObject()
  type: Constructor
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 133
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  syntax:
    content: public ExpandoObject()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  id: System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: IDynamicMetaObjectProvider.GetMetaObject(Expression)
  nameWithType: ExpandoObject.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  fullName: System.Dynamic.ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 151
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  syntax:
    content: DynamicMetaObject IDynamicMetaObjectProvider.GetMetaObject(Expression parameter)
    content.vb: Function System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(parameter As Expression) As DynamicMetaObject Implements IDynamicMetaObjectProvider.GetMetaObject
    parameters:
    - id: parameter
      type: System.Linq.Expressions.Expression
    return:
      type: System.Dynamic.DynamicMetaObject
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  nameWithType.vb: ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  name.vb: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
references:
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: false
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: '!:System.Collections.Generic.IDictionary{System.String,System.Object}'
  definition: System.Collections.Generic.IDictionary`2
  name: Collections.Generic.IDictionary<String, Object>
  nameWithType: Collections.Generic.IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: Collections.Generic.IDictionary(Of String, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: Collections.Generic.IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    nameWithType: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    nameWithType: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  commentId: '!:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}'
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<Collections.Generic.KeyValuePair<String, Object>>
  nameWithType: Collections.Generic.IEnumerable<Collections.Generic.KeyValuePair<String, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>
  nameWithType.vb: Collections.Generic.IEnumerable(Of Collections.Generic.KeyValuePair(Of String, Object))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Collections.Generic.IEnumerable(Of Collections.Generic.KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: Collections.Generic.KeyValuePair
    nameWithType: Collections.Generic.KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: Collections.Generic.KeyValuePair
    nameWithType: Collections.Generic.KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  nameWithType: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: false
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Dynamic.IDynamicMetaObjectProvider
  commentId: T:System.Dynamic.IDynamicMetaObjectProvider
  parent: System.Dynamic
  isExternal: false
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: false
  name: Generic.IDictionary<, >
  nameWithType: Generic.IDictionary<, >
  fullName: System.Collections.Generic.IDictionary<, >
  nameWithType.vb: Generic.IDictionary(Of , )
  fullname.vb: System.Collections.Generic.IDictionary(Of , )
  name.vb: Generic.IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Generic.IDictionary
    nameWithType: Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Generic.IDictionary
    nameWithType: Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  nameWithType: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: Collections.Generic.IEnumerable(Of )
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  parent: System.Dynamic.IDynamicMetaObjectProvider
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: IDynamicMetaObjectProvider.GetMetaObject(Expression)
  fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: IDynamicMetaObjectProvider.GetMetaObject
    fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: IDynamicMetaObjectProvider.GetMetaObject
    fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expressions.Expression
  nameWithType: Expressions.Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Dynamic.DynamicMetaObject
  commentId: T:System.Dynamic.DynamicMetaObject
  parent: System.Dynamic
  isExternal: false
  name: DynamicMetaObject
  nameWithType: DynamicMetaObject
  fullName: System.Dynamic.DynamicMetaObject
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
