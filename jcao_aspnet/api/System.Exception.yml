items:
- uid: System.Exception
  commentId: T:System.Exception
  id: Exception
  parent: System
  children:
  - System.Exception.#ctor
  - System.Exception.#ctor(System.String)
  - System.Exception.#ctor(System.String,System.Exception)
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.ToString
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
  type: Class
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exception
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 836
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public class Exception
    content.vb: Public Class Exception
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Exception.#ctor
  commentId: M:System.Exception.#ctor
  id: '#ctor'
  parent: System.Exception
  langs:
  - csharp
  - vb
  name: Exception()
  nameWithType: Exception.Exception()
  fullName: System.Exception.Exception()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 838
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Exception()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Exception.#ctor(System.String)
  commentId: M:System.Exception.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Exception
  langs:
  - csharp
  - vb
  name: Exception(String)
  nameWithType: Exception.Exception(String)
  fullName: System.Exception.Exception(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 839
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Exception(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Exception.#ctor(System.String,System.Exception)
  commentId: M:System.Exception.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Exception
  langs:
  - csharp
  - vb
  name: Exception(String, Exception)
  nameWithType: Exception.Exception(String, Exception)
  fullName: System.Exception.Exception(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 840
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Exception(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
    - id: innerException
      type: System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  id: Data
  parent: System.Exception
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Data
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 841
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public virtual IDictionary Data { get; }
    content.vb: Public Overridable ReadOnly Property Data As IDictionary
    parameters: []
    return:
      type: System.Collections.IDictionary
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  id: HelpLink
  parent: System.Exception
  langs:
  - csharp
  - vb
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HelpLink
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 842
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public virtual string HelpLink { get; set; }
    content.vb: Public Overridable Property HelpLink As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  id: HResult
  parent: System.Exception
  langs:
  - csharp
  - vb
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HResult
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 843
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public int HResult { get; protected set; }
    content.vb: Public Property HResult As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  id: InnerException
  parent: System.Exception
  langs:
  - csharp
  - vb
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InnerException
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 844
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Exception InnerException { get; }
    content.vb: Public ReadOnly Property InnerException As Exception
    parameters: []
    return:
      type: System.Exception
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  id: Message
  parent: System.Exception
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Message
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 845
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public virtual string Message { get; }
    content.vb: Public Overridable ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  id: Source
  parent: System.Exception
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Source
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 846
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public virtual string Source { get; set; }
    content.vb: Public Overridable Property Source As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  id: StackTrace
  parent: System.Exception
  langs:
  - csharp
  - vb
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StackTrace
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 847
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public virtual string StackTrace { get; }
    content.vb: Public Overridable ReadOnly Property StackTrace As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  id: GetBaseException
  parent: System.Exception
  langs:
  - csharp
  - vb
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBaseException
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 848
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public virtual Exception GetBaseException()
    content.vb: Public Overridable Function GetBaseException As Exception
    return:
      type: System.Exception
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  id: ToString
  parent: System.Exception
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 849
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: Collections.IDictionary
  nameWithType: Collections.IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
