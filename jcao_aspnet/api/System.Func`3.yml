items:
- uid: System.Func`3
  commentId: T:System.Func`3
  id: Func`3
  parent: System
  children: []
  langs:
  - csharp
  - vb
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  type: Delegate
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Func
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 890
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public delegate TResult Func<in T1, in T2, out TResult>(T1 arg1, T2 arg2);
    content.vb: Public Delegate Function Func(Of In T1, In T2, Out TResult)(arg1 As T1, arg2 As T2) As TResult
    parameters:
    - id: arg1
      type: '{T1}'
    - id: arg2
      type: '{T2}'
    typeParameters:
    - id: T1
    - id: T2
    - id: TResult
    return:
      type: '{TResult}'
  nameWithType.vb: Func(Of T1, T2, TResult)
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
references:
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: T1
  isExternal: false
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  isExternal: false
  name: T2
  nameWithType: T2
  fullName: T2
- uid: TResult
  isExternal: false
  name: TResult
  nameWithType: TResult
  fullName: TResult
