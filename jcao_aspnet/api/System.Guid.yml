items:
- uid: System.Guid
  commentId: T:System.Guid
  id: Guid
  parent: System
  children:
  - System.Guid.#ctor(System.Byte[])
  - System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)
  - System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])
  - System.Guid.#ctor(System.String)
  - System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)
  - System.Guid.CompareTo(System.Guid)
  - System.Guid.Empty
  - System.Guid.Equals(System.Guid)
  - System.Guid.Equals(System.Object)
  - System.Guid.GetHashCode
  - System.Guid.NewGuid
  - System.Guid.op_Equality(System.Guid,System.Guid)
  - System.Guid.op_Inequality(System.Guid,System.Guid)
  - System.Guid.Parse(System.String)
  - System.Guid.ParseExact(System.String,System.String)
  - System.Guid.System#IComparable#CompareTo(System.Object)
  - System.Guid.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Guid.ToByteArray
  - System.Guid.ToString
  - System.Guid.ToString(System.String)
  - System.Guid.TryParse(System.String,System.Guid@)
  - System.Guid.TryParseExact(System.String,System.String,System.Guid@)
  langs:
  - csharp
  - vb
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
  type: Struct
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Guid
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 922
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct Guid : IComparable, IComparable<Guid>, IEquatable<Guid>, IFormattable
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure Guid
          Implements IComparable, IComparable(Of Guid), IEquatable(Of Guid), IFormattable
  implements:
  - System.IComparable
  - System.IComparable{System.Guid}
  - System.IEquatable{System.Guid}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Guid.Empty
  commentId: F:System.Guid.Empty
  id: Empty
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Guid.Empty
  fullName: System.Guid.Empty
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Empty
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 925
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static readonly Guid Empty
    content.vb: Public Shared ReadOnly Empty As Guid
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Guid.#ctor(System.Byte[])
  commentId: M:System.Guid.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: Guid(Byte[])
  nameWithType: Guid.Guid(Byte[])
  fullName: System.Guid.Guid(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 926
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Guid(byte[] b)
    content.vb: Public Sub New(b As Byte())
    parameters:
    - id: b
      type: System.Byte[]
  nameWithType.vb: Guid.Guid(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Guid.Guid(System.Byte())
  name.vb: Guid(Byte())
- uid: System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)
  id: '#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)'
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: Guid(Int32, Int16, Int16, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte)
  nameWithType: Guid.Guid(Int32, Int16, Int16, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte)
  fullName: System.Guid.Guid(System.Int32, System.Int16, System.Int16, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 927
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Guid(int a, short b, short c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k)
    content.vb: Public Sub New(a As Integer, b As Short, c As Short, d As Byte, e As Byte, f As Byte, g As Byte, h As Byte, i As Byte, j As Byte, k As Byte)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int16
    - id: c
      type: System.Int16
    - id: d
      type: System.Byte
    - id: e
      type: System.Byte
    - id: f
      type: System.Byte
    - id: g
      type: System.Byte
    - id: h
      type: System.Byte
    - id: i
      type: System.Byte
    - id: j
      type: System.Byte
    - id: k
      type: System.Byte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])
  commentId: M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])
  id: '#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])'
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: Guid(Int32, Int16, Int16, Byte[])
  nameWithType: Guid.Guid(Int32, Int16, Int16, Byte[])
  fullName: System.Guid.Guid(System.Int32, System.Int16, System.Int16, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 928
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Guid(int a, short b, short c, byte[] d)
    content.vb: Public Sub New(a As Integer, b As Short, c As Short, d As Byte())
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int16
    - id: c
      type: System.Int16
    - id: d
      type: System.Byte[]
  nameWithType.vb: Guid.Guid(Int32, Int16, Int16, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Guid.Guid(System.Int32, System.Int16, System.Int16, System.Byte())
  name.vb: Guid(Int32, Int16, Int16, Byte())
- uid: System.Guid.#ctor(System.String)
  commentId: M:System.Guid.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: Guid(String)
  nameWithType: Guid.Guid(String)
  fullName: System.Guid.Guid(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 929
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Guid(string g)
    content.vb: Public Sub New(g As String)
    parameters:
    - id: g
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)
  id: '#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)'
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: Guid(UInt32, UInt16, UInt16, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte)
  nameWithType: Guid.Guid(UInt32, UInt16, UInt16, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte)
  fullName: System.Guid.Guid(System.UInt32, System.UInt16, System.UInt16, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 930
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [CLSCompliant(false)]

      public Guid(uint a, ushort b, ushort c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k)
    content.vb: >-
      <CLSCompliant(False)>

      Public Sub New(a As UInteger, b As UShort, c As UShort, d As Byte, e As Byte, f As Byte, g As Byte, h As Byte, i As Byte, j As Byte, k As Byte)
    parameters:
    - id: a
      type: System.UInt32
    - id: b
      type: System.UInt16
    - id: c
      type: System.UInt16
    - id: d
      type: System.Byte
    - id: e
      type: System.Byte
    - id: f
      type: System.Byte
    - id: g
      type: System.Byte
    - id: h
      type: System.Byte
    - id: i
      type: System.Byte
    - id: j
      type: System.Byte
    - id: k
      type: System.Byte
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Guid.CompareTo(System.Guid)
  commentId: M:System.Guid.CompareTo(System.Guid)
  id: CompareTo(System.Guid)
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: CompareTo(Guid)
  nameWithType: Guid.CompareTo(Guid)
  fullName: System.Guid.CompareTo(System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 932
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public int CompareTo(Guid value)
    content.vb: Public Function CompareTo(value As Guid) As Integer
    parameters:
    - id: value
      type: System.Guid
    return:
      type: System.Int32
  implements:
  - System.IComparable{System.Guid}.CompareTo(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Guid.Equals(System.Guid)
  commentId: M:System.Guid.Equals(System.Guid)
  id: Equals(System.Guid)
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: Equals(Guid)
  nameWithType: Guid.Equals(Guid)
  fullName: System.Guid.Equals(System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 933
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool Equals(Guid g)
    content.vb: Public Function Equals(g As Guid) As Boolean
    parameters:
    - id: g
      type: System.Guid
    return:
      type: System.Boolean
  implements:
  - System.IEquatable{System.Guid}.Equals(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Guid.Equals(System.Object)
  commentId: M:System.Guid.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Guid.Equals(Object)
  fullName: System.Guid.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 934
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override bool Equals(object o)
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Guid.GetHashCode
  commentId: M:System.Guid.GetHashCode
  id: GetHashCode
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Guid.GetHashCode()
  fullName: System.Guid.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 935
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Guid.NewGuid
  commentId: M:System.Guid.NewGuid
  id: NewGuid
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: NewGuid()
  nameWithType: Guid.NewGuid()
  fullName: System.Guid.NewGuid()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NewGuid
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 936
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static Guid NewGuid()
    content.vb: Public Shared Function NewGuid As Guid
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Guid.op_Equality(System.Guid,System.Guid)
  commentId: M:System.Guid.op_Equality(System.Guid,System.Guid)
  id: op_Equality(System.Guid,System.Guid)
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: Equality(Guid, Guid)
  nameWithType: Guid.Equality(Guid, Guid)
  fullName: System.Guid.Equality(System.Guid, System.Guid)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 937
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool operator ==(Guid a, Guid b)
    content.vb: Public Shared Operator =(a As Guid, b As Guid) As Boolean
    parameters:
    - id: a
      type: System.Guid
    - id: b
      type: System.Guid
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Guid.op_Inequality(System.Guid,System.Guid)
  commentId: M:System.Guid.op_Inequality(System.Guid,System.Guid)
  id: op_Inequality(System.Guid,System.Guid)
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: Inequality(Guid, Guid)
  nameWithType: Guid.Inequality(Guid, Guid)
  fullName: System.Guid.Inequality(System.Guid, System.Guid)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 938
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool operator !=(Guid a, Guid b)
    content.vb: Public Shared Operator <>(a As Guid, b As Guid) As Boolean
    parameters:
    - id: a
      type: System.Guid
    - id: b
      type: System.Guid
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Guid.Parse(System.String)
  commentId: M:System.Guid.Parse(System.String)
  id: Parse(System.String)
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: Guid.Parse(String)
  fullName: System.Guid.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 939
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static Guid Parse(string input)
    content.vb: Public Shared Function Parse(input As String) As Guid
    parameters:
    - id: input
      type: System.String
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Guid.ParseExact(System.String,System.String)
  commentId: M:System.Guid.ParseExact(System.String,System.String)
  id: ParseExact(System.String,System.String)
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: ParseExact(String, String)
  nameWithType: Guid.ParseExact(String, String)
  fullName: System.Guid.ParseExact(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 940
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static Guid ParseExact(string input, string format)
    content.vb: Public Shared Function ParseExact(input As String, format As String) As Guid
    parameters:
    - id: input
      type: System.String
    - id: format
      type: System.String
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Guid.System#IComparable#CompareTo(System.Object)
  commentId: M:System.Guid.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(Object)
  nameWithType: Guid.IComparable.CompareTo(Object)
  fullName: System.Guid.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IComparable.CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 941
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object value)
    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.IComparable.CompareTo(System.Object)
  nameWithType.vb: Guid.System.IComparable.CompareTo(Object)
  name.vb: System.IComparable.CompareTo(Object)
- uid: System.Guid.System#IFormattable#ToString(System.String,System.IFormatProvider)
  commentId: M:System.Guid.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: IFormattable.ToString(String, IFormatProvider)
  nameWithType: Guid.IFormattable.ToString(String, IFormatProvider)
  fullName: System.Guid.System.IFormattable.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IFormattable.ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 942
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: string IFormattable.ToString(string format, IFormatProvider provider)
    content.vb: Function System.IFormattable.ToString(format As String, provider As IFormatProvider) As String Implements IFormattable.ToString
    parameters:
    - id: format
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Guid.System.IFormattable.ToString(String, IFormatProvider)
  name.vb: System.IFormattable.ToString(String, IFormatProvider)
- uid: System.Guid.ToByteArray
  commentId: M:System.Guid.ToByteArray
  id: ToByteArray
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: ToByteArray()
  nameWithType: Guid.ToByteArray()
  fullName: System.Guid.ToByteArray()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToByteArray
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 943
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public byte[] ToByteArray()
    content.vb: Public Function ToByteArray As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Guid.ToString
  commentId: M:System.Guid.ToString
  id: ToString
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Guid.ToString()
  fullName: System.Guid.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 944
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Guid.ToString(System.String)
  commentId: M:System.Guid.ToString(System.String)
  id: ToString(System.String)
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: Guid.ToString(String)
  fullName: System.Guid.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 945
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Guid.TryParse(System.String,System.Guid@)
  commentId: M:System.Guid.TryParse(System.String,System.Guid@)
  id: TryParse(System.String,System.Guid@)
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: TryParse(String, out Guid)
  nameWithType: Guid.TryParse(String, out Guid)
  fullName: System.Guid.TryParse(System.String, out System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 946
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool TryParse(string input, out Guid result)
    content.vb: Public Shared Function TryParse(input As String, ByRef result As Guid) As Boolean
    parameters:
    - id: input
      type: System.String
    - id: result
      type: System.Guid
    return:
      type: System.Boolean
  nameWithType.vb: Guid.TryParse(String, ByRef Guid)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Guid.TryParse(System.String, ByRef System.Guid)
  name.vb: TryParse(String, ByRef Guid)
- uid: System.Guid.TryParseExact(System.String,System.String,System.Guid@)
  commentId: M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)
  id: TryParseExact(System.String,System.String,System.Guid@)
  parent: System.Guid
  langs:
  - csharp
  - vb
  name: TryParseExact(String, String, out Guid)
  nameWithType: Guid.TryParseExact(String, String, out Guid)
  fullName: System.Guid.TryParseExact(System.String, System.String, out System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 947
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool TryParseExact(string input, string format, out Guid result)
    content.vb: Public Shared Function TryParseExact(input As String, format As String, ByRef result As Guid) As Boolean
    parameters:
    - id: input
      type: System.String
    - id: format
      type: System.String
    - id: result
      type: System.Guid
    return:
      type: System.Boolean
  nameWithType.vb: Guid.TryParseExact(String, String, ByRef Guid)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Guid.TryParseExact(System.String, System.String, ByRef System.Guid)
  name.vb: TryParseExact(String, String, ByRef Guid)
references:
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable{System.Guid}
  commentId: T:System.IComparable{System.Guid}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Guid>
  nameWithType: IComparable<Guid>
  fullName: System.IComparable<System.Guid>
  nameWithType.vb: IComparable(Of Guid)
  fullname.vb: System.IComparable(Of System.Guid)
  name.vb: IComparable(Of Guid)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{System.Guid}
  commentId: T:System.IEquatable{System.Guid}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Guid>
  nameWithType: IEquatable<Guid>
  fullName: System.IEquatable<System.Guid>
  nameWithType.vb: IEquatable(Of Guid)
  fullname.vb: System.IEquatable(Of System.Guid)
  name.vb: IEquatable(Of Guid)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: false
  name: IComparable<>
  nameWithType: IComparable<>
  fullName: System.IComparable<>
  nameWithType.vb: IComparable(Of )
  fullname.vb: System.IComparable(Of )
  name.vb: IComparable(Of )
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: false
  name: IEquatable<>
  nameWithType: IEquatable<>
  fullName: System.IEquatable<>
  nameWithType.vb: IEquatable(Of )
  fullname.vb: System.IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.IComparable{System.Guid}.CompareTo(System.Guid)
  commentId: M:System.IComparable{System.Guid}.CompareTo(System.Guid)
  parent: System.IComparable{System.Guid}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(Guid)
  nameWithType: IComparable<Guid>.CompareTo(Guid)
  fullName: System.IComparable<System.Guid>.CompareTo(System.Guid)
  nameWithType.vb: IComparable(Of Guid).CompareTo(Guid)
  fullname.vb: System.IComparable(Of System.Guid).CompareTo(System.Guid)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<Guid>.CompareTo
    fullName: System.IComparable<System.Guid>.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of Guid).CompareTo
    fullName: System.IComparable(Of System.Guid).CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: false
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{System.Guid}.Equals(System.Guid)
  commentId: M:System.IEquatable{System.Guid}.Equals(System.Guid)
  parent: System.IEquatable{System.Guid}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Guid)
  nameWithType: IEquatable<Guid>.Equals(Guid)
  fullName: System.IEquatable<System.Guid>.Equals(System.Guid)
  nameWithType.vb: IEquatable(Of Guid).Equals(Guid)
  fullname.vb: System.IEquatable(Of System.Guid).Equals(System.Guid)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Guid>.Equals
    fullName: System.IEquatable<System.Guid>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Guid).Equals
    fullName: System.IEquatable(Of System.Guid).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: false
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: false
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: false
  name: ToString(String, IFormatProvider)
  nameWithType: IFormattable.ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
