items:
- uid: System.IO.FileShare
  id: FileShare
  parent: System.IO
  children:
  - System.IO.FileShare.Delete
  - System.IO.FileShare.Inheritable
  - System.IO.FileShare.None
  - System.IO.FileShare.Read
  - System.IO.FileShare.ReadWrite
  - System.IO.FileShare.Write
  name: FileShare
  fullName: System.IO.FileShare
  type: Enum
  source:
    remote: &o0
      path: src/System.IO.FileSystem.Primitives/src/System/IO/FileShare.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.FileSystem.Primitives/src/System/IO/FileShare.cs
    startLine: 16
  assemblies:
  - System.IO.FileSystem.Primitives
  namespace: System.IO
  summary: Contains constants for controlling the kind of access other <xref href="System.IO.FileStream" data-throw-if-not-resolved="false"></xref> objects can have to the same file.
  syntax:
    content: 'public enum FileShare : int'
    content.vb: Public Enum FileShare As Integer
- uid: System.IO.FileShare.Delete
  id: Delete
  parent: System.IO.FileShare
  name: Delete
  fullName: System.IO.FileShare.Delete
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem.Primitives/src/System/IO/FileShare.cs
    startLine: 49
  assemblies:
  - System.IO.FileSystem.Primitives
  namespace: System.IO
  summary: Allows subsequent deleting of a file.
  syntax:
    content: Delete = null
    content.vb: Delete = Nothing
- uid: System.IO.FileShare.Inheritable
  id: Inheritable
  parent: System.IO.FileShare
  name: Inheritable
  fullName: System.IO.FileShare.Inheritable
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem.Primitives/src/System/IO/FileShare.cs
    startLine: 55
  assemblies:
  - System.IO.FileSystem.Primitives
  namespace: System.IO
  summary: Makes the file handle inheritable by child processes. This is not directly supported by Win32.
  syntax:
    content: Inheritable = null
    content.vb: Inheritable = Nothing
- uid: System.IO.FileShare.None
  id: None
  parent: System.IO.FileShare
  name: None
  fullName: System.IO.FileShare.None
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem.Primitives/src/System/IO/FileShare.cs
    startLine: 23
  assemblies:
  - System.IO.FileSystem.Primitives
  namespace: System.IO
  summary: Declines sharing of the current file. Any request to open the file (by this process or another process) will fail until the file is closed.
  syntax:
    content: None = null
    content.vb: None = Nothing
- uid: System.IO.FileShare.Read
  id: Read
  parent: System.IO.FileShare
  name: Read
  fullName: System.IO.FileShare.Read
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem.Primitives/src/System/IO/FileShare.cs
    startLine: 30
  assemblies:
  - System.IO.FileSystem.Primitives
  namespace: System.IO
  summary: Allows subsequent opening of the file for reading. If this flag is not specified, any request to open the file for reading (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.
  syntax:
    content: Read = null
    content.vb: Read = Nothing
- uid: System.IO.FileShare.ReadWrite
  id: ReadWrite
  parent: System.IO.FileShare
  name: ReadWrite
  fullName: System.IO.FileShare.ReadWrite
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem.Primitives/src/System/IO/FileShare.cs
    startLine: 44
  assemblies:
  - System.IO.FileSystem.Primitives
  namespace: System.IO
  summary: Allows subsequent opening of the file for reading or writing. If this flag is not specified, any request to open the file for reading or writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.
  syntax:
    content: ReadWrite = null
    content.vb: ReadWrite = Nothing
- uid: System.IO.FileShare.Write
  id: Write
  parent: System.IO.FileShare
  name: Write
  fullName: System.IO.FileShare.Write
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem.Primitives/src/System/IO/FileShare.cs
    startLine: 37
  assemblies:
  - System.IO.FileSystem.Primitives
  namespace: System.IO
  summary: Allows subsequent opening of the file for writing. If this flag is not specified, any request to open the file for writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.
  syntax:
    content: Write = null
    content.vb: Write = Nothing
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
