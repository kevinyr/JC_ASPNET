items:
- uid: System.IO.FileStream
  commentId: T:System.IO.FileStream
  id: FileStream
  parent: System.IO
  children:
  - System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)
  - System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)
  - System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)
  - System.IO.FileStream.#ctor(System.String,System.IO.FileMode)
  - System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)
  - System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)
  - System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)
  - System.IO.FileStream.CanRead
  - System.IO.FileStream.CanSeek
  - System.IO.FileStream.CanWrite
  - System.IO.FileStream.Dispose(System.Boolean)
  - System.IO.FileStream.Finalize
  - System.IO.FileStream.Flush
  - System.IO.FileStream.Flush(System.Boolean)
  - System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.FileStream.IsAsync
  - System.IO.FileStream.Length
  - System.IO.FileStream.Name
  - System.IO.FileStream.Position
  - System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.FileStream.ReadByte
  - System.IO.FileStream.SafeFileHandle
  - System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.FileStream.SetLength(System.Int64)
  - System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.FileStream.WriteByte(System.Byte)
  langs:
  - csharp
  - vb
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
  type: Class
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileStream
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 178
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: 'public class FileStream : Stream'
    content.vb: >-
      Public Class FileStream
          Inherits Stream
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)
  commentId: M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)
  id: '#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)'
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: FileStream(SafeFileHandle, FileAccess)
  nameWithType: FileStream.FileStream(SafeFileHandle, FileAccess)
  fullName: System.IO.FileStream.FileStream(Microsoft.Win32.SafeHandles.SafeFileHandle, System.IO.FileAccess)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 180
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public FileStream(SafeFileHandle handle, FileAccess access)
    content.vb: Public Sub New(handle As SafeFileHandle, access As FileAccess)
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeFileHandle
    - id: access
      type: System.IO.FileAccess
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)
  commentId: M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)
  id: '#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)'
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: FileStream(SafeFileHandle, FileAccess, Int32)
  nameWithType: FileStream.FileStream(SafeFileHandle, FileAccess, Int32)
  fullName: System.IO.FileStream.FileStream(Microsoft.Win32.SafeHandles.SafeFileHandle, System.IO.FileAccess, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 181
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public FileStream(SafeFileHandle handle, FileAccess access, int bufferSize)
    content.vb: Public Sub New(handle As SafeFileHandle, access As FileAccess, bufferSize As Integer)
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeFileHandle
    - id: access
      type: System.IO.FileAccess
    - id: bufferSize
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)
  commentId: M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)
  id: '#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)'
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: FileStream(SafeFileHandle, FileAccess, Int32, Boolean)
  nameWithType: FileStream.FileStream(SafeFileHandle, FileAccess, Int32, Boolean)
  fullName: System.IO.FileStream.FileStream(Microsoft.Win32.SafeHandles.SafeFileHandle, System.IO.FileAccess, System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 182
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public FileStream(SafeFileHandle handle, FileAccess access, int bufferSize, bool isAsync)
    content.vb: Public Sub New(handle As SafeFileHandle, access As FileAccess, bufferSize As Integer, isAsync As Boolean)
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeFileHandle
    - id: access
      type: System.IO.FileAccess
    - id: bufferSize
      type: System.Int32
    - id: isAsync
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileStream.#ctor(System.String,System.IO.FileMode)
  commentId: M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)
  id: '#ctor(System.String,System.IO.FileMode)'
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: FileStream(String, FileMode)
  nameWithType: FileStream.FileStream(String, FileMode)
  fullName: System.IO.FileStream.FileStream(System.String, System.IO.FileMode)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 183
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public FileStream(string path, FileMode mode)
    content.vb: Public Sub New(path As String, mode As FileMode)
    parameters:
    - id: path
      type: System.String
    - id: mode
      type: System.IO.FileMode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)
  commentId: M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)'
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: FileStream(String, FileMode, FileAccess)
  nameWithType: FileStream.FileStream(String, FileMode, FileAccess)
  fullName: System.IO.FileStream.FileStream(System.String, System.IO.FileMode, System.IO.FileAccess)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 184
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public FileStream(string path, FileMode mode, FileAccess access)
    content.vb: Public Sub New(path As String, mode As FileMode, access As FileAccess)
    parameters:
    - id: path
      type: System.String
    - id: mode
      type: System.IO.FileMode
    - id: access
      type: System.IO.FileAccess
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  commentId: M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)'
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: FileStream(String, FileMode, FileAccess, FileShare)
  nameWithType: FileStream.FileStream(String, FileMode, FileAccess, FileShare)
  fullName: System.IO.FileStream.FileStream(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 185
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public FileStream(string path, FileMode mode, FileAccess access, FileShare share)
    content.vb: Public Sub New(path As String, mode As FileMode, access As FileAccess, share As FileShare)
    parameters:
    - id: path
      type: System.String
    - id: mode
      type: System.IO.FileMode
    - id: access
      type: System.IO.FileAccess
    - id: share
      type: System.IO.FileShare
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)
  commentId: M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)'
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: FileStream(String, FileMode, FileAccess, FileShare, Int32)
  nameWithType: FileStream.FileStream(String, FileMode, FileAccess, FileShare, Int32)
  fullName: System.IO.FileStream.FileStream(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 186
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public FileStream(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize)
    content.vb: Public Sub New(path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer)
    parameters:
    - id: path
      type: System.String
    - id: mode
      type: System.IO.FileMode
    - id: access
      type: System.IO.FileAccess
    - id: share
      type: System.IO.FileShare
    - id: bufferSize
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)
  commentId: M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)'
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: FileStream(String, FileMode, FileAccess, FileShare, Int32, Boolean)
  nameWithType: FileStream.FileStream(String, FileMode, FileAccess, FileShare, Int32, Boolean)
  fullName: System.IO.FileStream.FileStream(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 187
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public FileStream(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize, bool useAsync)
    content.vb: Public Sub New(path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer, useAsync As Boolean)
    parameters:
    - id: path
      type: System.String
    - id: mode
      type: System.IO.FileMode
    - id: access
      type: System.IO.FileAccess
    - id: share
      type: System.IO.FileShare
    - id: bufferSize
      type: System.Int32
    - id: useAsync
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)
  commentId: M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)'
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: FileStream(String, FileMode, FileAccess, FileShare, Int32, FileOptions)
  nameWithType: FileStream.FileStream(String, FileMode, FileAccess, FileShare, Int32, FileOptions)
  fullName: System.IO.FileStream.FileStream(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, System.Int32, System.IO.FileOptions)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 188
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public FileStream(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize, FileOptions options)
    content.vb: Public Sub New(path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer, options As FileOptions)
    parameters:
    - id: path
      type: System.String
    - id: mode
      type: System.IO.FileMode
    - id: access
      type: System.IO.FileAccess
    - id: share
      type: System.IO.FileShare
    - id: bufferSize
      type: System.Int32
    - id: options
      type: System.IO.FileOptions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileStream.CanRead
  commentId: P:System.IO.FileStream.CanRead
  id: CanRead
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: FileStream.CanRead
  fullName: System.IO.FileStream.CanRead
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanRead
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 189
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override bool CanRead { get; }
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.FileStream.CanSeek
  commentId: P:System.IO.FileStream.CanSeek
  id: CanSeek
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: CanSeek
  nameWithType: FileStream.CanSeek
  fullName: System.IO.FileStream.CanSeek
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanSeek
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 190
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override bool CanSeek { get; }
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.FileStream.CanWrite
  commentId: P:System.IO.FileStream.CanWrite
  id: CanWrite
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: FileStream.CanWrite
  fullName: System.IO.FileStream.CanWrite
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanWrite
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 191
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override bool CanWrite { get; }
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.FileStream.IsAsync
  commentId: P:System.IO.FileStream.IsAsync
  id: IsAsync
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: IsAsync
  nameWithType: FileStream.IsAsync
  fullName: System.IO.FileStream.IsAsync
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsAsync
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 192
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public virtual bool IsAsync { get; }
    content.vb: Public Overridable ReadOnly Property IsAsync As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.IO.FileStream.Length
  commentId: P:System.IO.FileStream.Length
  id: Length
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: FileStream.Length
  fullName: System.IO.FileStream.Length
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Length
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 193
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override long Length { get; }
    content.vb: Public Overrides ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.FileStream.Name
  commentId: P:System.IO.FileStream.Name
  id: Name
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FileStream.Name
  fullName: System.IO.FileStream.Name
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 194
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.FileStream.Position
  commentId: P:System.IO.FileStream.Position
  id: Position
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: FileStream.Position
  fullName: System.IO.FileStream.Position
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Position
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 195
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override long Position { get; set; }
    content.vb: Public Overrides Property Position As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IO.FileStream.SafeFileHandle
  commentId: P:System.IO.FileStream.SafeFileHandle
  id: SafeFileHandle
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: SafeFileHandle
  nameWithType: FileStream.SafeFileHandle
  fullName: System.IO.FileStream.SafeFileHandle
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SafeFileHandle
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 196
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public virtual SafeFileHandle SafeFileHandle { get; }
    content.vb: Public Overridable ReadOnly Property SafeFileHandle As SafeFileHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafeFileHandle
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.IO.FileStream.Dispose(System.Boolean)
  commentId: M:System.IO.FileStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: FileStream.Dispose(Boolean)
  fullName: System.IO.FileStream.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 197
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.IO.FileStream.Finalize
  commentId: M:System.IO.FileStream.Finalize
  id: Finalize
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: FileStream.Finalize()
  fullName: System.IO.FileStream.Finalize()
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Finalize
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 198
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.IO.FileStream.Flush
  commentId: M:System.IO.FileStream.Flush
  id: Flush
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: FileStream.Flush()
  fullName: System.IO.FileStream.Flush()
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Flush
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 199
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IO.FileStream.Flush(System.Boolean)
  commentId: M:System.IO.FileStream.Flush(System.Boolean)
  id: Flush(System.Boolean)
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: Flush(Boolean)
  nameWithType: FileStream.Flush(Boolean)
  fullName: System.IO.FileStream.Flush(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Flush
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 200
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public virtual void Flush(bool flushToDisk)
    content.vb: Public Overridable Sub Flush(flushToDisk As Boolean)
    parameters:
    - id: flushToDisk
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)
  commentId: M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)
  id: FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: FlushAsync(Threading.CancellationToken)
  nameWithType: FileStream.FlushAsync(Threading.CancellationToken)
  fullName: System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FlushAsync
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 201
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override Threading.Tasks.Task FlushAsync(Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function FlushAsync(cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  nameWithType: FileStream.Read(Byte[], Int32, Int32)
  fullName: System.IO.FileStream.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 202
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override int Read(byte[] array, int offset, int count)
    content.vb: Public Overrides Function Read(array As Byte(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: array
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
  nameWithType.vb: FileStream.Read(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.FileStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: ReadAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  nameWithType: FileStream.ReadAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  fullName: System.IO.FileStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadAsync
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 203
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override Threading.Tasks.Task<int> ReadAsync(byte[] buffer, int offset, int count, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function ReadAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  nameWithType.vb: FileStream.ReadAsync(Byte(), Int32, Int32, Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.FileStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, Threading.CancellationToken)
- uid: System.IO.FileStream.ReadByte
  commentId: M:System.IO.FileStream.ReadByte
  id: ReadByte
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: ReadByte()
  nameWithType: FileStream.ReadByte()
  fullName: System.IO.FileStream.ReadByte()
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadByte
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 204
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override int ReadByte()
    content.vb: Public Overrides Function ReadByte As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: Seek(Int64, SeekOrigin)
  nameWithType: FileStream.Seek(Int64, SeekOrigin)
  fullName: System.IO.FileStream.Seek(System.Int64, System.IO.SeekOrigin)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Seek
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 205
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
    parameters:
    - id: offset
      type: System.Int64
    - id: origin
      type: System.IO.SeekOrigin
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IO.FileStream.SetLength(System.Int64)
  commentId: M:System.IO.FileStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  nameWithType: FileStream.SetLength(Int64)
  fullName: System.IO.FileStream.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetLength
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 206
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override void SetLength(long value)
    content.vb: Public Overrides Sub SetLength(value As Long)
    parameters:
    - id: value
      type: System.Int64
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: Write(Byte[], Int32, Int32)
  nameWithType: FileStream.Write(Byte[], Int32, Int32)
  fullName: System.IO.FileStream.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 207
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override void Write(byte[] array, int offset, int count)
    content.vb: Public Overrides Sub Write(array As Byte(), offset As Integer, count As Integer)
    parameters:
    - id: array
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
  nameWithType.vb: FileStream.Write(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.FileStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
- uid: System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: WriteAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  nameWithType: FileStream.WriteAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  fullName: System.IO.FileStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteAsync
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 208
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override Threading.Tasks.Task WriteAsync(byte[] buffer, int offset, int count, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function WriteAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: FileStream.WriteAsync(Byte(), Int32, Int32, Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.FileStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, Threading.CancellationToken)
- uid: System.IO.FileStream.WriteByte(System.Byte)
  commentId: M:System.IO.FileStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.FileStream
  langs:
  - csharp
  - vb
  name: WriteByte(Byte)
  nameWithType: FileStream.WriteByte(Byte)
  fullName: System.IO.FileStream.WriteByte(System.Byte)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteByte
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 209
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  syntax:
    content: public override void WriteByte(byte value)
    content.vb: Public Overrides Sub WriteByte(value As Byte)
    parameters:
    - id: value
      type: System.Byte
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Win32.SafeHandles.SafeFileHandle
  commentId: T:Microsoft.Win32.SafeHandles.SafeFileHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeFileHandle
  nameWithType: SafeFileHandle
  fullName: Microsoft.Win32.SafeHandles.SafeFileHandle
- uid: System.IO.FileAccess
  commentId: T:System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: Microsoft.Win32.SafeHandles
  commentId: N:Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  nameWithType: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileMode
  commentId: T:System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileShare
  commentId: T:System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.FileOptions
  commentId: T:System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: Threading.CancellationToken
  nameWithType: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task
  nameWithType: Threading.Tasks.Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Int32>
  nameWithType: Threading.Tasks.Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Threading.Tasks.Task(Of Int32)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Threading.Tasks.Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: false
  name: Threading.Tasks.Task<>
  nameWithType: Threading.Tasks.Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Threading.Tasks.Task(Of )
  fullname.vb: System.Threading.Tasks.Task(Of )
  name.vb: Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.SeekOrigin
  commentId: T:System.IO.SeekOrigin
  parent: System.IO
  isExternal: false
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
