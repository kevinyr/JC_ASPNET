items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  id: MemoryMappedViewAccessor
  parent: System.IO.MemoryMappedFiles
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush
  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset
  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  name: MemoryMappedViewAccessor
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  type: Class
  source:
    remote: &o0
      path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewAccessor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewAccessor.cs
    startLine: 10
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: Represents a randomly accessed view of a memory-mapped file.
  syntax:
    content: 'public sealed class MemoryMappedViewAccessor : UnmanagedMemoryAccessor'
    content.vb: Public NotInheritable Class MemoryMappedViewAccessor Inherits UnmanagedMemoryAccessor
  inheritance:
  - System.Object
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset
  id: PointerOffset
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  name: PointerOffset
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset
  type: Property
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewAccessor.cs
    startLine: 29
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: '[Supported in the .NET Framework 4.5.1 and later versions] Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.'
  syntax:
    content: public long PointerOffset { get; }
    content.vb: Public ReadOnly Property PointerOffset As Long
    parameters: []
    return:
      type: System.Int64
      description: The number of bytes between the starting position of this view and the beginning of the memory-mapped file.
  exceptions:
  - type: System.InvalidOperationException
    description: The object from which this instance was created is null.
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  id: SafeMemoryMappedViewHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  name: SafeMemoryMappedViewHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  type: Property
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewAccessor.cs
    startLine: 23
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: Gets a handle to the view of a memory-mapped file.
  syntax:
    content: public SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle { get; }
    content.vb: Public ReadOnly Property SafeMemoryMappedViewHandle As SafeMemoryMappedViewHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
      description: A wrapper for the operating system's handle to the view of the file.
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  name: Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewAccessor.cs
    startLine: 34
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush
  id: Flush
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  name: Flush()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewAccessor.cs
    startLine: 64
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: Clears all buffers for this view and causes any buffered data to be written to the underlying file.
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  exceptions:
  - type: System.ObjectDisposedException
    description: Methods were called after the accessor was closed.
references:
- uid: System.IO.MemoryMappedFiles
  isExternal: false
  name: System.IO.MemoryMappedFiles
  fullName: System.IO.MemoryMappedFiles
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeMemoryMappedViewHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
- uid: Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
