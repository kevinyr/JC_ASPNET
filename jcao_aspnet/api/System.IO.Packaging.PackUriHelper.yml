items:
- uid: System.IO.Packaging.PackUriHelper
  id: PackUriHelper
  parent: System.IO.Packaging
  children:
  - System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.Create(System.Uri)
  - System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)
  - System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.UriSchemePack
  name: PackUriHelper
  fullName: System.IO.Packaging.PackUriHelper
  type: Class
  source:
    remote: &o0
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackUriHelper.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackUriHelper.cs
    startLine: 20
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Provides utility methods to compose and parse pack URI objects.
  syntax:
    content: 'public class PackUriHelper : object'
    content.vb: Public Class PackUriHelper Inherits Object
  inheritance:
  - System.Object
- uid: System.IO.Packaging.PackUriHelper.UriSchemePack
  id: UriSchemePack
  parent: System.IO.Packaging.PackUriHelper
  name: UriSchemePack
  fullName: System.IO.Packaging.PackUriHelper.UriSchemePack
  type: Field
  source:
    remote: *o0
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackUriHelper.cs
    startLine: 999
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Defines the pack URI scheme name "pack".
  syntax:
    content: public static readonly string UriSchemePack
    content.vb: Public Shared ReadOnly UriSchemePack As String
- uid: System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)
  id: ComparePackUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: ComparePackUri(Uri, Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri, System.Uri)
  type: Method
  source:
    remote: &o1
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 152
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns a value that indicates whether two pack URIs are equivalent.
  syntax:
    content: public static int ComparePackUri(Uri firstPackUri, Uri secondPackUri)
    content.vb: Public Shared Function ComparePackUri(firstPackUri As Uri, secondPackUri As Uri) As Integer
    parameters:
    - id: firstPackUri
      type: System.Uri
      description: The first pack URI.
    - id: secondPackUri
      type: System.Uri
      description: The second pack URI.
    return:
      type: System.Int32
      description: A signed integer indicating the relationship between *firstPackUri* and *secondPackUri*.ValueMeaningLess than 0*firstPackUri* is less than *secondPackUri*.0*firstPackUri* is equivalent to *secondPackUri*.Greater than 0*firstPackUri* is greater than *secondPackUri*.
  exceptions:
  - type: System.ArgumentException
    description: Either *firstPackUri* or *secondPackUri* is not an absolute URI.-or-Either *firstPackUri* or *secondPackUri* do not begin with a "pack://" scheme.
- uid: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  id: ComparePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: ComparePartUri(Uri, Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri, System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 153
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "Returns a value that indicates whether two package part URIs are equivalent."
  syntax:
    content: public static int ComparePartUri(Uri firstPartUri, Uri secondPartUri)
    content.vb: Public Shared Function ComparePartUri(firstPartUri As Uri, secondPartUri As Uri) As Integer
    parameters:
    - id: firstPartUri
      type: System.Uri
      description: The URI of the first <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref>.
    - id: secondPartUri
      type: System.Uri
      description: The URI of the second <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Int32
      description: A value that indicates the relationship between *firstPartUri* and *secondPartUri*.ValueMeaningLess than 0*firstPartUri* is less than *secondPartUri*.0*firstPartUri* is equivalent to *secondPartUri*.Greater than 0*firstPartUri* is greater than *secondPartUri*.
  exceptions:
  - type: System.ArgumentException
    description: '*firstPartUri* or *secondPartUri* is not a valid part URI syntax.'
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri)
  id: Create(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: Create(Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 154
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Creates a new pack URI that points to a package.
  syntax:
    content: public static Uri Create(Uri packageUri)
    content.vb: Public Shared Function Create(packageUri As Uri) As Uri
    parameters:
    - id: packageUri
      type: System.Uri
      description: The URI of the referenced <xref href="System.IO.Packaging.Package" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Uri
      description: The pack URI for the <xref href="System.IO.Packaging.Package" data-throw-if-not-resolved="false"></xref> referenced by the given *packageUri*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*packageUri* is null.'
  - type: System.ArgumentException
    description: '*packageUri* is not an absolute URI.'
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)
  id: Create(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: Create(Uri, Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(System.Uri, System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 155
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "Creates a pack URI given a <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> URI and the URI of a part in the package."
  syntax:
    content: public static Uri Create(Uri packageUri, Uri partUri)
    content.vb: Public Shared Function Create(packageUri As Uri, partUri As Uri) As Uri
    parameters:
    - id: packageUri
      type: System.Uri
      description: The URI of the <xref href="System.IO.Packaging.Package" data-throw-if-not-resolved="false"></xref>.
    - id: partUri
      type: System.Uri
      description: "The URI of the <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref> in the package."
    return:
      type: System.Uri
      description: The pack URI of the given <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    description: '*packageUri* is null.'
  - type: System.ArgumentException
    description: '*packageUri* is not an absolute URI.-or-*partUri* is not a valid part URI syntax.'
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)
  id: Create(System.Uri,System.Uri,System.String)
  parent: System.IO.Packaging.PackUriHelper
  name: Create(Uri, Uri, String)
  fullName: System.IO.Packaging.PackUriHelper.Create(System.Uri, System.Uri, System.String)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 156
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "Creates a pack URI given a <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> URI, the URI of a part in the package, and a \"#\" fragment to append."
  syntax:
    content: public static Uri Create(Uri packageUri, Uri partUri, string fragment)
    content.vb: Public Shared Function Create(packageUri As Uri, partUri As Uri, fragment As String) As Uri
    parameters:
    - id: packageUri
      type: System.Uri
      description: "The URI of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>."
    - id: partUri
      type: System.Uri
      description: "The URI of the <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref> in the package."
    - id: fragment
      type: System.String
      description: A "#" reference identifying an element within the package part.
    return:
      type: System.Uri
      description: The pack URI that identifies the specified package, package part, and fragment.
  exceptions:
  - type: System.ArgumentNullException
    description: '*packageUri* is null.'
  - type: System.ArgumentException
    description: '*packageUri* is not an absolute URI.-or-*partUri* is not a valid part URI syntax. -or-*fragment* is empty or does begin with "#".'
- uid: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  id: CreatePartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: CreatePartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 157
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Creates a formatted <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> URI.
  syntax:
    content: public static Uri CreatePartUri(Uri partUri)
    content.vb: Public Shared Function CreatePartUri(partUri As Uri) As Uri
    parameters:
    - id: partUri
      type: System.Uri
      description: The URI of the <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> within the package.
    return:
      type: System.Uri
      description: A formatted <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> URI.
- uid: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  id: GetNormalizedPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: GetNormalizedPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 158
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns the normalized form of a specified <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> URI.
  syntax:
    content: public static Uri GetNormalizedPartUri(Uri partUri)
    content.vb: Public Shared Function GetNormalizedPartUri(partUri As Uri) As Uri
    parameters:
    - id: partUri
      type: System.Uri
      description: The <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> URI to normalize.
    return:
      type: System.Uri
      description: The normalized form of the given *partUri*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*partUri* is null.'
- uid: System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)
  id: GetPackageUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: GetPackageUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 159
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns the inner URI that points to the entire package of a specified pack URI.
  syntax:
    content: public static Uri GetPackageUri(Uri packUri)
    content.vb: Public Shared Function GetPackageUri(packUri As Uri) As Uri
    parameters:
    - id: packUri
      type: System.Uri
      description: The pack URI from which to return the URI of the <xref href="System.IO.Packaging.Package" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Uri
      description: The URI of the <xref href="System.IO.Packaging.Package" data-throw-if-not-resolved="false"></xref> from the specified *packUri*.
- uid: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)
  id: GetPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: GetPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 160
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns the URI of a <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> within a specified pack URI.
  syntax:
    content: public static Uri GetPartUri(Uri packUri)
    content.vb: Public Shared Function GetPartUri(packUri As Uri) As Uri
    parameters:
    - id: packUri
      type: System.Uri
      description: The pack URI from which to return the <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> URI.
    return:
      type: System.Uri
      description: The URI of the <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> in the given *packUri*, or null if *packUri* points to a package instead of a <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref>.
- uid: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  id: GetRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: GetRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 161
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "Returns the URI of the relationship part associated with a specified <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref>."
  syntax:
    content: public static Uri GetRelationshipPartUri(Uri partUri)
    content.vb: Public Shared Function GetRelationshipPartUri(partUri As Uri) As Uri
    parameters:
    - id: partUri
      type: System.Uri
      description: The <xref href="System.IO.Packaging.PackagePart.Uri" data-throw-if-not-resolved="false"></xref> of the <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> to return the URI for the associated <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Uri
      description: The URI of the <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref> part associated with the <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> identified by *partUri*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*partUri* is null.'
  - type: System.ArgumentException
    description: '*partUri* syntax is not valid for a package part URI.-or-*partUri* is an absolute URI.-or-*partUri* references a relationship part.'
- uid: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  id: GetRelativeUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: GetRelativeUri(Uri, Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri, System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 162
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "Returns the relative URI between two specified <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref> URIs."
  syntax:
    content: public static Uri GetRelativeUri(Uri sourcePartUri, Uri targetPartUri)
    content.vb: Public Shared Function GetRelativeUri(sourcePartUri As Uri, targetPartUri As Uri) As Uri
    parameters:
    - id: sourcePartUri
      type: System.Uri
      description: The URI of the source part.
    - id: targetPartUri
      type: System.Uri
      description: The URI of the target part.
    return:
      type: System.Uri
      description: The relative URI from *sourcePartUri* to *targetPartUri*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*sourcePartUri* or *targetPartUri* is null.'
- uid: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  id: GetSourcePartUriFromRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: GetSourcePartUriFromRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 163
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns the <xref href="System.IO.Packaging.PackageRelationship.SourceUri" data-throw-if-not-resolved="false"></xref> from the <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref> with a specified URI.
  syntax:
    content: public static Uri GetSourcePartUriFromRelationshipPartUri(Uri relationshipPartUri)
    content.vb: Public Shared Function GetSourcePartUriFromRelationshipPartUri(relationshipPartUri As Uri) As Uri
    parameters:
    - id: relationshipPartUri
      type: System.Uri
      description: The URI of the relationship part to return the <xref href="System.IO.Packaging.PackageRelationship.SourceUri" data-throw-if-not-resolved="false"></xref> from.
    return:
      type: System.Uri
      description: The <xref href="System.IO.Packaging.PackageRelationship.SourceUri" data-throw-if-not-resolved="false"></xref> of the <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> from the relationship with the specified *relationshipPartUri*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*relationshipPartUri* is null.'
  - type: System.ArgumentException
    description: '*relationshipPartUri* is an absolute URI.-or-*relationshipPartUri* syntax is not valid for a <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref>.-or-*relationshipPartUri* does not reference a relationship part.-or-The <xref href="System.IO.Packaging.PackageRelationship.SourceUri" data-throw-if-not-resolved="false"></xref> of the relationship part references another relationship part (not valid, see Remarks).'
- uid: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  id: IsRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: IsRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 164
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns a value that indicates whether a specified URI is the URI of a <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref> part.
  syntax:
    content: public static bool IsRelationshipPartUri(Uri partUri)
    content.vb: Public Shared Function IsRelationshipPartUri(partUri As Uri) As Boolean
    parameters:
    - id: partUri
      type: System.Uri
      description: The URI to check for a <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref> part.
    return:
      type: System.Boolean
      description: true if *partUri* identifies a <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref> part; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*partUri* is null.'
  - type: System.ArgumentException
    description: '*partUri* is an absolute URI.-or-*partUri* is an invalid <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> syntax.'
- uid: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  id: ResolvePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  name: ResolvePartUri(Uri, Uri)
  fullName: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri, System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 165
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns a part URI given a source part URI and a URI with a relative path to a target part.
  syntax:
    content: public static Uri ResolvePartUri(Uri sourcePartUri, Uri targetUri)
    content.vb: Public Shared Function ResolvePartUri(sourcePartUri As Uri, targetUri As Uri) As Uri
    parameters:
    - id: sourcePartUri
      type: System.Uri
      description: The URI of the source part, or "/" to designate the <xref href="System.IO.Packaging.Package" data-throw-if-not-resolved="false"></xref> root.
    - id: targetUri
      type: System.Uri
      description: The relative URI to the target part.
    return:
      type: System.Uri
      description: The URI of the target part resolved between the specified *SourcePartUri* and the *targetUri* parameters.
  exceptions:
  - type: System.ArgumentNullException
    description: '*sourcePartUri* or *targetUri* is null.'
  - type: System.ArgumentException
    description: '*sourcePartUri* is not a valid part URI.-or-*targetUri* is not a valid relative URI.'
references:
- uid: System.IO.Packaging
  isExternal: false
  name: System.IO.Packaging
  fullName: System.IO.Packaging
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
