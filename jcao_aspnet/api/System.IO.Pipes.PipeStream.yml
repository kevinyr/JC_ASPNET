items:
- uid: System.IO.Pipes.PipeStream
  id: PipeStream
  parent: System.IO.Pipes
  children:
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  name: PipeStream
  fullName: System.IO.Pipes.PipeStream
  type: Class
  source:
    remote: &o1
      path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 14
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Exposes a <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object around a pipe, which supports both anonymous and named pipes.
  syntax:
    content: 'public abstract class PipeStream : Stream'
    content.vb: Public MustInherit Class PipeStream Inherits Stream
  inheritance:
  - System.Object
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  name: PipeStream(PipeDirection, Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(System.IO.Pipes.PipeDirection, System.Int32)
  type: Constructor
  source:
    remote: &o0
      path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 32
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.PipeStream" data-throw-if-not-resolved="false"></xref> class using the specified <xref href="System.IO.Pipes.PipeDirection" data-throw-if-not-resolved="false"></xref> value and buffer size.
  syntax:
    content: protected PipeStream(PipeDirection direction, int bufferSize)
    content.vb: Protected Sub New(direction As PipeDirection, bufferSize As Integer)
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the <xref href="System.IO.Pipes.PipeDirection" data-throw-if-not-resolved="false"></xref> values that indicates the direction of the pipe object.
    - id: bufferSize
      type: System.Int32
      description: A positive <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> value greater than or equal to 0 that indicates the buffer size.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*direction* is not a valid <xref href="System.IO.Pipes.PipeDirection" data-throw-if-not-resolved="false"></xref> value.-or-*bufferSize* is less than 0.'
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  name: PipeStream(PipeDirection, PipeTransmissionMode, Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(System.IO.Pipes.PipeDirection, System.IO.Pipes.PipeTransmissionMode, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 46
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.PipeStream" data-throw-if-not-resolved="false"></xref> class using the specified <xref href="System.IO.Pipes.PipeDirection" data-throw-if-not-resolved="false"></xref>, <xref href="System.IO.Pipes.PipeTransmissionMode" data-throw-if-not-resolved="false"></xref>, and buffer size.
  syntax:
    content: protected PipeStream(PipeDirection direction, PipeTransmissionMode transmissionMode, int outBufferSize)
    content.vb: Protected Sub New(direction As PipeDirection, transmissionMode As PipeTransmissionMode, outBufferSize As Integer)
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the <xref href="System.IO.Pipes.PipeDirection" data-throw-if-not-resolved="false"></xref> values that indicates the direction of the pipe object.
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: One of the <xref href="System.IO.Pipes.PipeTransmissionMode" data-throw-if-not-resolved="false"></xref> values that indicates the transmission mode of the pipe object.
    - id: outBufferSize
      type: System.Int32
      description: A positive <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> value greater than or equal to 0 that indicates the buffer size.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*direction* is not a valid <xref href="System.IO.Pipes.PipeDirection" data-throw-if-not-resolved="false"></xref> value.-or-*transmissionMode* is not a valid <xref href="System.IO.Pipes.PipeTransmissionMode" data-throw-if-not-resolved="false"></xref> value.-or-*bufferSize* is less than 0.'
- uid: System.IO.Pipes.PipeStream.CanRead
  id: CanRead
  parent: System.IO.Pipes.PipeStream
  name: CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 395
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets a value indicating whether the current stream supports read operations.
  syntax:
    content: public override bool CanRead { get; }
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the stream supports read operations; otherwise, false.
- uid: System.IO.Pipes.PipeStream.CanSeek
  id: CanSeek
  parent: System.IO.Pipes.PipeStream
  name: CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 413
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets a value indicating whether the current stream supports seek operations.
  syntax:
    content: public override bool CanSeek { get; }
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: false in all cases.
- uid: System.IO.Pipes.PipeStream.CanWrite
  id: CanWrite
  parent: System.IO.Pipes.PipeStream
  name: CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 404
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets a value indicating whether the current stream supports write operations.
  syntax:
    content: public override bool CanWrite { get; }
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the stream supports write operations; otherwise, false.
- uid: System.IO.Pipes.PipeStream.InBufferSize
  id: InBufferSize
  parent: System.IO.Pipes.PipeStream
  name: InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
  type: Property
  source:
    remote: *o1
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 236
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets the size, in bytes, of the inbound buffer for a pipe.
  syntax:
    content: public virtual int InBufferSize { get; }
    content.vb: Public Overridable ReadOnly Property InBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: An integer value that represents the inbound buffer size, in bytes.
  exceptions:
  - type: System.NotSupportedException
    description: The stream is unreadable.
  - type: System.InvalidOperationException
    description: The pipe is waiting to connect.
  - type: System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
- uid: System.IO.Pipes.PipeStream.IsAsync
  id: IsAsync
  parent: System.IO.Pipes.PipeStream
  name: IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 309
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets a value indicating whether a <xref href="System.IO.Pipes.PipeStream" data-throw-if-not-resolved="false"></xref> object was opened asynchronously or synchronously.
  syntax:
    content: public bool IsAsync { get; }
    content.vb: Public ReadOnly Property IsAsync As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.IO.Pipes.PipeStream" data-throw-if-not-resolved="false"></xref> object was opened asynchronously; otherwise, false.
- uid: System.IO.Pipes.PipeStream.IsConnected
  id: IsConnected
  parent: System.IO.Pipes.PipeStream
  name: IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 297
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets or sets a value indicating whether a <xref href="System.IO.Pipes.PipeStream" data-throw-if-not-resolved="false"></xref> object is connected.
  syntax:
    content: public bool IsConnected { get; protected set; }
    content.vb: Public Property IsConnected As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.IO.Pipes.PipeStream" data-throw-if-not-resolved="false"></xref> object is connected; otherwise, false.
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  id: IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  name: IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 316
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets a value indicating whether there is more data in the message returned from the most recent read operation.
  syntax:
    content: public bool IsMessageComplete { get; }
    content.vb: Public ReadOnly Property IsMessageComplete As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if there are no more characters to read in the message; otherwise, false.
  exceptions:
  - type: System.InvalidOperationException
    description: The pipe is not connected.-or-The pipe handle has not been set.-or-The pipe's <xref href="System.IO.Pipes.PipeStream.ReadMode" data-throw-if-not-resolved="false"></xref> property value is not <xref href="System.IO.Pipes.PipeTransmissionMode.Message" data-throw-if-not-resolved="false"></xref>.
  - type: System.ObjectDisposedException
    description: The pipe is closed.
- uid: System.IO.Pipes.PipeStream.Length
  id: Length
  parent: System.IO.Pipes.PipeStream
  name: Length
  fullName: System.IO.Pipes.PipeStream.Length
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 422
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets the length of a stream, in bytes.
  syntax:
    content: public override long Length { get; }
    content.vb: Public Overrides ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
      description: 0 in all cases.
  exceptions:
  - type: System.NotSupportedException
    description: Always thrown.
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  id: OutBufferSize
  parent: System.IO.Pipes.PipeStream
  name: OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
  type: Property
  source:
    remote: *o1
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 262
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets the size, in bytes, of the outbound buffer for a pipe.
  syntax:
    content: public virtual int OutBufferSize { get; }
    content.vb: Public Overridable ReadOnly Property OutBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The outbound buffer size, in bytes.
  exceptions:
  - type: System.NotSupportedException
    description: The stream is unwriteable.
  - type: System.InvalidOperationException
    description: The pipe is waiting to connect.
  - type: System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
- uid: System.IO.Pipes.PipeStream.Position
  id: Position
  parent: System.IO.Pipes.PipeStream
  name: Position
  fullName: System.IO.Pipes.PipeStream.Position
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 430
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets or sets the current position of the current stream.
  syntax:
    content: public override long Position { get; set; }
    content.vb: Public Overrides Property Position As Long
    parameters: []
    return:
      type: System.Int64
      description: 0 in all cases.
  exceptions:
  - type: System.NotSupportedException
    description: Always thrown.
- uid: System.IO.Pipes.PipeStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.PipeStream
  name: ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
  type: Property
  source:
    remote: *o1
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 291
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets or sets the reading mode for a <xref href="System.IO.Pipes.PipeStream" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual PipeTransmissionMode ReadMode { get; set; }
    content.vb: Public Overridable Property ReadMode As PipeTransmissionMode
    parameters: []
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: One of the <xref href="System.IO.Pipes.PipeTransmissionMode" data-throw-if-not-resolved="false"></xref> values that indicates how the <xref href="System.IO.Pipes.PipeStream" data-throw-if-not-resolved="false"></xref> object reads from the pipe.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The supplied value is not a valid <xref href="System.IO.Pipes.PipeTransmissionMode" data-throw-if-not-resolved="false"></xref> value.
  - type: System.NotSupportedException
    description: The supplied value is not a supported <xref href="System.IO.Pipes.PipeTransmissionMode" data-throw-if-not-resolved="false"></xref> value for this pipe stream.
  - type: System.InvalidOperationException
    description: The handle has not been set.-or-The pipe is waiting to connect with a named client.
  - type: System.IO.IOException
    description: The pipe is broken or an I/O error occurred with a named client.
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  id: SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  name: SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 358
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets the safe handle for the local end of the pipe that the current <xref href="System.IO.Pipes.PipeStream" data-throw-if-not-resolved="false"></xref> object encapsulates.
  syntax:
    content: public SafePipeHandle SafePipeHandle { get; }
    content.vb: Public ReadOnly Property SafePipeHandle As SafePipeHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: A <xref href="Microsoft.Win32.SafeHandles.SafePipeHandle" data-throw-if-not-resolved="false"></xref> object for the pipe that is encapsulated by the current <xref href="System.IO.Pipes.PipeStream" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidOperationException
    description: The pipe handle has not been set.
  - type: System.ObjectDisposedException
    description: The pipe is closed.
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.PipeStream
  name: TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
  type: Property
  source:
    remote: *o1
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 202
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets the pipe transmission mode supported by the current pipe.
  syntax:
    content: public virtual PipeTransmissionMode TransmissionMode { get; }
    content.vb: Public Overridable ReadOnly Property TransmissionMode As PipeTransmissionMode
    parameters: []
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: One of the <xref href="System.IO.Pipes.PipeTransmissionMode" data-throw-if-not-resolved="false"></xref> values that indicates the transmission mode supported by the current pipe.
  exceptions:
  - type: System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.InvalidOperationException
    description: The handle has not been set.-or-The pipe is waiting to connect in an anonymous client/server operation or with a named client.
  - type: System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  name: Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 270
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Releases the unmanaged resources used by the <xref href="System.IO.Pipes.PipeStream" data-throw-if-not-resolved="false"></xref> class and optionally releases the managed resources.
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
- uid: System.IO.Pipes.PipeStream.Flush
  id: Flush
  parent: System.IO.Pipes.PipeStream
  name: Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 260
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  exceptions:
  - type: System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    description: The pipe does not support write operations.
  - type: System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  name: Read(Byte[], Int32, Int32)
  name.vb: Read(Byte(), Int32, Int32)
  fullName: System.IO.Pipes.PipeStream.Read(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.IO.Pipes.PipeStream.Read(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 112
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Reads a block of bytes from a stream and writes the data to a specified buffer.
  syntax:
    content: public override int Read(byte[] buffer, int offset, int count)
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: When this method returns, contains the specified byte array with the values between *offset* and (*offset* + *count* - 1) replaced by the bytes read from the current source.
    - id: offset
      type: System.Int32
      description: The byte offset in the *buffer* array at which the bytes that are read will be placed.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to read.
    return:
      type: System.Int32
      description: The total number of bytes that are read into *buffer*. This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.
  exceptions:
  - type: System.ArgumentNullException
    description: '*buffer* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* is less than 0.-or-*count* is less than 0.'
  - type: System.ArgumentException
    description: '*count* is greater than the number of bytes available in *buffer*.'
  - type: System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    description: The pipe does not support read operations.
  - type: System.InvalidOperationException
    description: The pipe is disconnected, waiting to connect, or the handle has not been set.
  - type: System.IO.IOException
    description: Any I/O error occurred.
- uid: System.IO.Pipes.PipeStream.ReadByte
  id: ReadByte
  parent: System.IO.Pipes.PipeStream
  name: ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 241
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Reads a byte from a pipe.
  syntax:
    content: public override int ReadByte()
    content.vb: Public Overrides Function ReadByte As Integer
    return:
      type: System.Int32
      description: The byte, cast to <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>, or -1 indicates the end of the stream (the pipe has been closed).
  exceptions:
  - type: System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    description: The pipe does not support read operations.
  - type: System.InvalidOperationException
    description: The pipe is disconnected, waiting to connect, or the handle has not been set.
  - type: System.IO.IOException
    description: Any I/O error occurred.
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  name: Seek(Int64, SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(System.Int64, System.IO.SeekOrigin)
  type: Method
  source:
    remote:
      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
    startLine: 106
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Sets the current position of the current stream to the specified value.
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
    parameters:
    - id: offset
      type: System.Int64
      description: The point, relative to *origin*, to begin seeking from.
    - id: origin
      type: System.IO.SeekOrigin
      description: Specifies the beginning, the end, or the current position as a reference point for *offset*, using a value of type <xref href="System.IO.SeekOrigin" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Int64
      description: The new position in the stream.
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  name: SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 442
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Sets the length of the current stream to the specified value.
  syntax:
    content: public override void SetLength(long value)
    content.vb: Public Overrides Sub SetLength(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: The new length of the stream.
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  id: WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  name: WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 184
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Waits for the other end of the pipe to read all sent bytes.
  syntax:
    content: public void WaitForPipeDrain()
    content.vb: Public Sub WaitForPipeDrain
  exceptions:
  - type: System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    description: The pipe does not support write operations.
  - type: System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  name: Write(Byte[], Int32, Int32)
  name.vb: Write(Byte(), Int32, Int32)
  fullName: System.IO.Pipes.PipeStream.Write(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.IO.Pipes.PipeStream.Write(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 160
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Writes a block of bytes to the current stream using data from a buffer.
  syntax:
    content: public override void Write(byte[] buffer, int offset, int count)
    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer that contains data to write to the pipe.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in *buffer* at which to begin copying bytes to the current stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write to the current stream.
  exceptions:
  - type: System.ArgumentNullException
    description: '*buffer* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* is less than 0.-or-*count* is less than 0.'
  - type: System.ArgumentException
    description: '*count* is greater than the number of bytes available in *buffer*.'
  - type: System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    description: The pipe does not support write operations.
  - type: System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  name: WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 250
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Writes a byte to the current stream.
  syntax:
    content: public override void WriteByte(byte value)
    content.vb: Public Overrides Sub WriteByte(value As Byte)
    parameters:
    - id: value
      type: System.Byte
      description: The byte to write to the stream.
  exceptions:
  - type: System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    description: The pipe does not support write operations.
  - type: System.InvalidOperationException
    description: The pipe is disconnected, waiting to connect, or the handle has not been set.
  - type: System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
- uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  name: ReadAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, Threading.CancellationToken)
  fullName: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: System.IO.Pipes.PipeStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote: &o2
      path: src/System.IO.Pipes/ref/System.IO.Pipes.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.Pipes/ref/System.IO.Pipes.Manual.cs
    startLine: 17
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  syntax:
    content: public override Threading.Tasks.Task<int> ReadAsync(byte[] buffer, int offset, int count, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function ReadAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
- uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  name: WriteAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, Threading.CancellationToken)
  fullName: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: System.IO.Pipes.PipeStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o2
    path: src/System.IO.Pipes/ref/System.IO.Pipes.Manual.cs
    startLine: 18
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  syntax:
    content: public override Threading.Tasks.Task WriteAsync(byte[] buffer, int offset, int count, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function WriteAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
references:
- uid: System.IO.Pipes
  isExternal: false
  name: System.IO.Pipes
  fullName: System.IO.Pipes
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: false
  name: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Int32}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Int32>
  name.vb: Threading.Tasks.Task(Of Int32)
  fullName: System.Threading.Tasks.Task<System.Int32>
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task<>
  name.vb: Threading.Tasks.Task(Of )
  fullName: System.Threading.Tasks.Task<>
  fullName.vb: System.Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task
  fullName: System.Threading.Tasks.Task
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
