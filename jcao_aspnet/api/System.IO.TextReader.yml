items:
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  id: TextReader
  parent: System.IO
  children:
  - System.IO.TextReader.#ctor
  - System.IO.TextReader.Dispose
  - System.IO.TextReader.Dispose(System.Boolean)
  - System.IO.TextReader.Null
  - System.IO.TextReader.Peek
  - System.IO.TextReader.Read
  - System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadLine
  - System.IO.TextReader.ReadLineAsync
  - System.IO.TextReader.ReadToEnd
  - System.IO.TextReader.ReadToEndAsync
  langs:
  - csharp
  - vb
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
  type: Class
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TextReader
    path: src/System.IO/ref/System.IO.cs
    startLine: 270
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: 'public abstract class TextReader : IDisposable'
    content.vb: >-
      Public MustInherit Class TextReader
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.IO.TextReader.Null
  commentId: F:System.IO.TextReader.Null
  id: Null
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: Null
  nameWithType: TextReader.Null
  fullName: System.IO.TextReader.Null
  type: Field
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Null
    path: src/System.IO/ref/System.IO.cs
    startLine: 272
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: public static readonly TextReader Null
    content.vb: Public Shared ReadOnly Null As TextReader
    return:
      type: System.IO.TextReader
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IO.TextReader.#ctor
  commentId: M:System.IO.TextReader.#ctor
  id: '#ctor'
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: TextReader()
  nameWithType: TextReader.TextReader()
  fullName: System.IO.TextReader.TextReader()
  type: Constructor
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO/ref/System.IO.cs
    startLine: 273
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: protected TextReader()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.IO.TextReader.Dispose
  commentId: M:System.IO.TextReader.Dispose
  id: Dispose
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TextReader.Dispose()
  fullName: System.IO.TextReader.Dispose()
  type: Method
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO/ref/System.IO.cs
    startLine: 274
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.TextReader.Dispose(System.Boolean)
  commentId: M:System.IO.TextReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: TextReader.Dispose(Boolean)
  fullName: System.IO.TextReader.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO/ref/System.IO.cs
    startLine: 275
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.IO.TextReader.Peek
  commentId: M:System.IO.TextReader.Peek
  id: Peek
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: TextReader.Peek()
  fullName: System.IO.TextReader.Peek()
  type: Method
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Peek
    path: src/System.IO/ref/System.IO.cs
    startLine: 276
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: public virtual int Peek()
    content.vb: Public Overridable Function Peek As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.TextReader.Read
  commentId: M:System.IO.TextReader.Read
  id: Read
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: TextReader.Read()
  fullName: System.IO.TextReader.Read()
  type: Method
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.IO/ref/System.IO.cs
    startLine: 277
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: public virtual int Read()
    content.vb: Public Overridable Function Read As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  id: Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: Read(Char[], Int32, Int32)
  nameWithType: TextReader.Read(Char[], Int32, Int32)
  fullName: System.IO.TextReader.Read(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.IO/ref/System.IO.cs
    startLine: 278
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: public virtual int Read(char[] buffer, int index, int count)
    content.vb: Public Overridable Function Read(buffer As Char(), index As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Char[]
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
  nameWithType.vb: TextReader.Read(Char(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.TextReader.Read(System.Char(), System.Int32, System.Int32)
  name.vb: Read(Char(), Int32, Int32)
- uid: System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  id: ReadAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: ReadAsync(Char[], Int32, Int32)
  nameWithType: TextReader.ReadAsync(Char[], Int32, Int32)
  fullName: System.IO.TextReader.ReadAsync(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadAsync
    path: src/System.IO/ref/System.IO.cs
    startLine: 279
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: public virtual Threading.Tasks.Task<int> ReadAsync(char[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadAsync(buffer As Char(), index As Integer, count As Integer) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Char[]
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  nameWithType.vb: TextReader.ReadAsync(Char(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.TextReader.ReadAsync(System.Char(), System.Int32, System.Int32)
  name.vb: ReadAsync(Char(), Int32, Int32)
- uid: System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  id: ReadBlock(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: ReadBlock(Char[], Int32, Int32)
  nameWithType: TextReader.ReadBlock(Char[], Int32, Int32)
  fullName: System.IO.TextReader.ReadBlock(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadBlock
    path: src/System.IO/ref/System.IO.cs
    startLine: 280
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: public virtual int ReadBlock(char[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadBlock(buffer As Char(), index As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Char[]
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
  nameWithType.vb: TextReader.ReadBlock(Char(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.TextReader.ReadBlock(System.Char(), System.Int32, System.Int32)
  name.vb: ReadBlock(Char(), Int32, Int32)
- uid: System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  id: ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: ReadBlockAsync(Char[], Int32, Int32)
  nameWithType: TextReader.ReadBlockAsync(Char[], Int32, Int32)
  fullName: System.IO.TextReader.ReadBlockAsync(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadBlockAsync
    path: src/System.IO/ref/System.IO.cs
    startLine: 281
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: public virtual Threading.Tasks.Task<int> ReadBlockAsync(char[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadBlockAsync(buffer As Char(), index As Integer, count As Integer) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Char[]
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  nameWithType.vb: TextReader.ReadBlockAsync(Char(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.TextReader.ReadBlockAsync(System.Char(), System.Int32, System.Int32)
  name.vb: ReadBlockAsync(Char(), Int32, Int32)
- uid: System.IO.TextReader.ReadLine
  commentId: M:System.IO.TextReader.ReadLine
  id: ReadLine
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: ReadLine()
  nameWithType: TextReader.ReadLine()
  fullName: System.IO.TextReader.ReadLine()
  type: Method
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadLine
    path: src/System.IO/ref/System.IO.cs
    startLine: 282
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: public virtual string ReadLine()
    content.vb: Public Overridable Function ReadLine As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.TextReader.ReadLineAsync
  commentId: M:System.IO.TextReader.ReadLineAsync
  id: ReadLineAsync
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: ReadLineAsync()
  nameWithType: TextReader.ReadLineAsync()
  fullName: System.IO.TextReader.ReadLineAsync()
  type: Method
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadLineAsync
    path: src/System.IO/ref/System.IO.cs
    startLine: 283
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: public virtual Threading.Tasks.Task<string> ReadLineAsync()
    content.vb: Public Overridable Function ReadLineAsync As Threading.Tasks.Task(Of String)
    return:
      type: System.Threading.Tasks.Task{System.String}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.TextReader.ReadToEnd
  commentId: M:System.IO.TextReader.ReadToEnd
  id: ReadToEnd
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: ReadToEnd()
  nameWithType: TextReader.ReadToEnd()
  fullName: System.IO.TextReader.ReadToEnd()
  type: Method
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadToEnd
    path: src/System.IO/ref/System.IO.cs
    startLine: 284
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: public virtual string ReadToEnd()
    content.vb: Public Overridable Function ReadToEnd As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.TextReader.ReadToEndAsync
  commentId: M:System.IO.TextReader.ReadToEndAsync
  id: ReadToEndAsync
  parent: System.IO.TextReader
  langs:
  - csharp
  - vb
  name: ReadToEndAsync()
  nameWithType: TextReader.ReadToEndAsync()
  fullName: System.IO.TextReader.ReadToEndAsync()
  type: Method
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadToEndAsync
    path: src/System.IO/ref/System.IO.cs
    startLine: 285
  assemblies:
  - System.IO
  namespace: System.IO
  syntax:
    content: public virtual Threading.Tasks.Task<string> ReadToEndAsync()
    content.vb: Public Overridable Function ReadToEndAsync As Threading.Tasks.Task(Of String)
    return:
      type: System.Threading.Tasks.Task{System.String}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: IO.TextReader
  nameWithType: IO.TextReader
  fullName: System.IO.TextReader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Char[]
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Int32>
  nameWithType: Threading.Tasks.Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Threading.Tasks.Task(Of Int32)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Threading.Tasks.Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: false
  name: Threading.Tasks.Task<>
  nameWithType: Threading.Tasks.Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Threading.Tasks.Task(Of )
  fullname.vb: System.Threading.Tasks.Task(Of )
  name.vb: Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<String>
  nameWithType: Threading.Tasks.Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Threading.Tasks.Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Threading.Tasks.Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
