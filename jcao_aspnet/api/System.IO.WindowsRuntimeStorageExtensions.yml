items:
- uid: System.IO.WindowsRuntimeStorageExtensions
  commentId: T:System.IO.WindowsRuntimeStorageExtensions
  id: WindowsRuntimeStorageExtensions
  parent: System.IO
  children:
  - System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)
  - System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)
  - System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)
  - System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)
  langs:
  - csharp
  - vb
  name: WindowsRuntimeStorageExtensions
  nameWithType: WindowsRuntimeStorageExtensions
  fullName: System.IO.WindowsRuntimeStorageExtensions
  type: Class
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WindowsRuntimeStorageExtensions
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 40
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.IO
  syntax:
    content: 'public class WindowsRuntimeStorageExtensions : object'
    content.vb: >-
      Public Class WindowsRuntimeStorageExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)
  commentId: M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)
  id: OpenStreamForReadAsync(Windows.Storage.IStorageFile)
  isExtensionMethod: true
  parent: System.IO.WindowsRuntimeStorageExtensions
  langs:
  - csharp
  - vb
  name: OpenStreamForReadAsync(Storage.IStorageFile)
  nameWithType: WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Storage.IStorageFile)
  fullName: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenStreamForReadAsync
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 43
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.IO
  syntax:
    content: public static Threading.Tasks.Task<Stream> OpenStreamForReadAsync(this Storage.IStorageFile windowsRuntimeFile)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OpenStreamForReadAsync(windowsRuntimeFile As Storage.IStorageFile) As Threading.Tasks.Task(Of Stream)
    parameters:
    - id: windowsRuntimeFile
      type: Windows.Storage.IStorageFile
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)
  commentId: M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)
  id: OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)
  isExtensionMethod: true
  parent: System.IO.WindowsRuntimeStorageExtensions
  langs:
  - csharp
  - vb
  name: OpenStreamForReadAsync(Storage.IStorageFolder, String)
  nameWithType: WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Storage.IStorageFolder, String)
  fullName: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenStreamForReadAsync
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 45
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.IO
  syntax:
    content: public static Threading.Tasks.Task<Stream> OpenStreamForReadAsync(this Storage.IStorageFolder rootDirectory, string relativePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OpenStreamForReadAsync(rootDirectory As Storage.IStorageFolder, relativePath As String) As Threading.Tasks.Task(Of Stream)
    parameters:
    - id: rootDirectory
      type: Windows.Storage.IStorageFolder
    - id: relativePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)
  commentId: M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)
  id: OpenStreamForWriteAsync(Windows.Storage.IStorageFile)
  isExtensionMethod: true
  parent: System.IO.WindowsRuntimeStorageExtensions
  langs:
  - csharp
  - vb
  name: OpenStreamForWriteAsync(Storage.IStorageFile)
  nameWithType: WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Storage.IStorageFile)
  fullName: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenStreamForWriteAsync
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 47
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.IO
  syntax:
    content: public static Threading.Tasks.Task<Stream> OpenStreamForWriteAsync(this Storage.IStorageFile windowsRuntimeFile)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OpenStreamForWriteAsync(windowsRuntimeFile As Storage.IStorageFile) As Threading.Tasks.Task(Of Stream)
    parameters:
    - id: windowsRuntimeFile
      type: Windows.Storage.IStorageFile
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)
  commentId: M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)
  id: OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)
  isExtensionMethod: true
  parent: System.IO.WindowsRuntimeStorageExtensions
  langs:
  - csharp
  - vb
  name: OpenStreamForWriteAsync(Storage.IStorageFolder, String, Storage.CreationCollisionOption)
  nameWithType: WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Storage.IStorageFolder, String, Storage.CreationCollisionOption)
  fullName: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder, System.String, Windows.Storage.CreationCollisionOption)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenStreamForWriteAsync
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 49
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.IO
  syntax:
    content: public static Threading.Tasks.Task<Stream> OpenStreamForWriteAsync(this Storage.IStorageFolder rootDirectory, string relativePath, Storage.CreationCollisionOption creationCollisionOption)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OpenStreamForWriteAsync(rootDirectory As Storage.IStorageFolder, relativePath As String, creationCollisionOption As Storage.CreationCollisionOption) As Threading.Tasks.Task(Of Stream)
    parameters:
    - id: rootDirectory
      type: Windows.Storage.IStorageFolder
    - id: relativePath
      type: System.String
    - id: creationCollisionOption
      type: Windows.Storage.CreationCollisionOption
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Windows.Storage.IStorageFile
  isExternal: true
  name: Storage.IStorageFile
  nameWithType: Storage.IStorageFile
  fullName: Windows.Storage.IStorageFile
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: '!:System.Threading.Tasks.Task{System.IO.Stream}'
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<IO.Stream>
  nameWithType: Threading.Tasks.Task<IO.Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Threading.Tasks.Task(Of IO.Stream)
  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Threading.Tasks.Task(Of IO.Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: IO.Stream
    nameWithType: IO.Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: IO.Stream
    nameWithType: IO.Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: false
  name: Threading.Tasks.Task<>
  nameWithType: Threading.Tasks.Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Threading.Tasks.Task(Of )
  fullname.vb: System.Threading.Tasks.Task(Of )
  name.vb: Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Storage.IStorageFolder
  isExternal: true
  name: Storage.IStorageFolder
  nameWithType: Storage.IStorageFolder
  fullName: Windows.Storage.IStorageFolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Windows.Storage.CreationCollisionOption
  commentId: '!:Windows.Storage.CreationCollisionOption'
  isExternal: true
  name: Storage.CreationCollisionOption
  nameWithType: Storage.CreationCollisionOption
  fullName: Windows.Storage.CreationCollisionOption
