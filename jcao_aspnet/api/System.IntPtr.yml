items:
- uid: System.IntPtr
  commentId: T:System.IntPtr
  id: IntPtr
  parent: System
  children:
  - System.IntPtr.#ctor(System.Int32)
  - System.IntPtr.#ctor(System.Int64)
  - System.IntPtr.#ctor(System.Void*)
  - System.IntPtr.Add(System.IntPtr,System.Int32)
  - System.IntPtr.Equals(System.Object)
  - System.IntPtr.GetHashCode
  - System.IntPtr.op_Addition(System.IntPtr,System.Int32)
  - System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)
  - System.IntPtr.op_Explicit(System.Int32)~System.IntPtr
  - System.IntPtr.op_Explicit(System.Int64)~System.IntPtr
  - System.IntPtr.op_Explicit(System.IntPtr)~System.Int32
  - System.IntPtr.op_Explicit(System.IntPtr)~System.Int64
  - System.IntPtr.op_Explicit(System.IntPtr)~System.Void*
  - System.IntPtr.op_Explicit(System.Void*)~System.IntPtr
  - System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)
  - System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)
  - System.IntPtr.Size
  - System.IntPtr.Subtract(System.IntPtr,System.Int32)
  - System.IntPtr.ToInt32
  - System.IntPtr.ToInt64
  - System.IntPtr.ToPointer
  - System.IntPtr.ToString
  - System.IntPtr.ToString(System.String)
  - System.IntPtr.Zero
  langs:
  - csharp
  - vb
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
  type: Struct
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IntPtr
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1128
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct IntPtr
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure IntPtr
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.IntPtr.Zero
  commentId: F:System.IntPtr.Zero
  id: Zero
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: IntPtr.Zero
  fullName: System.IntPtr.Zero
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Zero
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1131
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static readonly IntPtr Zero
    content.vb: Public Shared ReadOnly Zero As IntPtr
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IntPtr.#ctor(System.Int32)
  commentId: M:System.IntPtr.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: IntPtr(Int32)
  nameWithType: IntPtr.IntPtr(Int32)
  fullName: System.IntPtr.IntPtr(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1132
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public IntPtr(int value)
    content.vb: Public Sub New(value As Integer)
    parameters:
    - id: value
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IntPtr.#ctor(System.Int64)
  commentId: M:System.IntPtr.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: IntPtr(Int64)
  nameWithType: IntPtr.IntPtr(Int64)
  fullName: System.IntPtr.IntPtr(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1133
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public IntPtr(long value)
    content.vb: Public Sub New(value As Long)
    parameters:
    - id: value
      type: System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IntPtr.#ctor(System.Void*)
  commentId: M:System.IntPtr.#ctor(System.Void*)
  id: '#ctor(System.Void*)'
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: IntPtr(Void*)
  nameWithType: IntPtr.IntPtr(Void*)
  fullName: System.IntPtr.IntPtr(System.Void*)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1134
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [CLSCompliant(false)]

      [SecurityCritical]

      public IntPtr(void *value)
    content.vb: >-
      <CLSCompliant(False)>

      <SecurityCritical>

      Public Sub New(value As  *)
    parameters:
    - id: value
      type: System.Void*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IntPtr.Size
  commentId: P:System.IntPtr.Size
  id: Size
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: IntPtr.Size
  fullName: System.IntPtr.Size
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Size
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1137
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static int Size { get; }
    content.vb: Public Shared ReadOnly Property Size As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IntPtr.Add(System.IntPtr,System.Int32)
  commentId: M:System.IntPtr.Add(System.IntPtr,System.Int32)
  id: Add(System.IntPtr,System.Int32)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Add(IntPtr, Int32)
  nameWithType: IntPtr.Add(IntPtr, Int32)
  fullName: System.IntPtr.Add(System.IntPtr, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1138
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static IntPtr Add(IntPtr pointer, int offset)
    content.vb: Public Shared Function Add(pointer As IntPtr, offset As Integer) As IntPtr
    parameters:
    - id: pointer
      type: System.IntPtr
    - id: offset
      type: System.Int32
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IntPtr.Equals(System.Object)
  commentId: M:System.IntPtr.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: IntPtr.Equals(Object)
  fullName: System.IntPtr.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1139
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IntPtr.GetHashCode
  commentId: M:System.IntPtr.GetHashCode
  id: GetHashCode
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: IntPtr.GetHashCode()
  fullName: System.IntPtr.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1140
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IntPtr.op_Addition(System.IntPtr,System.Int32)
  commentId: M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)
  id: op_Addition(System.IntPtr,System.Int32)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Addition(IntPtr, Int32)
  nameWithType: IntPtr.Addition(IntPtr, Int32)
  fullName: System.IntPtr.Addition(System.IntPtr, System.Int32)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1141
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static IntPtr operator +(IntPtr pointer, int offset)
    content.vb: Public Shared Operator +(pointer As IntPtr, offset As Integer) As IntPtr
    parameters:
    - id: pointer
      type: System.IntPtr
    - id: offset
      type: System.Int32
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)
  commentId: M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)
  id: op_Equality(System.IntPtr,System.IntPtr)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Equality(IntPtr, IntPtr)
  nameWithType: IntPtr.Equality(IntPtr, IntPtr)
  fullName: System.IntPtr.Equality(System.IntPtr, System.IntPtr)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1142
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool operator ==(IntPtr value1, IntPtr value2)
    content.vb: Public Shared Operator =(value1 As IntPtr, value2 As IntPtr) As Boolean
    parameters:
    - id: value1
      type: System.IntPtr
    - id: value2
      type: System.IntPtr
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IntPtr.op_Explicit(System.Int32)~System.IntPtr
  commentId: M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr
  id: op_Explicit(System.Int32)~System.IntPtr
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Explicit(Int32 to IntPtr)
  nameWithType: IntPtr.Explicit(Int32 to IntPtr)
  fullName: System.IntPtr.Explicit(System.Int32 to System.IntPtr)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1143
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static explicit operator IntPtr(int value)
    content.vb: Public Shared Narrowing Operator CType(value As Integer) As IntPtr
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.IntPtr
  nameWithType.vb: IntPtr.Narrowing(Int32 to IntPtr)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IntPtr.Narrowing(System.Int32 to System.IntPtr)
  name.vb: Narrowing(Int32 to IntPtr)
- uid: System.IntPtr.op_Explicit(System.Int64)~System.IntPtr
  commentId: M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr
  id: op_Explicit(System.Int64)~System.IntPtr
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Explicit(Int64 to IntPtr)
  nameWithType: IntPtr.Explicit(Int64 to IntPtr)
  fullName: System.IntPtr.Explicit(System.Int64 to System.IntPtr)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1144
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static explicit operator IntPtr(long value)
    content.vb: Public Shared Narrowing Operator CType(value As Long) As IntPtr
    parameters:
    - id: value
      type: System.Int64
    return:
      type: System.IntPtr
  nameWithType.vb: IntPtr.Narrowing(Int64 to IntPtr)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IntPtr.Narrowing(System.Int64 to System.IntPtr)
  name.vb: Narrowing(Int64 to IntPtr)
- uid: System.IntPtr.op_Explicit(System.IntPtr)~System.Int32
  commentId: M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32
  id: op_Explicit(System.IntPtr)~System.Int32
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Explicit(IntPtr to Int32)
  nameWithType: IntPtr.Explicit(IntPtr to Int32)
  fullName: System.IntPtr.Explicit(System.IntPtr to System.Int32)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1145
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static explicit operator int (IntPtr value)
    content.vb: Public Shared Narrowing Operator CType(value As IntPtr) As Integer
    parameters:
    - id: value
      type: System.IntPtr
    return:
      type: System.Int32
  nameWithType.vb: IntPtr.Narrowing(IntPtr to Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IntPtr.Narrowing(System.IntPtr to System.Int32)
  name.vb: Narrowing(IntPtr to Int32)
- uid: System.IntPtr.op_Explicit(System.IntPtr)~System.Int64
  commentId: M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64
  id: op_Explicit(System.IntPtr)~System.Int64
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Explicit(IntPtr to Int64)
  nameWithType: IntPtr.Explicit(IntPtr to Int64)
  fullName: System.IntPtr.Explicit(System.IntPtr to System.Int64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1146
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static explicit operator long (IntPtr value)
    content.vb: Public Shared Narrowing Operator CType(value As IntPtr) As Long
    parameters:
    - id: value
      type: System.IntPtr
    return:
      type: System.Int64
  nameWithType.vb: IntPtr.Narrowing(IntPtr to Int64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IntPtr.Narrowing(System.IntPtr to System.Int64)
  name.vb: Narrowing(IntPtr to Int64)
- uid: System.IntPtr.op_Explicit(System.IntPtr)~System.Void*
  commentId: M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*
  id: op_Explicit(System.IntPtr)~System.Void*
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Explicit(IntPtr to Void*)
  nameWithType: IntPtr.Explicit(IntPtr to Void*)
  fullName: System.IntPtr.Explicit(System.IntPtr to System.Void*)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1147
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator void *(IntPtr value)
    content.vb: "<CLSCompliant(False)>\nPublic Shared Narrowing Operator CType(value As IntPtr) As "
    parameters:
    - id: value
      type: System.IntPtr
    return:
      type: System.Void*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: IntPtr.Narrowing(IntPtr to Void*)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IntPtr.Narrowing(System.IntPtr to System.Void*)
  name.vb: Narrowing(IntPtr to Void*)
- uid: System.IntPtr.op_Explicit(System.Void*)~System.IntPtr
  commentId: M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr
  id: op_Explicit(System.Void*)~System.IntPtr
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Explicit(Void* to IntPtr)
  nameWithType: IntPtr.Explicit(Void* to IntPtr)
  fullName: System.IntPtr.Explicit(System.Void* to System.IntPtr)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1149
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [CLSCompliant(false)]

      [SecurityCritical]

      public static explicit operator IntPtr(void *value)
    content.vb: >-
      <CLSCompliant(False)>

      <SecurityCritical>

      Public Shared Narrowing Operator CType(value As  *) As IntPtr
    parameters:
    - id: value
      type: System.Void*
    return:
      type: System.IntPtr
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  nameWithType.vb: IntPtr.Narrowing(Void* to IntPtr)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IntPtr.Narrowing(System.Void* to System.IntPtr)
  name.vb: Narrowing(Void* to IntPtr)
- uid: System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)
  commentId: M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)
  id: op_Inequality(System.IntPtr,System.IntPtr)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Inequality(IntPtr, IntPtr)
  nameWithType: IntPtr.Inequality(IntPtr, IntPtr)
  fullName: System.IntPtr.Inequality(System.IntPtr, System.IntPtr)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1152
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool operator !=(IntPtr value1, IntPtr value2)
    content.vb: Public Shared Operator <>(value1 As IntPtr, value2 As IntPtr) As Boolean
    parameters:
    - id: value1
      type: System.IntPtr
    - id: value2
      type: System.IntPtr
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)
  commentId: M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)
  id: op_Subtraction(System.IntPtr,System.Int32)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Subtraction(IntPtr, Int32)
  nameWithType: IntPtr.Subtraction(IntPtr, Int32)
  fullName: System.IntPtr.Subtraction(System.IntPtr, System.Int32)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1153
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static IntPtr operator -(IntPtr pointer, int offset)
    content.vb: Public Shared Operator -(pointer As IntPtr, offset As Integer) As IntPtr
    parameters:
    - id: pointer
      type: System.IntPtr
    - id: offset
      type: System.Int32
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IntPtr.Subtract(System.IntPtr,System.Int32)
  commentId: M:System.IntPtr.Subtract(System.IntPtr,System.Int32)
  id: Subtract(System.IntPtr,System.Int32)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Subtract(IntPtr, Int32)
  nameWithType: IntPtr.Subtract(IntPtr, Int32)
  fullName: System.IntPtr.Subtract(System.IntPtr, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1154
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static IntPtr Subtract(IntPtr pointer, int offset)
    content.vb: Public Shared Function Subtract(pointer As IntPtr, offset As Integer) As IntPtr
    parameters:
    - id: pointer
      type: System.IntPtr
    - id: offset
      type: System.Int32
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IntPtr.ToInt32
  commentId: M:System.IntPtr.ToInt32
  id: ToInt32
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: ToInt32()
  nameWithType: IntPtr.ToInt32()
  fullName: System.IntPtr.ToInt32()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToInt32
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1155
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public int ToInt32()
    content.vb: Public Function ToInt32 As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IntPtr.ToInt64
  commentId: M:System.IntPtr.ToInt64
  id: ToInt64
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: ToInt64()
  nameWithType: IntPtr.ToInt64()
  fullName: System.IntPtr.ToInt64()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToInt64
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1156
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public long ToInt64()
    content.vb: Public Function ToInt64 As Long
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IntPtr.ToPointer
  commentId: M:System.IntPtr.ToPointer
  id: ToPointer
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: ToPointer()
  nameWithType: IntPtr.ToPointer()
  fullName: System.IntPtr.ToPointer()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToPointer
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1157
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [CLSCompliant(false)]

      public void *ToPointer()
    content.vb: "<CLSCompliant(False)>\nPublic Function ToPointer As "
    return:
      type: System.Void*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IntPtr.ToString
  commentId: M:System.IntPtr.ToString
  id: ToString
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IntPtr.ToString()
  fullName: System.IntPtr.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1159
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IntPtr.ToString(System.String)
  commentId: M:System.IntPtr.ToString(System.String)
  id: ToString(System.String)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: IntPtr.ToString(String)
  fullName: System.IntPtr.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1160
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Void*
  name: Void*
  nameWithType: Void*
  fullName: System.Void*
  spec.csharp:
  - uid: System.Void
    name: Void
    nameWithType: Void
    fullName: System.Void
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Void
    name: Void
    nameWithType: Void
    fullName: System.Void
  - name: '*'
    nameWithType: '*'
    fullName: '*'
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
