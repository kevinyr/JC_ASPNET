items:
- uid: System.Linq.Expressions.ElementInit
  id: ElementInit
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.ElementInit.AddMethod
  - System.Linq.Expressions.ElementInit.Arguments
  - System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#ArgumentCount
  - System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)
  - System.Linq.Expressions.ElementInit.ToString
  - System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  name: ElementInit
  fullName: System.Linq.Expressions.ElementInit
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
    startLine: 16
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Represents an initializer for a single element of an <xref href="System.Collections.IEnumerable" data-throw-if-not-resolved="false"></xref> collection.
  syntax:
    content: 'public sealed class ElementInit : object, IArgumentProvider'
    content.vb: Public NotInheritable Class ElementInit Inherits Object Implements IArgumentProvider
  inheritance:
  - System.Object
  implements:
  - System.Linq.Expressions.IArgumentProvider
- uid: System.Linq.Expressions.ElementInit.AddMethod
  id: AddMethod
  parent: System.Linq.Expressions.ElementInit
  name: AddMethod
  fullName: System.Linq.Expressions.ElementInit.AddMethod
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
    startLine: 29
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Gets the instance method that is used to add an element to an <xref href="System.Collections.IEnumerable" data-throw-if-not-resolved="false"></xref> collection.
  syntax:
    content: public Reflection.MethodInfo AddMethod { get; }
    content.vb: Public ReadOnly Property AddMethod As Reflection.MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: A <xref href="System.Reflection.MethodInfo" data-throw-if-not-resolved="false"></xref> that represents an instance method that adds an element to a collection.
- uid: System.Linq.Expressions.ElementInit.Arguments
  id: Arguments
  parent: System.Linq.Expressions.ElementInit
  name: Arguments
  fullName: System.Linq.Expressions.ElementInit.Arguments
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
    startLine: 37
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Gets the collection of arguments that are passed to a method that adds an element to an <xref href="System.Collections.IEnumerable" data-throw-if-not-resolved="false"></xref> collection.
  syntax:
    content: public Collections.ObjectModel.ReadOnlyCollection<Expression> Arguments { get; }
    content.vb: Public ReadOnly Property Arguments As Collections.ObjectModel.ReadOnlyCollection(Of Expression)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
      description: A <xref href="System.Collections.ObjectModel.ReadOnlyCollection`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Linq.Expressions.Expression" data-throw-if-not-resolved="false"></xref> objects that represent the arguments for a method that adds an element to a collection.
- uid: System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#ArgumentCount
  id: System#Linq#Expressions#IArgumentProvider#ArgumentCount
  parent: System.Linq.Expressions.ElementInit
  name: IArgumentProvider.ArgumentCount
  name.vb: System.Linq.Expressions.IArgumentProvider.ArgumentCount
  fullName: System.Linq.Expressions.ElementInit.System.Linq.Expressions.IArgumentProvider.ArgumentCount
  type: Property
  source:
    remote: &o1
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 111
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Returns the number of arguments to the expression tree node.  You should not use this member.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.
  syntax:
    content: int IArgumentProvider.ArgumentCount { get; }
    content.vb: ReadOnly WriteOnly Property System.Linq.Expressions.IArgumentProvider.ArgumentCount As Integer Implements IArgumentProvider.ArgumentCount
    parameters: []
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
- uid: System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)
  id: System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)
  parent: System.Linq.Expressions.ElementInit
  name: IArgumentProvider.GetArgument(Int32)
  name.vb: System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)
  fullName: System.Linq.Expressions.ElementInit.System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 112
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Returns the argument at index, throwing if index is out of bounds.  You should not use this member.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.
  syntax:
    content: Expression IArgumentProvider.GetArgument(int index)
    content.vb: Function System.Linq.Expressions.IArgumentProvider.GetArgument(index As Integer) As Expression Implements IArgumentProvider.GetArgument
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Linq.Expressions.Expression
      description: Returns <xref href="System.Linq.Expressions.Expression" data-throw-if-not-resolved="false"></xref>.
- uid: System.Linq.Expressions.ElementInit.ToString
  id: ToString
  parent: System.Linq.Expressions.ElementInit
  name: ToString()
  fullName: System.Linq.Expressions.ElementInit.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
    startLine: 59
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Returns a textual representation of an <xref href="System.Linq.Expressions.ElementInit" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A textual representation of the <xref href="System.Linq.Expressions.ElementInit" data-throw-if-not-resolved="false"></xref> object.
- uid: System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.ElementInit
  name: Update(Collections.Generic.IEnumerable<Expression>)
  name.vb: Update(Collections.Generic.IEnumerable(Of Expression))
  fullName: System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullName.vb: System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 114
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.
  syntax:
    content: public ElementInit Update(Collections.Generic.IEnumerable<Expression> arguments)
    content.vb: Public Function Update(arguments As Collections.Generic.IEnumerable(Of Expression)) As ElementInit
    parameters:
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: The <xref href="System.Linq.Expressions.ElementInit.Arguments" data-throw-if-not-resolved="false"></xref> property of the result.
    return:
      type: System.Linq.Expressions.ElementInit
      description: This expression if no children are changed or an expression with the updated children.
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Linq.Expressions.IArgumentProvider
  parent: System.Linq.Expressions
  isExternal: false
  name: IArgumentProvider
  fullName: System.Linq.Expressions.IArgumentProvider
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: Collections.ObjectModel.ReadOnlyCollection<Expression>
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of Expression)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: false
  name: Collections.ObjectModel.ReadOnlyCollection<>
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<Expression>
  name.vb: Collections.Generic.IEnumerable(Of Expression)
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.ElementInit
  parent: System.Linq.Expressions
  isExternal: false
  name: ElementInit
  fullName: System.Linq.Expressions.ElementInit
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  name.vb: Collections.Generic.IEnumerable(Of )
  fullName: System.Collections.Generic.IEnumerable<>
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
