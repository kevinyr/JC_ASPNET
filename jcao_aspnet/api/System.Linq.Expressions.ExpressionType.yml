items:
- uid: System.Linq.Expressions.ExpressionType
  id: ExpressionType
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.ExpressionType.Add
  - System.Linq.Expressions.ExpressionType.AddAssign
  - System.Linq.Expressions.ExpressionType.AddAssignChecked
  - System.Linq.Expressions.ExpressionType.AddChecked
  - System.Linq.Expressions.ExpressionType.And
  - System.Linq.Expressions.ExpressionType.AndAlso
  - System.Linq.Expressions.ExpressionType.AndAssign
  - System.Linq.Expressions.ExpressionType.ArrayIndex
  - System.Linq.Expressions.ExpressionType.ArrayLength
  - System.Linq.Expressions.ExpressionType.Assign
  - System.Linq.Expressions.ExpressionType.Block
  - System.Linq.Expressions.ExpressionType.Call
  - System.Linq.Expressions.ExpressionType.Coalesce
  - System.Linq.Expressions.ExpressionType.Conditional
  - System.Linq.Expressions.ExpressionType.Constant
  - System.Linq.Expressions.ExpressionType.Convert
  - System.Linq.Expressions.ExpressionType.ConvertChecked
  - System.Linq.Expressions.ExpressionType.DebugInfo
  - System.Linq.Expressions.ExpressionType.Decrement
  - System.Linq.Expressions.ExpressionType.Default
  - System.Linq.Expressions.ExpressionType.Divide
  - System.Linq.Expressions.ExpressionType.DivideAssign
  - System.Linq.Expressions.ExpressionType.Dynamic
  - System.Linq.Expressions.ExpressionType.Equal
  - System.Linq.Expressions.ExpressionType.ExclusiveOr
  - System.Linq.Expressions.ExpressionType.ExclusiveOrAssign
  - System.Linq.Expressions.ExpressionType.Extension
  - System.Linq.Expressions.ExpressionType.Goto
  - System.Linq.Expressions.ExpressionType.GreaterThan
  - System.Linq.Expressions.ExpressionType.GreaterThanOrEqual
  - System.Linq.Expressions.ExpressionType.Increment
  - System.Linq.Expressions.ExpressionType.Index
  - System.Linq.Expressions.ExpressionType.Invoke
  - System.Linq.Expressions.ExpressionType.IsFalse
  - System.Linq.Expressions.ExpressionType.IsTrue
  - System.Linq.Expressions.ExpressionType.Label
  - System.Linq.Expressions.ExpressionType.Lambda
  - System.Linq.Expressions.ExpressionType.LeftShift
  - System.Linq.Expressions.ExpressionType.LeftShiftAssign
  - System.Linq.Expressions.ExpressionType.LessThan
  - System.Linq.Expressions.ExpressionType.LessThanOrEqual
  - System.Linq.Expressions.ExpressionType.ListInit
  - System.Linq.Expressions.ExpressionType.Loop
  - System.Linq.Expressions.ExpressionType.MemberAccess
  - System.Linq.Expressions.ExpressionType.MemberInit
  - System.Linq.Expressions.ExpressionType.Modulo
  - System.Linq.Expressions.ExpressionType.ModuloAssign
  - System.Linq.Expressions.ExpressionType.Multiply
  - System.Linq.Expressions.ExpressionType.MultiplyAssign
  - System.Linq.Expressions.ExpressionType.MultiplyAssignChecked
  - System.Linq.Expressions.ExpressionType.MultiplyChecked
  - System.Linq.Expressions.ExpressionType.Negate
  - System.Linq.Expressions.ExpressionType.NegateChecked
  - System.Linq.Expressions.ExpressionType.New
  - System.Linq.Expressions.ExpressionType.NewArrayBounds
  - System.Linq.Expressions.ExpressionType.NewArrayInit
  - System.Linq.Expressions.ExpressionType.Not
  - System.Linq.Expressions.ExpressionType.NotEqual
  - System.Linq.Expressions.ExpressionType.OnesComplement
  - System.Linq.Expressions.ExpressionType.Or
  - System.Linq.Expressions.ExpressionType.OrAssign
  - System.Linq.Expressions.ExpressionType.OrElse
  - System.Linq.Expressions.ExpressionType.Parameter
  - System.Linq.Expressions.ExpressionType.PostDecrementAssign
  - System.Linq.Expressions.ExpressionType.PostIncrementAssign
  - System.Linq.Expressions.ExpressionType.Power
  - System.Linq.Expressions.ExpressionType.PowerAssign
  - System.Linq.Expressions.ExpressionType.PreDecrementAssign
  - System.Linq.Expressions.ExpressionType.PreIncrementAssign
  - System.Linq.Expressions.ExpressionType.Quote
  - System.Linq.Expressions.ExpressionType.RightShift
  - System.Linq.Expressions.ExpressionType.RightShiftAssign
  - System.Linq.Expressions.ExpressionType.RuntimeVariables
  - System.Linq.Expressions.ExpressionType.Subtract
  - System.Linq.Expressions.ExpressionType.SubtractAssign
  - System.Linq.Expressions.ExpressionType.SubtractAssignChecked
  - System.Linq.Expressions.ExpressionType.SubtractChecked
  - System.Linq.Expressions.ExpressionType.Switch
  - System.Linq.Expressions.ExpressionType.Throw
  - System.Linq.Expressions.ExpressionType.Try
  - System.Linq.Expressions.ExpressionType.TypeAs
  - System.Linq.Expressions.ExpressionType.TypeEqual
  - System.Linq.Expressions.ExpressionType.TypeIs
  - System.Linq.Expressions.ExpressionType.UnaryPlus
  - System.Linq.Expressions.ExpressionType.Unbox
  name: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
  type: Enum
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 9
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Describes the node types for the nodes of an expression tree.
  syntax:
    content: 'public enum ExpressionType : int'
    content.vb: Public Enum ExpressionType As Integer
- uid: System.Linq.Expressions.ExpressionType.Add
  id: Add
  parent: System.Linq.Expressions.ExpressionType
  name: Add
  fullName: System.Linq.Expressions.ExpressionType.Add
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 14
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An addition operation, such as a + b, without overflow checking, for numeric operands.
  syntax:
    content: Add = null
    content.vb: Add = Nothing
- uid: System.Linq.Expressions.ExpressionType.AddAssign
  id: AddAssign
  parent: System.Linq.Expressions.ExpressionType
  name: AddAssign
  fullName: System.Linq.Expressions.ExpressionType.AddAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 266
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An addition compound assignment operation, such as (a += b), without overflow checking, for numeric operands.
  syntax:
    content: AddAssign = null
    content.vb: AddAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.AddAssignChecked
  id: AddAssignChecked
  parent: System.Linq.Expressions.ExpressionType
  name: AddAssignChecked
  fullName: System.Linq.Expressions.ExpressionType.AddAssignChecked
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 310
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An addition compound assignment operation, such as (a += b), with overflow checking, for numeric operands.
  syntax:
    content: AddAssignChecked = null
    content.vb: AddAssignChecked = Nothing
- uid: System.Linq.Expressions.ExpressionType.AddChecked
  id: AddChecked
  parent: System.Linq.Expressions.ExpressionType
  name: AddChecked
  fullName: System.Linq.Expressions.ExpressionType.AddChecked
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 18
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An addition operation, such as (a + b), with overflow checking, for numeric operands.
  syntax:
    content: AddChecked = null
    content.vb: AddChecked = Nothing
- uid: System.Linq.Expressions.ExpressionType.And
  id: And
  parent: System.Linq.Expressions.ExpressionType
  name: And
  fullName: System.Linq.Expressions.ExpressionType.And
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 22
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A bitwise or logical AND operation, such as (a &amp; b) in C# and (a And b) in Visual Basic.
  syntax:
    content: And = null
    content.vb: And = Nothing
- uid: System.Linq.Expressions.ExpressionType.AndAlso
  id: AndAlso
  parent: System.Linq.Expressions.ExpressionType
  name: AndAlso
  fullName: System.Linq.Expressions.ExpressionType.AndAlso
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 26
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A conditional AND operation that evaluates the second operand only if the first operand evaluates to true. It corresponds to (a &amp;&amp; b) in C# and (a AndAlso b) in Visual Basic.
  syntax:
    content: AndAlso = null
    content.vb: AndAlso = Nothing
- uid: System.Linq.Expressions.ExpressionType.AndAssign
  id: AndAssign
  parent: System.Linq.Expressions.ExpressionType
  name: AndAssign
  fullName: System.Linq.Expressions.ExpressionType.AndAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 270
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A bitwise or logical AND compound assignment operation, such as (a &amp;= b) in C#.
  syntax:
    content: AndAssign = null
    content.vb: AndAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.ArrayIndex
  id: ArrayIndex
  parent: System.Linq.Expressions.ExpressionType
  name: ArrayIndex
  fullName: System.Linq.Expressions.ExpressionType.ArrayIndex
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 34
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An indexing operation in a one-dimensional array, such as array[index] in C# or array(index) in Visual Basic.
  syntax:
    content: ArrayIndex = null
    content.vb: ArrayIndex = Nothing
- uid: System.Linq.Expressions.ExpressionType.ArrayLength
  id: ArrayLength
  parent: System.Linq.Expressions.ExpressionType
  name: ArrayLength
  fullName: System.Linq.Expressions.ExpressionType.ArrayLength
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 30
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An operation that obtains the length of a one-dimensional array, such as array.Length.
  syntax:
    content: ArrayLength = null
    content.vb: ArrayLength = Nothing
- uid: System.Linq.Expressions.ExpressionType.Assign
  id: Assign
  parent: System.Linq.Expressions.ExpressionType
  name: Assign
  fullName: System.Linq.Expressions.ExpressionType.Assign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 198
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An assignment operation, such as (a = b).
  syntax:
    content: Assign = null
    content.vb: Assign = Nothing
- uid: System.Linq.Expressions.ExpressionType.Block
  id: Block
  parent: System.Linq.Expressions.ExpressionType
  name: Block
  fullName: System.Linq.Expressions.ExpressionType.Block
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 202
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A block of expressions.
  syntax:
    content: Block = null
    content.vb: Block = Nothing
- uid: System.Linq.Expressions.ExpressionType.Call
  id: Call
  parent: System.Linq.Expressions.ExpressionType
  name: Call
  fullName: System.Linq.Expressions.ExpressionType.Call
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 38
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A method call, such as in the obj.sampleMethod() expression.
  syntax:
    content: Call = null
    content.vb: Call = Nothing
- uid: System.Linq.Expressions.ExpressionType.Coalesce
  id: Coalesce
  parent: System.Linq.Expressions.ExpressionType
  name: Coalesce
  fullName: System.Linq.Expressions.ExpressionType.Coalesce
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 42
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A node that represents a null coalescing operation, such as (a ?? b) in C# or If(a, b) in Visual Basic.
  syntax:
    content: Coalesce = null
    content.vb: Coalesce = Nothing
- uid: System.Linq.Expressions.ExpressionType.Conditional
  id: Conditional
  parent: System.Linq.Expressions.ExpressionType
  name: Conditional
  fullName: System.Linq.Expressions.ExpressionType.Conditional
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 46
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: 'A conditional operation, such as a &gt; b ? a : b in C# or If(a &gt; b, a, b) in Visual Basic.'
  syntax:
    content: Conditional = null
    content.vb: Conditional = Nothing
- uid: System.Linq.Expressions.ExpressionType.Constant
  id: Constant
  parent: System.Linq.Expressions.ExpressionType
  name: Constant
  fullName: System.Linq.Expressions.ExpressionType.Constant
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 50
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A constant value.
  syntax:
    content: Constant = null
    content.vb: Constant = Nothing
- uid: System.Linq.Expressions.ExpressionType.Convert
  id: Convert
  parent: System.Linq.Expressions.ExpressionType
  name: Convert
  fullName: System.Linq.Expressions.ExpressionType.Convert
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 54
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A cast or conversion operation, such as (SampleType)obj in C#or CType(obj, SampleType) in Visual Basic. For a numeric conversion, if the converted value is too large for the destination type, no exception is thrown.
  syntax:
    content: Convert = null
    content.vb: Convert = Nothing
- uid: System.Linq.Expressions.ExpressionType.ConvertChecked
  id: ConvertChecked
  parent: System.Linq.Expressions.ExpressionType
  name: ConvertChecked
  fullName: System.Linq.Expressions.ExpressionType.ConvertChecked
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 58
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A cast or conversion operation, such as (SampleType)obj in C#or CType(obj, SampleType) in Visual Basic. For a numeric conversion, if the converted value does not fit the destination type, an exception is thrown.
  syntax:
    content: ConvertChecked = null
    content.vb: ConvertChecked = Nothing
- uid: System.Linq.Expressions.ExpressionType.DebugInfo
  id: DebugInfo
  parent: System.Linq.Expressions.ExpressionType
  name: DebugInfo
  fullName: System.Linq.Expressions.ExpressionType.DebugInfo
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 206
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Debugging information.
  syntax:
    content: DebugInfo = null
    content.vb: DebugInfo = Nothing
- uid: System.Linq.Expressions.ExpressionType.Decrement
  id: Decrement
  parent: System.Linq.Expressions.ExpressionType
  name: Decrement
  fullName: System.Linq.Expressions.ExpressionType.Decrement
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 210
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A unary decrement operation, such as (a - 1) in C# and Visual Basic. The object a should not be modified in place.
  syntax:
    content: Decrement = null
    content.vb: Decrement = Nothing
- uid: System.Linq.Expressions.ExpressionType.Default
  id: Default
  parent: System.Linq.Expressions.ExpressionType
  name: Default
  fullName: System.Linq.Expressions.ExpressionType.Default
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 218
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A default value.
  syntax:
    content: Default = null
    content.vb: Default = Nothing
- uid: System.Linq.Expressions.ExpressionType.Divide
  id: Divide
  parent: System.Linq.Expressions.ExpressionType
  name: Divide
  fullName: System.Linq.Expressions.ExpressionType.Divide
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 62
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A division operation, such as (a / b), for numeric operands.
  syntax:
    content: Divide = null
    content.vb: Divide = Nothing
- uid: System.Linq.Expressions.ExpressionType.DivideAssign
  id: DivideAssign
  parent: System.Linq.Expressions.ExpressionType
  name: DivideAssign
  fullName: System.Linq.Expressions.ExpressionType.DivideAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 274
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An division compound assignment operation, such as (a /= b), for numeric operands.
  syntax:
    content: DivideAssign = null
    content.vb: DivideAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.Dynamic
  id: Dynamic
  parent: System.Linq.Expressions.ExpressionType
  name: Dynamic
  fullName: System.Linq.Expressions.ExpressionType.Dynamic
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 214
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A dynamic operation.
  syntax:
    content: Dynamic = null
    content.vb: Dynamic = Nothing
- uid: System.Linq.Expressions.ExpressionType.Equal
  id: Equal
  parent: System.Linq.Expressions.ExpressionType
  name: Equal
  fullName: System.Linq.Expressions.ExpressionType.Equal
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 66
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A node that represents an equality comparison, such as (a == b) in C# or (a = b) in Visual Basic.
  syntax:
    content: Equal = null
    content.vb: Equal = Nothing
- uid: System.Linq.Expressions.ExpressionType.ExclusiveOr
  id: ExclusiveOr
  parent: System.Linq.Expressions.ExpressionType
  name: ExclusiveOr
  fullName: System.Linq.Expressions.ExpressionType.ExclusiveOr
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 70
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A bitwise or logical XOR operation, such as (a ^ b) in C# or (a Xor b) in Visual Basic.
  syntax:
    content: ExclusiveOr = null
    content.vb: ExclusiveOr = Nothing
- uid: System.Linq.Expressions.ExpressionType.ExclusiveOrAssign
  id: ExclusiveOrAssign
  parent: System.Linq.Expressions.ExpressionType
  name: ExclusiveOrAssign
  fullName: System.Linq.Expressions.ExpressionType.ExclusiveOrAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 278
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A bitwise or logical XOR compound assignment operation, such as (a ^= b) in C#.
  syntax:
    content: ExclusiveOrAssign = null
    content.vb: ExclusiveOrAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.Extension
  id: Extension
  parent: System.Linq.Expressions.ExpressionType
  name: Extension
  fullName: System.Linq.Expressions.ExpressionType.Extension
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 222
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An extension expression.
  syntax:
    content: Extension = null
    content.vb: Extension = Nothing
- uid: System.Linq.Expressions.ExpressionType.Goto
  id: Goto
  parent: System.Linq.Expressions.ExpressionType
  name: Goto
  fullName: System.Linq.Expressions.ExpressionType.Goto
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 226
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A "go to" expression, such as goto Label in C# or GoTo Label in Visual Basic.
  syntax:
    content: Goto = null
    content.vb: Goto = Nothing
- uid: System.Linq.Expressions.ExpressionType.GreaterThan
  id: GreaterThan
  parent: System.Linq.Expressions.ExpressionType
  name: GreaterThan
  fullName: System.Linq.Expressions.ExpressionType.GreaterThan
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 74
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A "greater than" comparison, such as (a &gt; b).
  syntax:
    content: GreaterThan = null
    content.vb: GreaterThan = Nothing
- uid: System.Linq.Expressions.ExpressionType.GreaterThanOrEqual
  id: GreaterThanOrEqual
  parent: System.Linq.Expressions.ExpressionType
  name: GreaterThanOrEqual
  fullName: System.Linq.Expressions.ExpressionType.GreaterThanOrEqual
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 78
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A "greater than or equal to" comparison, such as (a &gt;= b).
  syntax:
    content: GreaterThanOrEqual = null
    content.vb: GreaterThanOrEqual = Nothing
- uid: System.Linq.Expressions.ExpressionType.Increment
  id: Increment
  parent: System.Linq.Expressions.ExpressionType
  name: Increment
  fullName: System.Linq.Expressions.ExpressionType.Increment
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 230
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A unary increment operation, such as (a + 1) in C# and Visual Basic. The object a should not be modified in place.
  syntax:
    content: Increment = null
    content.vb: Increment = Nothing
- uid: System.Linq.Expressions.ExpressionType.Index
  id: Index
  parent: System.Linq.Expressions.ExpressionType
  name: Index
  fullName: System.Linq.Expressions.ExpressionType.Index
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 234
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An index operation or an operation that accesses a property that takes arguments.
  syntax:
    content: Index = null
    content.vb: Index = Nothing
- uid: System.Linq.Expressions.ExpressionType.Invoke
  id: Invoke
  parent: System.Linq.Expressions.ExpressionType
  name: Invoke
  fullName: System.Linq.Expressions.ExpressionType.Invoke
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 82
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An operation that invokes a delegate or lambda expression, such as sampleDelegate.Invoke().
  syntax:
    content: Invoke = null
    content.vb: Invoke = Nothing
- uid: System.Linq.Expressions.ExpressionType.IsFalse
  id: IsFalse
  parent: System.Linq.Expressions.ExpressionType
  name: IsFalse
  fullName: System.Linq.Expressions.ExpressionType.IsFalse
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 350
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A false condition value.
  syntax:
    content: IsFalse = null
    content.vb: IsFalse = Nothing
- uid: System.Linq.Expressions.ExpressionType.IsTrue
  id: IsTrue
  parent: System.Linq.Expressions.ExpressionType
  name: IsTrue
  fullName: System.Linq.Expressions.ExpressionType.IsTrue
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 346
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A true condition value.
  syntax:
    content: IsTrue = null
    content.vb: IsTrue = Nothing
- uid: System.Linq.Expressions.ExpressionType.Label
  id: Label
  parent: System.Linq.Expressions.ExpressionType
  name: Label
  fullName: System.Linq.Expressions.ExpressionType.Label
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 238
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A label.
  syntax:
    content: Label = null
    content.vb: Label = Nothing
- uid: System.Linq.Expressions.ExpressionType.Lambda
  id: Lambda
  parent: System.Linq.Expressions.ExpressionType
  name: Lambda
  fullName: System.Linq.Expressions.ExpressionType.Lambda
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 86
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A lambda expression, such as a =&gt; a + a in C# or Function(a) a + a in Visual Basic.
  syntax:
    content: Lambda = null
    content.vb: Lambda = Nothing
- uid: System.Linq.Expressions.ExpressionType.LeftShift
  id: LeftShift
  parent: System.Linq.Expressions.ExpressionType
  name: LeftShift
  fullName: System.Linq.Expressions.ExpressionType.LeftShift
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 90
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A bitwise left-shift operation, such as (a &lt;&lt; b).
  syntax:
    content: LeftShift = null
    content.vb: LeftShift = Nothing
- uid: System.Linq.Expressions.ExpressionType.LeftShiftAssign
  id: LeftShiftAssign
  parent: System.Linq.Expressions.ExpressionType
  name: LeftShiftAssign
  fullName: System.Linq.Expressions.ExpressionType.LeftShiftAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 282
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A bitwise left-shift compound assignment, such as (a &lt;&lt;= b).
  syntax:
    content: LeftShiftAssign = null
    content.vb: LeftShiftAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.LessThan
  id: LessThan
  parent: System.Linq.Expressions.ExpressionType
  name: LessThan
  fullName: System.Linq.Expressions.ExpressionType.LessThan
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 94
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A "less than" comparison, such as (a &lt; b).
  syntax:
    content: LessThan = null
    content.vb: LessThan = Nothing
- uid: System.Linq.Expressions.ExpressionType.LessThanOrEqual
  id: LessThanOrEqual
  parent: System.Linq.Expressions.ExpressionType
  name: LessThanOrEqual
  fullName: System.Linq.Expressions.ExpressionType.LessThanOrEqual
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 98
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A "less than or equal to" comparison, such as (a &lt;= b).
  syntax:
    content: LessThanOrEqual = null
    content.vb: LessThanOrEqual = Nothing
- uid: System.Linq.Expressions.ExpressionType.ListInit
  id: ListInit
  parent: System.Linq.Expressions.ExpressionType
  name: ListInit
  fullName: System.Linq.Expressions.ExpressionType.ListInit
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 102
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An operation that creates a new <xref href="System.Collections.IEnumerable" data-throw-if-not-resolved="false"></xref> object and initializes it from a list of elements, such as new List&lt;SampleType&gt;(){ a, b, c } in C# or Dim sampleList = { a, b, c } in Visual Basic.
  syntax:
    content: ListInit = null
    content.vb: ListInit = Nothing
- uid: System.Linq.Expressions.ExpressionType.Loop
  id: Loop
  parent: System.Linq.Expressions.ExpressionType
  name: Loop
  fullName: System.Linq.Expressions.ExpressionType.Loop
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 246
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A loop, such as for or while.
  syntax:
    content: Loop = null
    content.vb: Loop = Nothing
- uid: System.Linq.Expressions.ExpressionType.MemberAccess
  id: MemberAccess
  parent: System.Linq.Expressions.ExpressionType
  name: MemberAccess
  fullName: System.Linq.Expressions.ExpressionType.MemberAccess
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 106
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An operation that reads from a field or property, such as obj.SampleProperty.
  syntax:
    content: MemberAccess = null
    content.vb: MemberAccess = Nothing
- uid: System.Linq.Expressions.ExpressionType.MemberInit
  id: MemberInit
  parent: System.Linq.Expressions.ExpressionType
  name: MemberInit
  fullName: System.Linq.Expressions.ExpressionType.MemberInit
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 110
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An operation that creates a new object and initializes one or more of its members, such as new Point { X = 1, Y = 2 } in C# or New Point With {.X = 1, .Y = 2} in Visual Basic.
  syntax:
    content: MemberInit = null
    content.vb: MemberInit = Nothing
- uid: System.Linq.Expressions.ExpressionType.Modulo
  id: Modulo
  parent: System.Linq.Expressions.ExpressionType
  name: Modulo
  fullName: System.Linq.Expressions.ExpressionType.Modulo
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 114
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An arithmetic remainder operation, such as (a % b) in C# or (a Mod b) in Visual Basic.
  syntax:
    content: Modulo = null
    content.vb: Modulo = Nothing
- uid: System.Linq.Expressions.ExpressionType.ModuloAssign
  id: ModuloAssign
  parent: System.Linq.Expressions.ExpressionType
  name: ModuloAssign
  fullName: System.Linq.Expressions.ExpressionType.ModuloAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 286
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An arithmetic remainder compound assignment operation, such as (a %= b) in C#.
  syntax:
    content: ModuloAssign = null
    content.vb: ModuloAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.Multiply
  id: Multiply
  parent: System.Linq.Expressions.ExpressionType
  name: Multiply
  fullName: System.Linq.Expressions.ExpressionType.Multiply
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 118
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A multiplication operation, such as (a * b), without overflow checking, for numeric operands.
  syntax:
    content: Multiply = null
    content.vb: Multiply = Nothing
- uid: System.Linq.Expressions.ExpressionType.MultiplyAssign
  id: MultiplyAssign
  parent: System.Linq.Expressions.ExpressionType
  name: MultiplyAssign
  fullName: System.Linq.Expressions.ExpressionType.MultiplyAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 290
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A multiplication compound assignment operation, such as (a *= b), without overflow checking, for numeric operands.
  syntax:
    content: MultiplyAssign = null
    content.vb: MultiplyAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.MultiplyAssignChecked
  id: MultiplyAssignChecked
  parent: System.Linq.Expressions.ExpressionType
  name: MultiplyAssignChecked
  fullName: System.Linq.Expressions.ExpressionType.MultiplyAssignChecked
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 314
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A multiplication compound assignment operation, such as (a *= b), that has overflow checking, for numeric operands.
  syntax:
    content: MultiplyAssignChecked = null
    content.vb: MultiplyAssignChecked = Nothing
- uid: System.Linq.Expressions.ExpressionType.MultiplyChecked
  id: MultiplyChecked
  parent: System.Linq.Expressions.ExpressionType
  name: MultiplyChecked
  fullName: System.Linq.Expressions.ExpressionType.MultiplyChecked
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 122
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An multiplication operation, such as (a * b), that has overflow checking, for numeric operands.
  syntax:
    content: MultiplyChecked = null
    content.vb: MultiplyChecked = Nothing
- uid: System.Linq.Expressions.ExpressionType.Negate
  id: Negate
  parent: System.Linq.Expressions.ExpressionType
  name: Negate
  fullName: System.Linq.Expressions.ExpressionType.Negate
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 126
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An arithmetic negation operation, such as (-a). The object a should not be modified in place.
  syntax:
    content: Negate = null
    content.vb: Negate = Nothing
- uid: System.Linq.Expressions.ExpressionType.NegateChecked
  id: NegateChecked
  parent: System.Linq.Expressions.ExpressionType
  name: NegateChecked
  fullName: System.Linq.Expressions.ExpressionType.NegateChecked
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 134
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An arithmetic negation operation, such as (-a), that has overflow checking. The object a should not be modified in place.
  syntax:
    content: NegateChecked = null
    content.vb: NegateChecked = Nothing
- uid: System.Linq.Expressions.ExpressionType.New
  id: New
  parent: System.Linq.Expressions.ExpressionType
  name: New
  fullName: System.Linq.Expressions.ExpressionType.New
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 138
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An operation that calls a constructor to create a new object, such as new SampleType().
  syntax:
    content: New = null
    content.vb: New = Nothing
- uid: System.Linq.Expressions.ExpressionType.NewArrayBounds
  id: NewArrayBounds
  parent: System.Linq.Expressions.ExpressionType
  name: NewArrayBounds
  fullName: System.Linq.Expressions.ExpressionType.NewArrayBounds
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 146
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An operation that creates a new array, in which the bounds for each dimension are specified, such as new SampleType[dim1, dim2] in C# or New SampleType(dim1, dim2) in Visual Basic.
  syntax:
    content: NewArrayBounds = null
    content.vb: NewArrayBounds = Nothing
- uid: System.Linq.Expressions.ExpressionType.NewArrayInit
  id: NewArrayInit
  parent: System.Linq.Expressions.ExpressionType
  name: NewArrayInit
  fullName: System.Linq.Expressions.ExpressionType.NewArrayInit
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 142
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An operation that creates a new one-dimensional array and initializes it from a list of elements, such as new SampleType[]{a, b, c} in C# or New SampleType(){a, b, c} in Visual Basic.
  syntax:
    content: NewArrayInit = null
    content.vb: NewArrayInit = Nothing
- uid: System.Linq.Expressions.ExpressionType.Not
  id: Not
  parent: System.Linq.Expressions.ExpressionType
  name: Not
  fullName: System.Linq.Expressions.ExpressionType.Not
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 150
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A bitwise complement or logical negation operation. In C#, it is equivalent to (~a) for integral types and to (!a) for Boolean values. In Visual Basic, it is equivalent to (Not a). The object a should not be modified in place.
  syntax:
    content: Not = null
    content.vb: Not = Nothing
- uid: System.Linq.Expressions.ExpressionType.NotEqual
  id: NotEqual
  parent: System.Linq.Expressions.ExpressionType
  name: NotEqual
  fullName: System.Linq.Expressions.ExpressionType.NotEqual
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 154
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An inequality comparison, such as (a != b) in C# or (a &lt;&gt; b) in Visual Basic.
  syntax:
    content: NotEqual = null
    content.vb: NotEqual = Nothing
- uid: System.Linq.Expressions.ExpressionType.OnesComplement
  id: OnesComplement
  parent: System.Linq.Expressions.ExpressionType
  name: OnesComplement
  fullName: System.Linq.Expressions.ExpressionType.OnesComplement
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 342
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A ones complement operation, such as (~a) in C#.
  syntax:
    content: OnesComplement = null
    content.vb: OnesComplement = Nothing
- uid: System.Linq.Expressions.ExpressionType.Or
  id: Or
  parent: System.Linq.Expressions.ExpressionType
  name: Or
  fullName: System.Linq.Expressions.ExpressionType.Or
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 158
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A bitwise or logical OR operation, such as (a | b) in C# or (a Or b) in Visual Basic.
  syntax:
    content: Or = null
    content.vb: Or = Nothing
- uid: System.Linq.Expressions.ExpressionType.OrAssign
  id: OrAssign
  parent: System.Linq.Expressions.ExpressionType
  name: OrAssign
  fullName: System.Linq.Expressions.ExpressionType.OrAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 294
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A bitwise or logical OR compound assignment, such as (a |= b) in C#.
  syntax:
    content: OrAssign = null
    content.vb: OrAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.OrElse
  id: OrElse
  parent: System.Linq.Expressions.ExpressionType
  name: OrElse
  fullName: System.Linq.Expressions.ExpressionType.OrElse
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 162
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A short-circuiting conditional OR operation, such as (a || b) in C# or (a OrElse b) in Visual Basic.
  syntax:
    content: OrElse = null
    content.vb: OrElse = Nothing
- uid: System.Linq.Expressions.ExpressionType.Parameter
  id: Parameter
  parent: System.Linq.Expressions.ExpressionType
  name: Parameter
  fullName: System.Linq.Expressions.ExpressionType.Parameter
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 166
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A reference to a parameter or variable that is defined in the context of the expression. For more information, see <xref href="System.Linq.Expressions.ParameterExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: Parameter = null
    content.vb: Parameter = Nothing
- uid: System.Linq.Expressions.ExpressionType.PostDecrementAssign
  id: PostDecrementAssign
  parent: System.Linq.Expressions.ExpressionType
  name: PostDecrementAssign
  fullName: System.Linq.Expressions.ExpressionType.PostDecrementAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 334
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A unary postfix decrement, such as (a--). The object a should be modified in place.
  syntax:
    content: PostDecrementAssign = null
    content.vb: PostDecrementAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.PostIncrementAssign
  id: PostIncrementAssign
  parent: System.Linq.Expressions.ExpressionType
  name: PostIncrementAssign
  fullName: System.Linq.Expressions.ExpressionType.PostIncrementAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 330
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A unary postfix increment, such as (a++). The object a should be modified in place.
  syntax:
    content: PostIncrementAssign = null
    content.vb: PostIncrementAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.Power
  id: Power
  parent: System.Linq.Expressions.ExpressionType
  name: Power
  fullName: System.Linq.Expressions.ExpressionType.Power
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 170
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A mathematical operation that raises a number to a power, such as (a ^ b) in Visual Basic.
  syntax:
    content: Power = null
    content.vb: Power = Nothing
- uid: System.Linq.Expressions.ExpressionType.PowerAssign
  id: PowerAssign
  parent: System.Linq.Expressions.ExpressionType
  name: PowerAssign
  fullName: System.Linq.Expressions.ExpressionType.PowerAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 298
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A compound assignment operation that raises a number to a power, such as (a ^= b) in Visual Basic.
  syntax:
    content: PowerAssign = null
    content.vb: PowerAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.PreDecrementAssign
  id: PreDecrementAssign
  parent: System.Linq.Expressions.ExpressionType
  name: PreDecrementAssign
  fullName: System.Linq.Expressions.ExpressionType.PreDecrementAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 326
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A unary prefix decrement, such as (--a). The object a should be modified in place.
  syntax:
    content: PreDecrementAssign = null
    content.vb: PreDecrementAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.PreIncrementAssign
  id: PreIncrementAssign
  parent: System.Linq.Expressions.ExpressionType
  name: PreIncrementAssign
  fullName: System.Linq.Expressions.ExpressionType.PreIncrementAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 322
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A unary prefix increment, such as (++a). The object a should be modified in place.
  syntax:
    content: PreIncrementAssign = null
    content.vb: PreIncrementAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.Quote
  id: Quote
  parent: System.Linq.Expressions.ExpressionType
  name: Quote
  fullName: System.Linq.Expressions.ExpressionType.Quote
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 174
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An expression that has a constant value of type <xref href="System.Linq.Expressions.Expression" data-throw-if-not-resolved="false"></xref>. A <xref href="System.Linq.Expressions.ExpressionType.Quote" data-throw-if-not-resolved="false"></xref> node can contain references to parameters that are defined in the context of the expression it represents.
  syntax:
    content: Quote = null
    content.vb: Quote = Nothing
- uid: System.Linq.Expressions.ExpressionType.RightShift
  id: RightShift
  parent: System.Linq.Expressions.ExpressionType
  name: RightShift
  fullName: System.Linq.Expressions.ExpressionType.RightShift
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 178
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A bitwise right-shift operation, such as (a &gt;&gt; b).
  syntax:
    content: RightShift = null
    content.vb: RightShift = Nothing
- uid: System.Linq.Expressions.ExpressionType.RightShiftAssign
  id: RightShiftAssign
  parent: System.Linq.Expressions.ExpressionType
  name: RightShiftAssign
  fullName: System.Linq.Expressions.ExpressionType.RightShiftAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 302
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A bitwise right-shift compound assignment operation, such as (a &gt;&gt;= b).
  syntax:
    content: RightShiftAssign = null
    content.vb: RightShiftAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.RuntimeVariables
  id: RuntimeVariables
  parent: System.Linq.Expressions.ExpressionType
  name: RuntimeVariables
  fullName: System.Linq.Expressions.ExpressionType.RuntimeVariables
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 242
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A list of run-time variables. For more information, see <xref href="System.Linq.Expressions.RuntimeVariablesExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: RuntimeVariables = null
    content.vb: RuntimeVariables = Nothing
- uid: System.Linq.Expressions.ExpressionType.Subtract
  id: Subtract
  parent: System.Linq.Expressions.ExpressionType
  name: Subtract
  fullName: System.Linq.Expressions.ExpressionType.Subtract
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 182
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A subtraction operation, such as (a - b), without overflow checking, for numeric operands.
  syntax:
    content: Subtract = null
    content.vb: Subtract = Nothing
- uid: System.Linq.Expressions.ExpressionType.SubtractAssign
  id: SubtractAssign
  parent: System.Linq.Expressions.ExpressionType
  name: SubtractAssign
  fullName: System.Linq.Expressions.ExpressionType.SubtractAssign
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 306
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A subtraction compound assignment operation, such as (a -= b), without overflow checking, for numeric operands.
  syntax:
    content: SubtractAssign = null
    content.vb: SubtractAssign = Nothing
- uid: System.Linq.Expressions.ExpressionType.SubtractAssignChecked
  id: SubtractAssignChecked
  parent: System.Linq.Expressions.ExpressionType
  name: SubtractAssignChecked
  fullName: System.Linq.Expressions.ExpressionType.SubtractAssignChecked
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 318
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A subtraction compound assignment operation, such as (a -= b), that has overflow checking, for numeric operands.
  syntax:
    content: SubtractAssignChecked = null
    content.vb: SubtractAssignChecked = Nothing
- uid: System.Linq.Expressions.ExpressionType.SubtractChecked
  id: SubtractChecked
  parent: System.Linq.Expressions.ExpressionType
  name: SubtractChecked
  fullName: System.Linq.Expressions.ExpressionType.SubtractChecked
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 186
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An arithmetic subtraction operation, such as (a - b), that has overflow checking, for numeric operands.
  syntax:
    content: SubtractChecked = null
    content.vb: SubtractChecked = Nothing
- uid: System.Linq.Expressions.ExpressionType.Switch
  id: Switch
  parent: System.Linq.Expressions.ExpressionType
  name: Switch
  fullName: System.Linq.Expressions.ExpressionType.Switch
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 250
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A switch operation, such as switch in C# or Select Case in Visual Basic.
  syntax:
    content: Switch = null
    content.vb: Switch = Nothing
- uid: System.Linq.Expressions.ExpressionType.Throw
  id: Throw
  parent: System.Linq.Expressions.ExpressionType
  name: Throw
  fullName: System.Linq.Expressions.ExpressionType.Throw
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 254
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An operation that throws an exception, such as throw new Exception().
  syntax:
    content: Throw = null
    content.vb: Throw = Nothing
- uid: System.Linq.Expressions.ExpressionType.Try
  id: Try
  parent: System.Linq.Expressions.ExpressionType
  name: Try
  fullName: System.Linq.Expressions.ExpressionType.Try
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 258
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A try-catch expression.
  syntax:
    content: Try = null
    content.vb: Try = Nothing
- uid: System.Linq.Expressions.ExpressionType.TypeAs
  id: TypeAs
  parent: System.Linq.Expressions.ExpressionType
  name: TypeAs
  fullName: System.Linq.Expressions.ExpressionType.TypeAs
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 190
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An explicit reference or boxing conversion in which null is supplied if the conversion fails, such as (obj as SampleType) in C# or TryCast(obj, SampleType) in Visual Basic.
  syntax:
    content: TypeAs = null
    content.vb: TypeAs = Nothing
- uid: System.Linq.Expressions.ExpressionType.TypeEqual
  id: TypeEqual
  parent: System.Linq.Expressions.ExpressionType
  name: TypeEqual
  fullName: System.Linq.Expressions.ExpressionType.TypeEqual
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 338
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An exact type test.
  syntax:
    content: TypeEqual = null
    content.vb: TypeEqual = Nothing
- uid: System.Linq.Expressions.ExpressionType.TypeIs
  id: TypeIs
  parent: System.Linq.Expressions.ExpressionType
  name: TypeIs
  fullName: System.Linq.Expressions.ExpressionType.TypeIs
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 194
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A type test, such as obj is SampleType in C# or TypeOf obj is SampleType in Visual Basic.
  syntax:
    content: TypeIs = null
    content.vb: TypeIs = Nothing
- uid: System.Linq.Expressions.ExpressionType.UnaryPlus
  id: UnaryPlus
  parent: System.Linq.Expressions.ExpressionType
  name: UnaryPlus
  fullName: System.Linq.Expressions.ExpressionType.UnaryPlus
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 130
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: A unary plus operation, such as (+a). The result of a predefined unary plus operation is the value of the operand, but user-defined implementations might have unusual results.
  syntax:
    content: UnaryPlus = null
    content.vb: UnaryPlus = Nothing
- uid: System.Linq.Expressions.ExpressionType.Unbox
  id: Unbox
  parent: System.Linq.Expressions.ExpressionType
  name: Unbox
  fullName: System.Linq.Expressions.ExpressionType.Unbox
  type: Field
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionType.cs
    startLine: 262
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: An unbox value type operation, such as unbox and unbox.any instructions in MSIL.
  syntax:
    content: Unbox = null
    content.vb: Unbox = Nothing
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
