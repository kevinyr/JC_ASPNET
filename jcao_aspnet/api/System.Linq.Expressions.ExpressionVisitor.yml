items:
- uid: System.Linq.Expressions.ExpressionVisitor
  id: ExpressionVisitor
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.ExpressionVisitor.#ctor
  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  - System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  - System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  - System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  - System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  - System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  - System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  name: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 21
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Represents a visitor or rewriter for expression trees.
  syntax:
    content: 'public abstract class ExpressionVisitor : object'
    content.vb: Public MustInherit Class ExpressionVisitor Inherits Object
  inheritance:
  - System.Object
- uid: System.Linq.Expressions.ExpressionVisitor.#ctor
  id: '#ctor'
  parent: System.Linq.Expressions.ExpressionVisitor
  name: ExpressionVisitor()
  fullName: System.Linq.Expressions.ExpressionVisitor.ExpressionVisitor()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 26
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Initializes a new instance of <xref href="System.Linq.Expressions.ExpressionVisitor" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected ExpressionVisitor()
    content.vb: Protected Sub New
- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  id: Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.ExpressionVisitor
  name: Visit(Collections.ObjectModel.ReadOnlyCollection<Expression>)
  name.vb: Visit(Collections.ObjectModel.ReadOnlyCollection(Of Expression))
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.Expression))
  type: Method
  source:
    remote: &o1
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 525
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Dispatches the list of expressions to one of the more specialized visit methods in this class.
  syntax:
    content: public Collections.ObjectModel.ReadOnlyCollection<Expression> Visit(Collections.ObjectModel.ReadOnlyCollection<Expression> nodes)
    content.vb: Public Function Visit(nodes As Collections.ObjectModel.ReadOnlyCollection(Of Expression)) As Collections.ObjectModel.ReadOnlyCollection(Of Expression)
    parameters:
    - id: nodes
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
      description: The expressions to visit.
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
      description: The modified expression list, if any one of the elements were modified; otherwise, returns the original expression list.
- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  id: Visit(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: Visit(Expression)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 36
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Dispatches the expression to one of the more specialized visit methods in this class.
  syntax:
    content: public virtual Expression Visit(Expression node)
    content.vb: Public Overridable Function Visit(node As Expression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  id: Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  parent: System.Linq.Expressions.ExpressionVisitor
  name: Visit<T>(Collections.ObjectModel.ReadOnlyCollection<T>, Func<T, T>)
  name.vb: Visit(Of T)(Collections.ObjectModel.ReadOnlyCollection(Of T), Func(Of T, T))
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.Func<T, T>)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.Func(Of T, T))
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 527
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits all nodes in the collection using a specified element visitor.
  syntax:
    content: public static Collections.ObjectModel.ReadOnlyCollection<T> Visit<T>(Collections.ObjectModel.ReadOnlyCollection<T> nodes, Func<T, T> elementVisitor)
    content.vb: Public Shared Function Visit(Of T)(nodes As Collections.ObjectModel.ReadOnlyCollection(Of T), elementVisitor As Func(Of T, T)) As Collections.ObjectModel.ReadOnlyCollection(Of T)
    parameters:
    - id: nodes
      type: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
      description: The nodes to visit.
    - id: elementVisitor
      type: System.Func{{T},{T}}
      description: A delegate that visits a single element, optionally replacing it with a new element.
    typeParameters:
    - id: T
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
      description: The modified node list, if any of the elements were modified; otherwise, returns the original node list.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  id: VisitAndConvert``1(``0,System.String)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitAndConvert<T>(T, String)
  name.vb: VisitAndConvert(Of T)(T, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(T, System.String)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(T, System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 129
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits an expression, casting the result back to the original expression type.
  syntax:
    content: 'public T VisitAndConvert<T>(T node, string callerName)where T : Expression'
    content.vb: Public Function VisitAndConvert(Of T As Expression)(node As T, callerName As String) As T
    parameters:
    - id: node
      type: '{T}'
      description: The expression to visit.
    - id: callerName
      type: System.String
      description: The name of the calling method; used to report to report a better error message.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
  exceptions:
  - type: System.InvalidOperationException
    description: The visit method for this node returned a different type.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  id: VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitAndConvert<T>(Collections.ObjectModel.ReadOnlyCollection<T>, String)
  name.vb: VisitAndConvert(Of T)(Collections.ObjectModel.ReadOnlyCollection(Of T), String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.String)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.String)
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 529
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits an expression, casting the result back to the original expression type.
  syntax:
    content: 'public Collections.ObjectModel.ReadOnlyCollection<T> VisitAndConvert<T>(Collections.ObjectModel.ReadOnlyCollection<T> nodes, string callerName)where T : Expression'
    content.vb: Public Function VisitAndConvert(Of T As Expression)(nodes As Collections.ObjectModel.ReadOnlyCollection(Of T), callerName As String) As Collections.ObjectModel.ReadOnlyCollection(Of T)
    parameters:
    - id: nodes
      type: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
      description: The expression to visit.
    - id: callerName
      type: System.String
      description: The name of the calling method; used to report to report a better error message.
    typeParameters:
    - id: T
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
  exceptions:
  - type: System.InvalidOperationException
    description: The visit method for this node returned a different type.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  id: VisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitBinary(BinaryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 190
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.BinaryExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitBinary(BinaryExpression node)
    content.vb: Protected Overridable Function VisitBinary(node As BinaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.BinaryExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  id: VisitBlock(System.Linq.Expressions.BlockExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitBlock(BlockExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 209
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.BlockExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitBlock(BlockExpression node)
    content.vb: Protected Overridable Function VisitBlock(node As BlockExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.BlockExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  id: VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitCatchBlock(CatchBlock)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 510
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.CatchBlock" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual CatchBlock VisitCatchBlock(CatchBlock node)
    content.vb: Protected Overridable Function VisitCatchBlock(node As CatchBlock) As CatchBlock
    parameters:
    - id: node
      type: System.Linq.Expressions.CatchBlock
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.CatchBlock
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  id: VisitConditional(System.Linq.Expressions.ConditionalExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitConditional(ConditionalExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 254
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.ConditionalExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitConditional(ConditionalExpression node)
    content.vb: Protected Overridable Function VisitConditional(node As ConditionalExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ConditionalExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  id: VisitConstant(System.Linq.Expressions.ConstantExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitConstant(ConstantExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 265
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the <xref href="System.Linq.Expressions.ConstantExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitConstant(ConstantExpression node)
    content.vb: Protected Overridable Function VisitConstant(node As ConstantExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ConstantExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  id: VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitDebugInfo(DebugInfoExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 276
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the <xref href="System.Linq.Expressions.DebugInfoExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitDebugInfo(DebugInfoExpression node)
    content.vb: Protected Overridable Function VisitDebugInfo(node As DebugInfoExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.DebugInfoExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  id: VisitDefault(System.Linq.Expressions.DefaultExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitDefault(DefaultExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 287
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the <xref href="System.Linq.Expressions.DefaultExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitDefault(DefaultExpression node)
    content.vb: Protected Overridable Function VisitDefault(node As DefaultExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.DefaultExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  id: VisitElementInit(System.Linq.Expressions.ElementInit)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitElementInit(ElementInit)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 587
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.ElementInit" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual ElementInit VisitElementInit(ElementInit node)
    content.vb: Protected Overridable Function VisitElementInit(node As ElementInit) As ElementInit
    parameters:
    - id: node
      type: System.Linq.Expressions.ElementInit
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.ElementInit
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  id: VisitExtension(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitExtension(Expression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 304
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the extension expression.
  syntax:
    content: protected virtual Expression VisitExtension(Expression node)
    content.vb: Protected Overridable Function VisitExtension(node As Expression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  id: VisitGoto(System.Linq.Expressions.GotoExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitGoto(GotoExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 315
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.GotoExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitGoto(GotoExpression node)
    content.vb: Protected Overridable Function VisitGoto(node As GotoExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.GotoExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  id: VisitIndex(System.Linq.Expressions.IndexExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitIndex(IndexExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 400
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.IndexExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitIndex(IndexExpression node)
    content.vb: Protected Overridable Function VisitIndex(node As IndexExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.IndexExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  id: VisitInvocation(System.Linq.Expressions.InvocationExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitInvocation(InvocationExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 326
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.InvocationExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitInvocation(InvocationExpression node)
    content.vb: Protected Overridable Function VisitInvocation(node As InvocationExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.InvocationExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  id: VisitLabel(System.Linq.Expressions.LabelExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitLabel(LabelExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 355
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.LabelExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitLabel(LabelExpression node)
    content.vb: Protected Overridable Function VisitLabel(node As LabelExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.LabelExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  id: VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitLabelTarget(LabelTarget)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 344
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the <xref href="System.Linq.Expressions.LabelTarget" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual LabelTarget VisitLabelTarget(LabelTarget node)
    content.vb: Protected Overridable Function VisitLabelTarget(node As LabelTarget) As LabelTarget
    parameters:
    - id: node
      type: System.Linq.Expressions.LabelTarget
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.LabelTarget
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  id: VisitLambda``1(System.Linq.Expressions.Expression{``0})
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitLambda<T>(Expression<T>)
  name.vb: VisitLambda(Of T)(Expression(Of T))
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda<T>(System.Linq.Expressions.Expression<T>)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 367
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.Expression`1" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitLambda<T>(Expression<T> node)
    content.vb: Protected Overridable Function VisitLambda(Of T)(node As Expression(Of T)) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression{{T}}
      description: The expression to visit.
    typeParameters:
    - id: T
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  id: VisitListInit(System.Linq.Expressions.ListInitExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitListInit(ListInitExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 573
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.ListInitExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitListInit(ListInitExpression node)
    content.vb: Protected Overridable Function VisitListInit(node As ListInitExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ListInitExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  id: VisitLoop(System.Linq.Expressions.LoopExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitLoop(LoopExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 378
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.LoopExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitLoop(LoopExpression node)
    content.vb: Protected Overridable Function VisitLoop(node As LoopExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.LoopExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  id: VisitMember(System.Linq.Expressions.MemberExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitMember(MemberExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 389
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.MemberExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitMember(MemberExpression node)
    content.vb: Protected Overridable Function VisitMember(node As MemberExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  id: VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitMemberAssignment(MemberAssignment)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 619
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.MemberAssignment" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual MemberAssignment VisitMemberAssignment(MemberAssignment node)
    content.vb: Protected Overridable Function VisitMemberAssignment(node As MemberAssignment) As MemberAssignment
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberAssignment
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.MemberAssignment
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  id: VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitMemberBinding(MemberBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 598
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.MemberBinding" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual MemberBinding VisitMemberBinding(MemberBinding node)
    content.vb: Protected Overridable Function VisitMemberBinding(node As MemberBinding) As MemberBinding
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberBinding
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.MemberBinding
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  id: VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitMemberInit(MemberInitExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 559
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.MemberInitExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitMemberInit(MemberInitExpression node)
    content.vb: Protected Overridable Function VisitMemberInit(node As MemberInitExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberInitExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  id: VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitMemberListBinding(MemberListBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 641
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.MemberListBinding" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual MemberListBinding VisitMemberListBinding(MemberListBinding node)
    content.vb: Protected Overridable Function VisitMemberListBinding(node As MemberListBinding) As MemberListBinding
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberListBinding
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.MemberListBinding
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  id: VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitMemberMemberBinding(MemberMemberBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 630
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.MemberMemberBinding" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual MemberMemberBinding VisitMemberMemberBinding(MemberMemberBinding node)
    content.vb: Protected Overridable Function VisitMemberMemberBinding(node As MemberMemberBinding) As MemberMemberBinding
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberMemberBinding
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.MemberMemberBinding
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  id: VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitMethodCall(MethodCallExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 418
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.MethodCallExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitMethodCall(MethodCallExpression node)
    content.vb: Protected Overridable Function VisitMethodCall(node As MethodCallExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MethodCallExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  id: VisitNew(System.Linq.Expressions.NewExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitNew(NewExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 447
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.NewExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitNew(NewExpression node)
    content.vb: Protected Overridable Function VisitNew(node As NewExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.NewExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  id: VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitNewArray(NewArrayExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 436
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.NewArrayExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitNewArray(NewArrayExpression node)
    content.vb: Protected Overridable Function VisitNewArray(node As NewArrayExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.NewArrayExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  id: VisitParameter(System.Linq.Expressions.ParameterExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitParameter(ParameterExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 459
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the <xref href="System.Linq.Expressions.ParameterExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitParameter(ParameterExpression node)
    content.vb: Protected Overridable Function VisitParameter(node As ParameterExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ParameterExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  id: VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitRuntimeVariables(RuntimeVariablesExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 470
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.RuntimeVariablesExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitRuntimeVariables(RuntimeVariablesExpression node)
    content.vb: Protected Overridable Function VisitRuntimeVariables(node As RuntimeVariablesExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.RuntimeVariablesExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  id: VisitSwitch(System.Linq.Expressions.SwitchExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitSwitch(SwitchExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 492
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.SwitchExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitSwitch(SwitchExpression node)
    content.vb: Protected Overridable Function VisitSwitch(node As SwitchExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.SwitchExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  id: VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitSwitchCase(SwitchCase)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 481
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.SwitchCase" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual SwitchCase VisitSwitchCase(SwitchCase node)
    content.vb: Protected Overridable Function VisitSwitchCase(node As SwitchCase) As SwitchCase
    parameters:
    - id: node
      type: System.Linq.Expressions.SwitchCase
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.SwitchCase
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  id: VisitTry(System.Linq.Expressions.TryExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitTry(TryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 521
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.TryExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitTry(TryExpression node)
    content.vb: Protected Overridable Function VisitTry(node As TryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.TryExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  id: VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitTypeBinary(TypeBinaryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 537
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.TypeBinaryExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitTypeBinary(TypeBinaryExpression node)
    content.vb: Protected Overridable Function VisitTypeBinary(node As TypeBinaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.TypeBinaryExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  id: VisitUnary(System.Linq.Expressions.UnaryExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  name: VisitUnary(UnaryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 548
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the <xref href="System.Linq.Expressions.UnaryExpression" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual Expression VisitUnary(UnaryExpression node)
    content.vb: Protected Overridable Function VisitUnary(node As UnaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.UnaryExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: Collections.ObjectModel.ReadOnlyCollection<Expression>
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of Expression)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: false
  name: Collections.ObjectModel.ReadOnlyCollection<>
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ObjectModel.ReadOnlyCollection<T>
  name.vb: ObjectModel.ReadOnlyCollection(Of T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Func{{T},{T}}
  definition: System.Func`2
  name: Func<T, T>
  name.vb: Func(Of T, T)
  fullName: System.Func<T, T>
  fullName.vb: System.Func(Of T, T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Func`2
  isExternal: false
  name: Func<, >
  name.vb: Func(Of , )
  fullName: System.Func<, >
  fullName.vb: System.Func(Of , )
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
- uid: System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
- uid: System.Linq.Expressions.ConstantExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConstantExpression
  fullName: System.Linq.Expressions.ConstantExpression
- uid: System.Linq.Expressions.DebugInfoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DebugInfoExpression
  fullName: System.Linq.Expressions.DebugInfoExpression
- uid: System.Linq.Expressions.DefaultExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DefaultExpression
  fullName: System.Linq.Expressions.DefaultExpression
- uid: System.Linq.Expressions.ElementInit
  parent: System.Linq.Expressions
  isExternal: false
  name: ElementInit
  fullName: System.Linq.Expressions.ElementInit
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.InvocationExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: InvocationExpression
  fullName: System.Linq.Expressions.InvocationExpression
- uid: System.Linq.Expressions.LabelExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelExpression
  fullName: System.Linq.Expressions.LabelExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression{{T}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<T>
  name.vb: Expression(Of T)
  fullName: System.Linq.Expressions.Expression<T>
  fullName.vb: System.Linq.Expressions.Expression(Of T)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expressions.Expression<>
  name.vb: Expressions.Expression(Of )
  fullName: System.Linq.Expressions.Expression<>
  fullName.vb: System.Linq.Expressions.Expression(Of )
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expressions.Expression
    fullName: System.Linq.Expressions.Expression
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expressions.Expression
    fullName: System.Linq.Expressions.Expression
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.LoopExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LoopExpression
  fullName: System.Linq.Expressions.LoopExpression
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.MemberAssignment
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberAssignment
  fullName: System.Linq.Expressions.MemberAssignment
- uid: System.Linq.Expressions.MemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberBinding
  fullName: System.Linq.Expressions.MemberBinding
- uid: System.Linq.Expressions.MemberInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberInitExpression
  fullName: System.Linq.Expressions.MemberInitExpression
- uid: System.Linq.Expressions.MemberListBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberListBinding
  fullName: System.Linq.Expressions.MemberListBinding
- uid: System.Linq.Expressions.MemberMemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberMemberBinding
  fullName: System.Linq.Expressions.MemberMemberBinding
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Linq.Expressions.NewArrayExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewArrayExpression
  fullName: System.Linq.Expressions.NewArrayExpression
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Linq.Expressions.RuntimeVariablesExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: RuntimeVariablesExpression
  fullName: System.Linq.Expressions.RuntimeVariablesExpression
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Linq.Expressions.SwitchCase
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase
- uid: System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TryExpression
  fullName: System.Linq.Expressions.TryExpression
- uid: System.Linq.Expressions.TypeBinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TypeBinaryExpression
  fullName: System.Linq.Expressions.TypeBinaryExpression
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
