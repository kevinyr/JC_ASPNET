items:
- uid: System.Linq.ILookup`2
  id: ILookup`2
  parent: System.Linq
  children:
  - System.Linq.ILookup`2.Contains(`0)
  - System.Linq.ILookup`2.Count
  - System.Linq.ILookup`2.Item(`0)
  name: ILookup<TKey, TElement>
  name.vb: ILookup(Of TKey, TElement)
  fullName: System.Linq.ILookup<TKey, TElement>
  fullName.vb: System.Linq.ILookup(Of TKey, TElement)
  type: Interface
  source:
    remote: &o0
      path: src/System.Linq/src/System/Linq/Enumerable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 3389
  assemblies:
  - System.Linq
  namespace: System.Linq
  summary: Defines an indexer, size property, and Boolean search method for data structures that map keys to <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> sequences of values.
  syntax:
    content: 'public interface ILookup<TKey, TElement> : Collections.Generic.IEnumerable<IGrouping<TKey, TElement>>, Collections.IEnumerable'
    content.vb: Public Interface ILookup(Of TKey, TElement) Inherits Collections.Generic.IEnumerable(Of IGrouping(Of TKey, TElement)), Collections.IEnumerable
    typeParameters:
    - id: TKey
    - id: TElement
- uid: System.Linq.ILookup`2.Count
  id: Count
  parent: System.Linq.ILookup`2
  name: Count
  fullName: System.Linq.ILookup<TKey, TElement>.Count
  fullName.vb: System.Linq.ILookup(Of TKey, TElement).Count
  type: Property
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 3391
  assemblies:
  - System.Linq
  namespace: System.Linq
  summary: Gets the number of key/value collection pairs in the <xref href="System.Linq.ILookup`2" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: int Count { get; }
    content.vb: ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of key/value collection pairs in the <xref href="System.Linq.ILookup`2" data-throw-if-not-resolved="false"></xref>.
- uid: System.Linq.ILookup`2.Item(`0)
  id: Item(`0)
  parent: System.Linq.ILookup`2
  name: Item[TKey]
  name.vb: Item(TKey)
  fullName: System.Linq.ILookup<TKey, TElement>.Item[TKey]
  fullName.vb: System.Linq.ILookup(Of TKey, TElement).Item(TKey)
  type: Property
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 3392
  assemblies:
  - System.Linq
  namespace: System.Linq
  summary: Gets the <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> sequence of values indexed by a specified key.
  syntax:
    content: Collections.Generic.IEnumerable<TElement> this[TKey key] { get; }
    content.vb: ReadOnly Property Item(key As TKey) As Collections.Generic.IEnumerable(Of TElement)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the desired sequence of values.
    return:
      type: System.Collections.Generic.IEnumerable{{TElement}}
      description: The <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> sequence of values indexed by the specified key.
- uid: System.Linq.ILookup`2.Contains(`0)
  id: Contains(`0)
  parent: System.Linq.ILookup`2
  name: Contains(TKey)
  fullName: System.Linq.ILookup<TKey, TElement>.Contains(TKey)
  fullName.vb: System.Linq.ILookup(Of TKey, TElement).Contains(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 3393
  assemblies:
  - System.Linq
  namespace: System.Linq
  summary: Determines whether a specified key exists in the <xref href="System.Linq.ILookup`2" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: bool Contains(TKey key)
    content.vb: Function Contains(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to search for in the <xref href="System.Linq.ILookup`2" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: true if *key* is in the <xref href="System.Linq.ILookup`2" data-throw-if-not-resolved="false"></xref>; otherwise, false.
references:
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: '{TKey}'
  isExternal: false
  name: TKey
  fullName: TKey
- uid: System.Collections.Generic.IEnumerable{{TElement}}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<TElement>
  name.vb: Collections.Generic.IEnumerable(Of TElement)
  fullName: System.Collections.Generic.IEnumerable<TElement>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  name.vb: Collections.Generic.IEnumerable(Of )
  fullName: System.Collections.Generic.IEnumerable<>
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
