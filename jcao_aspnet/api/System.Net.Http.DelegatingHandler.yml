items:
- uid: System.Net.Http.DelegatingHandler
  commentId: T:System.Net.Http.DelegatingHandler
  id: DelegatingHandler
  parent: System.Net.Http
  children:
  - System.Net.Http.DelegatingHandler.#ctor
  - System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)
  - System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  - System.Net.Http.DelegatingHandler.InnerHandler
  - System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DelegatingHandler
  nameWithType: DelegatingHandler
  fullName: System.Net.Http.DelegatingHandler
  type: Class
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DelegatingHandler
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 23
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: 'public abstract class DelegatingHandler : HttpMessageHandler'
    content.vb: >-
      Public MustInherit Class DelegatingHandler
          Inherits HttpMessageHandler
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageHandler
  inheritedMembers:
  - System.Net.Http.HttpMessageHandler.Dispose
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Net.Http.DelegatingHandler.#ctor
  commentId: M:System.Net.Http.DelegatingHandler.#ctor
  id: '#ctor'
  parent: System.Net.Http.DelegatingHandler
  langs:
  - csharp
  - vb
  name: DelegatingHandler()
  nameWithType: DelegatingHandler.DelegatingHandler()
  fullName: System.Net.Http.DelegatingHandler.DelegatingHandler()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 25
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: protected DelegatingHandler()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)
  commentId: M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)
  id: '#ctor(System.Net.Http.HttpMessageHandler)'
  parent: System.Net.Http.DelegatingHandler
  langs:
  - csharp
  - vb
  name: DelegatingHandler(HttpMessageHandler)
  nameWithType: DelegatingHandler.DelegatingHandler(HttpMessageHandler)
  fullName: System.Net.Http.DelegatingHandler.DelegatingHandler(System.Net.Http.HttpMessageHandler)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 26
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: protected DelegatingHandler(HttpMessageHandler innerHandler)
    content.vb: Protected Sub New(innerHandler As HttpMessageHandler)
    parameters:
    - id: innerHandler
      type: System.Net.Http.HttpMessageHandler
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.Http.DelegatingHandler.InnerHandler
  commentId: P:System.Net.Http.DelegatingHandler.InnerHandler
  id: InnerHandler
  parent: System.Net.Http.DelegatingHandler
  langs:
  - csharp
  - vb
  name: InnerHandler
  nameWithType: DelegatingHandler.InnerHandler
  fullName: System.Net.Http.DelegatingHandler.InnerHandler
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InnerHandler
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 27
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public HttpMessageHandler InnerHandler { get; set; }
    content.vb: Public Property InnerHandler As HttpMessageHandler
    parameters: []
    return:
      type: System.Net.Http.HttpMessageHandler
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  commentId: M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.DelegatingHandler
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: DelegatingHandler.Dispose(Boolean)
  fullName: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 28
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  overridden: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.DelegatingHandler
  langs:
  - csharp
  - vb
  name: SendAsync(HttpRequestMessage, Threading.CancellationToken)
  nameWithType: DelegatingHandler.SendAsync(HttpRequestMessage, Threading.CancellationToken)
  fullName: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendAsync
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 29
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: protected override Threading.Tasks.Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, Threading.CancellationToken cancellationToken)
    content.vb: Protected Overrides Function SendAsync(request As HttpRequestMessage, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of HttpResponseMessage)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  overridden: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Http.HttpMessageHandler
  commentId: T:System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: false
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Net.Http.HttpMessageHandler.Dispose
  commentId: M:System.Net.Http.HttpMessageHandler.Dispose
  parent: System.Net.Http.HttpMessageHandler
  isExternal: false
  name: Dispose()
  nameWithType: HttpMessageHandler.Dispose()
  fullName: System.Net.Http.HttpMessageHandler.Dispose()
  spec.csharp:
  - uid: System.Net.Http.HttpMessageHandler.Dispose
    name: Dispose
    nameWithType: HttpMessageHandler.Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageHandler.Dispose
    name: Dispose
    nameWithType: HttpMessageHandler.Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
  commentId: M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
  parent: System.Net.Http.HttpMessageHandler
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: HttpMessageHandler.Dispose(Boolean)
  fullName: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
    name: Dispose
    nameWithType: HttpMessageHandler.Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
    name: Dispose
    nameWithType: HttpMessageHandler.Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpMessageHandler
  isExternal: true
  name: SendAsync(HttpRequestMessage, Threading.CancellationToken)
  nameWithType: HttpMessageHandler.SendAsync(HttpRequestMessage, Threading.CancellationToken)
  fullName: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: HttpMessageHandler.SendAsync
    fullName: System.Net.Http.HttpMessageHandler.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    nameWithType: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: HttpMessageHandler.SendAsync
    fullName: System.Net.Http.HttpMessageHandler.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    nameWithType: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: Threading.CancellationToken
  nameWithType: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  commentId: '!:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}'
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<HttpResponseMessage>
  nameWithType: Threading.Tasks.Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Threading.Tasks.Task(Of HttpResponseMessage)
  fullname.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Threading.Tasks.Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: false
  name: Threading.Tasks.Task<>
  nameWithType: Threading.Tasks.Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Threading.Tasks.Task(Of )
  fullname.vb: System.Threading.Tasks.Task(Of )
  name.vb: Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
