items:
- uid: System.Net.Http.HttpClientHandler
  id: HttpClientHandler
  parent: System.Net.Http
  children:
  - System.Net.Http.HttpClientHandler.#ctor
  - System.Net.Http.HttpClientHandler.AllowAutoRedirect
  - System.Net.Http.HttpClientHandler.AutomaticDecompression
  - System.Net.Http.HttpClientHandler.ClientCertificateOptions
  - System.Net.Http.HttpClientHandler.CookieContainer
  - System.Net.Http.HttpClientHandler.Credentials
  - System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  - System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  - System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  - System.Net.Http.HttpClientHandler.PreAuthenticate
  - System.Net.Http.HttpClientHandler.Proxy
  - System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  - System.Net.Http.HttpClientHandler.SupportsProxy
  - System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  - System.Net.Http.HttpClientHandler.UseCookies
  - System.Net.Http.HttpClientHandler.UseDefaultCredentials
  - System.Net.Http.HttpClientHandler.UseProxy
  name: HttpClientHandler
  fullName: System.Net.Http.HttpClientHandler
  type: Class
  source:
    remote: &o0
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 14
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: The default message handler used by <xref href="System.Net.Http.HttpClient" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: 'public class HttpClientHandler : HttpMessageHandler'
    content.vb: Public Class HttpClientHandler Inherits HttpMessageHandler
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageHandler
  inheritedMembers:
  - System.Net.Http.HttpMessageHandler.Dispose
- uid: System.Net.Http.HttpClientHandler.#ctor
  id: '#ctor'
  parent: System.Net.Http.HttpClientHandler
  name: HttpClientHandler()
  fullName: System.Net.Http.HttpClientHandler.HttpClientHandler()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 139
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Creates an instance of a <xref href="System.Net.Http.HttpClientHandler" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public HttpClientHandler()
    content.vb: Public Sub New
- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  id: AllowAutoRedirect
  parent: System.Net.Http.HttpClientHandler
  name: AllowAutoRedirect
  fullName: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 102
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether the handler should follow redirection responses.
  syntax:
    content: public bool AllowAutoRedirect { get; set; }
    content.vb: Public Property AllowAutoRedirect As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the if the handler should follow redirection responses; otherwise false. The default value is true.
- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression
  id: AutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  name: AutomaticDecompression
  fullName: System.Net.Http.HttpClientHandler.AutomaticDecompression
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 51
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.
  syntax:
    content: public DecompressionMethods AutomaticDecompression { get; set; }
    content.vb: Public Property AutomaticDecompression As DecompressionMethods
    parameters: []
    return:
      type: System.Net.DecompressionMethods
      description: Returns <xref href="System.Net.DecompressionMethods" data-throw-if-not-resolved="false"></xref>.The automatic decompression method used by the handler. The default value is <xref href="System.Net.DecompressionMethods.None" data-throw-if-not-resolved="false"></xref>.
- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  id: ClientCertificateOptions
  parent: System.Net.Http.HttpClientHandler
  name: ClientCertificateOptions
  fullName: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 45
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.
  syntax:
    content: public ClientCertificateOption ClientCertificateOptions { get; set; }
    content.vb: Public Property ClientCertificateOptions As ClientCertificateOption
    parameters: []
    return:
      type: System.Net.Http.ClientCertificateOption
      description: Returns <xref href="System.Net.Http.ClientCertificateOption" data-throw-if-not-resolved="false"></xref>.The collection of security certificates associated with this handler.
- uid: System.Net.Http.HttpClientHandler.CookieContainer
  id: CookieContainer
  parent: System.Net.Http.HttpClientHandler
  name: CookieContainer
  fullName: System.Net.Http.HttpClientHandler.CookieContainer
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 39
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets the cookie container used to store server cookies by the handler.
  syntax:
    content: public CookieContainer CookieContainer { get; set; }
    content.vb: Public Property CookieContainer As CookieContainer
    parameters: []
    return:
      type: System.Net.CookieContainer
      description: Returns <xref href="System.Net.CookieContainer" data-throw-if-not-resolved="false"></xref>.The cookie container used to store server cookies by the handler.
- uid: System.Net.Http.HttpClientHandler.Credentials
  id: Credentials
  parent: System.Net.Http.HttpClientHandler
  name: Credentials
  fullName: System.Net.Http.HttpClientHandler.Credentials
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 96
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets authentication information used by this handler.
  syntax:
    content: public ICredentials Credentials { get; set; }
    content.vb: Public Property Credentials As ICredentials
    parameters: []
    return:
      type: System.Net.ICredentials
      description: Returns <xref href="System.Net.ICredentials" data-throw-if-not-resolved="false"></xref>.The authentication credentials associated with the handler. The default is null.
- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  id: MaxAutomaticRedirections
  parent: System.Net.Http.HttpClientHandler
  name: MaxAutomaticRedirections
  fullName: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 114
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets the maximum number of redirects that the handler follows.
  syntax:
    content: public int MaxAutomaticRedirections { get; set; }
    content.vb: Public Property MaxAutomaticRedirections As Integer
    parameters: []
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.The maximum number of redirection responses that the handler follows. The default value is 50.
- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  id: MaxRequestContentBufferSize
  parent: System.Net.Http.HttpClientHandler
  name: MaxRequestContentBufferSize
  fullName: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 120
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets the maximum request content buffer size used by the handler.
  syntax:
    content: public long MaxRequestContentBufferSize { get; set; }
    content.vb: Public Property MaxRequestContentBufferSize As Long
    parameters: []
    return:
      type: System.Int64
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.The maximum request content buffer size in bytes. The default value is 2 gigabytes.
- uid: System.Net.Http.HttpClientHandler.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.Http.HttpClientHandler
  name: PreAuthenticate
  fullName: System.Net.Http.HttpClientHandler.PreAuthenticate
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 69
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether the handler sends an Authorization header with the request.
  syntax:
    content: public bool PreAuthenticate { get; set; }
    content.vb: Public Property PreAuthenticate As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, false. The default is false.
- uid: System.Net.Http.HttpClientHandler.Proxy
  id: Proxy
  parent: System.Net.Http.HttpClientHandler
  name: Proxy
  fullName: System.Net.Http.HttpClientHandler.Proxy
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 63
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets proxy information used by the handler.
  syntax:
    content: public IWebProxy Proxy { get; set; }
    content.vb: Public Property Proxy As IWebProxy
    parameters: []
    return:
      type: System.Net.IWebProxy
      description: Returns <xref href="System.Net.IWebProxy" data-throw-if-not-resolved="false"></xref>.The proxy information used by the handler. The default value is null.
- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  id: SupportsAutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  name: SupportsAutomaticDecompression
  fullName: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 18
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets a value that indicates whether the handler supports automatic response content decompression.
  syntax:
    content: public virtual bool SupportsAutomaticDecompression { get; }
    content.vb: Public Overridable ReadOnly Property SupportsAutomaticDecompression As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the if the handler supports automatic response content decompression; otherwise false. The default value is true.
- uid: System.Net.Http.HttpClientHandler.SupportsProxy
  id: SupportsProxy
  parent: System.Net.Http.HttpClientHandler
  name: SupportsProxy
  fullName: System.Net.Http.HttpClientHandler.SupportsProxy
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 23
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets a value that indicates whether the handler supports proxy settings.
  syntax:
    content: public virtual bool SupportsProxy { get; }
    content.vb: Public Overridable ReadOnly Property SupportsProxy As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the if the handler supports proxy settings; otherwise false. The default value is true.
- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  id: SupportsRedirectConfiguration
  parent: System.Net.Http.HttpClientHandler
  name: SupportsRedirectConfiguration
  fullName: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 28
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets a value that indicates whether the handler supports configuration settings for the <xref href="System.Net.Http.HttpClientHandler.AllowAutoRedirect" data-throw-if-not-resolved="false"></xref> and <xref href="System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" data-throw-if-not-resolved="false"></xref> properties.
  syntax:
    content: public virtual bool SupportsRedirectConfiguration { get; }
    content.vb: Public Overridable ReadOnly Property SupportsRedirectConfiguration As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the if the handler supports configuration settings for the <xref href="System.Net.Http.HttpClientHandler.AllowAutoRedirect" data-throw-if-not-resolved="false"></xref> and <xref href="System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" data-throw-if-not-resolved="false"></xref> properties; otherwise false. The default value is true.
- uid: System.Net.Http.HttpClientHandler.UseCookies
  id: UseCookies
  parent: System.Net.Http.HttpClientHandler
  name: UseCookies
  fullName: System.Net.Http.HttpClientHandler.UseCookies
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 33
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether the handler uses the  <xref href="System.Net.Http.HttpClientHandler.CookieContainer" data-throw-if-not-resolved="false"></xref> property  to store server cookies and uses these cookies when sending requests.
  syntax:
    content: public bool UseCookies { get; set; }
    content.vb: Public Property UseCookies As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the if the handler supports uses the  <xref href="System.Net.Http.HttpClientHandler.CookieContainer" data-throw-if-not-resolved="false"></xref> property  to store server cookies and uses these cookies when sending requests; otherwise false. The default value is true.
- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.Http.HttpClientHandler
  name: UseDefaultCredentials
  fullName: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 75
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets a value that controls whether default credentials are sent with requests by the handler.
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    content.vb: Public Property UseDefaultCredentials As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the default credentials are used; otherwise false. The default value is false.
- uid: System.Net.Http.HttpClientHandler.UseProxy
  id: UseProxy
  parent: System.Net.Http.HttpClientHandler
  name: UseProxy
  fullName: System.Net.Http.HttpClientHandler.UseProxy
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 57
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether the handler uses a proxy for requests.
  syntax:
    content: public bool UseProxy { get; set; }
    content.vb: Public Property UseProxy As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the handler should use a proxy for requests; otherwise false. The default value is true.
- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpClientHandler
  name: Dispose(Boolean)
  fullName: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 163
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Releases the unmanaged resources used by the <xref href="System.Net.Http.HttpClientHandler" data-throw-if-not-resolved="false"></xref> and optionally disposes of the managed resources.
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to releases only unmanaged resources.
  overridden: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClientHandler
  name: SendAsync(HttpRequestMessage, Threading.CancellationToken)
  fullName: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 93
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Creates an instance of  <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> based on the information provided in the <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref> as an operation that will not block.
  syntax:
    content: protected override Threading.Tasks.Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, Threading.CancellationToken cancellationToken)
    content.vb: Protected Overrides Function SendAsync(request As HttpRequestMessage, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of HttpResponseMessage)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The HTTP request message.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: Returns <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
  overridden: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  exceptions:
  - type: System.ArgumentNullException
    description: The *request* was null.
references:
- uid: System.Net.Http
  isExternal: false
  name: System.Net.Http
  fullName: System.Net.Http
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: false
  name: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Net.Http.HttpMessageHandler.Dispose
  parent: System.Net.Http.HttpMessageHandler
  isExternal: false
  name: Dispose()
  fullName: System.Net.Http.HttpMessageHandler.Dispose()
  spec.csharp:
  - uid: System.Net.Http.HttpMessageHandler.Dispose
    name: Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageHandler.Dispose
    name: Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.DecompressionMethods
  parent: System.Net
  isExternal: false
  name: DecompressionMethods
  fullName: System.Net.DecompressionMethods
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Net.Http.ClientCertificateOption
  parent: System.Net.Http
  isExternal: false
  name: ClientCertificateOption
  fullName: System.Net.Http.ClientCertificateOption
- uid: System.Net.CookieContainer
  isExternal: false
  name: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: false
  name: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Net.IWebProxy
  isExternal: false
  name: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
  parent: System.Net.Http.HttpMessageHandler
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpMessageHandler
  isExternal: true
  name: SendAsync(HttpRequestMessage, Threading.CancellationToken)
  fullName: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    fullName: System.Net.Http.HttpMessageHandler.SendAsync
  - name: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    fullName: System.Net.Http.HttpMessageHandler.SendAsync
  - name: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<HttpResponseMessage>
  name.vb: Threading.Tasks.Task(Of HttpResponseMessage)
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task<>
  name.vb: Threading.Tasks.Task(Of )
  fullName: System.Threading.Tasks.Task<>
  fullName.vb: System.Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
