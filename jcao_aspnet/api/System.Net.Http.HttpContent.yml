items:
- uid: System.Net.Http.HttpContent
  id: HttpContent
  parent: System.Net.Http
  children:
  - System.Net.Http.HttpContent.#ctor
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.CreateContentReadStreamAsync
  - System.Net.Http.HttpContent.Dispose
  - System.Net.Http.HttpContent.Dispose(System.Boolean)
  - System.Net.Http.HttpContent.Headers
  - System.Net.Http.HttpContent.LoadIntoBufferAsync
  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  - System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - System.Net.Http.HttpContent.ReadAsStreamAsync
  - System.Net.Http.HttpContent.ReadAsStringAsync
  - System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.TryComputeLength(System.Int64@)
  name: HttpContent
  fullName: System.Net.Http.HttpContent
  type: Class
  source:
    remote: &o0
      path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
    startLine: 14
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: A base class representing an HTTP entity body and content headers.
  syntax:
    content: 'public abstract class HttpContent : IDisposable'
    content.vb: Public MustInherit Class HttpContent Inherits IDisposable
  inheritance:
  - System.Object
- uid: System.Net.Http.HttpContent.#ctor
  id: '#ctor'
  parent: System.Net.Http.HttpContent
  name: HttpContent()
  fullName: System.Net.Http.HttpContent.HttpContent()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
    startLine: 154
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Initializes a new instance of the <xref href="System.Net.Http.HttpContent" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected HttpContent()
    content.vb: Protected Sub New
- uid: System.Net.Http.HttpContent.Headers
  id: Headers
  parent: System.Net.Http.HttpContent
  name: Headers
  fullName: System.Net.Http.HttpContent.Headers
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
    startLine: 120
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets the HTTP content headers as defined in RFC 2616.
  syntax:
    content: public HttpContentHeaders Headers { get; }
    content.vb: Public ReadOnly Property Headers As HttpContentHeaders
    parameters: []
    return:
      type: System.Net.Http.Headers.HttpContentHeaders
      description: Returns <xref href="System.Net.Http.Headers.HttpContentHeaders" data-throw-if-not-resolved="false"></xref>.The content headers as defined in RFC 2616.
- uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  id: CopyToAsync(System.IO.Stream)
  parent: System.Net.Http.HttpContent
  name: CopyToAsync(IO.Stream)
  fullName: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  type: Method
  source:
    remote: &o1
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 104
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the *stream* parameter.
  syntax:
    content: public Threading.Tasks.Task CopyToAsync(IO.Stream stream)
    content.vb: Public Function CopyToAsync(stream As IO.Stream) As Threading.Tasks.Task
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The target stream.
    return:
      type: System.Threading.Tasks.Task
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
- uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  id: CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.HttpContent
  name: CopyToAsync(IO.Stream, TransportContext)
  fullName: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream, System.Net.TransportContext)
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 105
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the *stream* parameter.
  syntax:
    content: public Threading.Tasks.Task CopyToAsync(IO.Stream stream, TransportContext context)
    content.vb: Public Function CopyToAsync(stream As IO.Stream, context As TransportContext) As Threading.Tasks.Task
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The target stream.
    - id: context
      type: System.Net.TransportContext
      description: Information about the transport (channel binding token, for example). This parameter may be null.
    return:
      type: System.Threading.Tasks.Task
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
- uid: System.Net.Http.HttpContent.CreateContentReadStreamAsync
  id: CreateContentReadStreamAsync
  parent: System.Net.Http.HttpContent
  name: CreateContentReadStreamAsync()
  fullName: System.Net.Http.HttpContent.CreateContentReadStreamAsync()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
    startLine: 449
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Serialize the HTTP content to a memory stream as an asynchronous operation.
  syntax:
    content: protected virtual Threading.Tasks.Task<IO.Stream> CreateContentReadStreamAsync()
    content.vb: Protected Overridable Function CreateContentReadStreamAsync As Threading.Tasks.Task(Of IO.Stream)
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: Returns <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
- uid: System.Net.Http.HttpContent.Dispose
  id: Dispose
  parent: System.Net.Http.HttpContent
  name: Dispose()
  fullName: System.Net.Http.HttpContent.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
    startLine: 554
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Releases the unmanaged resources and disposes of the managed resources used by the <xref href="System.Net.Http.HttpContent" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.Net.Http.HttpContent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpContent
  name: Dispose(Boolean)
  fullName: System.Net.Http.HttpContent.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
    startLine: 536
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Releases the unmanaged resources used by the <xref href="System.Net.Http.HttpContent" data-throw-if-not-resolved="false"></xref> and optionally disposes of the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to releases only unmanaged resources.
- uid: System.Net.Http.HttpContent.LoadIntoBufferAsync
  id: LoadIntoBufferAsync
  parent: System.Net.Http.HttpContent
  name: LoadIntoBufferAsync()
  fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
    startLine: 362
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Serialize the HTTP content to a memory buffer as an asynchronous operation.
  syntax:
    content: public Threading.Tasks.Task LoadIntoBufferAsync()
    content.vb: Public Function LoadIntoBufferAsync As Threading.Tasks.Task
    return:
      type: System.Threading.Tasks.Task
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
- uid: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  id: LoadIntoBufferAsync(System.Int64)
  parent: System.Net.Http.HttpContent
  name: LoadIntoBufferAsync(Int64)
  fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
    startLine: 370
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Serialize the HTTP content to a memory buffer as an asynchronous operation.
  syntax:
    content: public Threading.Tasks.Task LoadIntoBufferAsync(long maxBufferSize)
    content.vb: Public Function LoadIntoBufferAsync(maxBufferSize As Long) As Threading.Tasks.Task
    parameters:
    - id: maxBufferSize
      type: System.Int64
      description: The maximum size, in bytes, of the buffer to use.
    return:
      type: System.Threading.Tasks.Task
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
- uid: System.Net.Http.HttpContent.ReadAsByteArrayAsync
  id: ReadAsByteArrayAsync
  parent: System.Net.Http.HttpContent
  name: ReadAsByteArrayAsync()
  fullName: System.Net.Http.HttpContent.ReadAsByteArrayAsync()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
    startLine: 246
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Serialize the HTTP content to a byte array as an asynchronous operation.
  syntax:
    content: public Threading.Tasks.Task<byte[]> ReadAsByteArrayAsync()
    content.vb: Public Function ReadAsByteArrayAsync As Threading.Tasks.Task(Of Byte())
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: Returns <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
- uid: System.Net.Http.HttpContent.ReadAsStreamAsync
  id: ReadAsStreamAsync
  parent: System.Net.Http.HttpContent
  name: ReadAsStreamAsync()
  fullName: System.Net.Http.HttpContent.ReadAsStreamAsync()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
    startLine: 265
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.
  syntax:
    content: public Threading.Tasks.Task<IO.Stream> ReadAsStreamAsync()
    content.vb: Public Function ReadAsStreamAsync As Threading.Tasks.Task(Of IO.Stream)
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: Returns <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
- uid: System.Net.Http.HttpContent.ReadAsStringAsync
  id: ReadAsStringAsync
  parent: System.Net.Http.HttpContent
  name: ReadAsStringAsync()
  fullName: System.Net.Http.HttpContent.ReadAsStringAsync()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
    startLine: 165
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Serialize the HTTP content to a string as an asynchronous operation.
  syntax:
    content: public Threading.Tasks.Task<string> ReadAsStringAsync()
    content.vb: Public Function ReadAsStringAsync As Threading.Tasks.Task(Of String)
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Returns <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
- uid: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.HttpContent
  name: SerializeToStreamAsync(IO.Stream, TransportContext)
  fullName: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream, System.Net.TransportContext)
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 114
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Serialize the HTTP content to a stream as an asynchronous operation.
  syntax:
    content: protected abstract Threading.Tasks.Task SerializeToStreamAsync(IO.Stream stream, TransportContext context)
    content.vb: Protected MustOverride Function SerializeToStreamAsync(stream As IO.Stream, context As TransportContext) As Threading.Tasks.Task
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The target stream.
    - id: context
      type: System.Net.TransportContext
      description: Information about the transport (channel binding token, for example). This parameter may be null.
    return:
      type: System.Threading.Tasks.Task
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
- uid: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)
  id: TryComputeLength(System.Int64@)
  parent: System.Net.Http.HttpContent
  name: TryComputeLength(out Int64)
  name.vb: TryComputeLength(ByRef Int64)
  fullName: System.Net.Http.HttpContent.TryComputeLength(out System.Int64)
  fullName.vb: System.Net.Http.HttpContent.TryComputeLength(ByRef System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpContent.cs
    startLine: 471
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Determines whether the HTTP content has a valid length in bytes.
  syntax:
    content: protected abstract bool TryComputeLength(out long length)
    content.vb: Protected MustOverride Function TryComputeLength(ByRef length As Long) As Boolean
    parameters:
    - id: length
      type: System.Int64
      description: The length in bytes of the HTTP content.
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if *length* is a valid length; otherwise, false.
references:
- uid: System.Net.Http
  isExternal: false
  name: System.Net.Http
  fullName: System.Net.Http
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.Http.Headers.HttpContentHeaders
  parent: System.Net.Http.Headers
  isExternal: false
  name: HttpContentHeaders
  fullName: System.Net.Http.Headers.HttpContentHeaders
- uid: System.Net.Http.Headers
  isExternal: false
  name: System.Net.Http.Headers
  fullName: System.Net.Http.Headers
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Net.TransportContext
  isExternal: false
  name: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<IO.Stream>
  name.vb: Threading.Tasks.Task(Of IO.Stream)
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.IO.Stream
    name: IO.Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: IO.Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task<>
  name.vb: Threading.Tasks.Task(Of )
  fullName: System.Threading.Tasks.Task<>
  fullName.vb: System.Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Threading.Tasks.Task{System.Byte[]}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Byte[]>
  name.vb: Threading.Tasks.Task(Of Byte())
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  fullName.vb: System.Threading.Tasks.Task(Of System.Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.String}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<String>
  name.vb: Threading.Tasks.Task(Of String)
  fullName: System.Threading.Tasks.Task<System.String>
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
