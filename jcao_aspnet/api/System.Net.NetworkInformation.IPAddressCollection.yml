items:
- uid: System.Net.NetworkInformation.IPAddressCollection
  id: IPAddressCollection
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.IPAddressCollection.#ctor
  - System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)
  - System.Net.NetworkInformation.IPAddressCollection.Clear
  - System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)
  - System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)
  - System.Net.NetworkInformation.IPAddressCollection.Count
  - System.Net.NetworkInformation.IPAddressCollection.GetEnumerator
  - System.Net.NetworkInformation.IPAddressCollection.IsReadOnly
  - System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)
  - System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)
  name: IPAddressCollection
  fullName: System.Net.NetworkInformation.IPAddressCollection
  type: Class
  source:
    remote: &o0
      path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 8
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  summary: Stores a set of <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> types.
  syntax:
    content: 'public class IPAddressCollection : Collections.Generic.ICollection<IPAddress>, Collections.Generic.IEnumerable<IPAddress>, Collections.IEnumerable'
    content.vb: Public Class IPAddressCollection Inherits Collections.Generic.ICollection(Of IPAddress) Implements Collections.Generic.IEnumerable(Of IPAddress), Collections.IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.Net.IPAddress}
  - System.Collections.IEnumerable
- uid: System.Net.NetworkInformation.IPAddressCollection.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.IPAddressCollection
  name: IPAddressCollection()
  fullName: System.Net.NetworkInformation.IPAddressCollection.IPAddressCollection()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 10
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  summary: Initializes a new instance of the <xref href="System.Net.NetworkInformation.IPAddressCollection" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected IPAddressCollection()
    content.vb: Protected Sub New
- uid: System.Net.NetworkInformation.IPAddressCollection.Count
  id: Count
  parent: System.Net.NetworkInformation.IPAddressCollection
  name: Count
  fullName: System.Net.NetworkInformation.IPAddressCollection.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 19
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  summary: Gets the number of <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> types in this collection.
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> value that contains the number of <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> types in this collection.
- uid: System.Net.NetworkInformation.IPAddressCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Net.NetworkInformation.IPAddressCollection
  name: IsReadOnly
  fullName: System.Net.NetworkInformation.IPAddressCollection.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 27
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  summary: Gets a value that indicates whether access to this collection is read-only.
  syntax:
    content: public virtual bool IsReadOnly { get; }
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true in all cases.
- uid: System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Net.NetworkInformation.IPAddressCollection
  name: Item[Int32]
  name.vb: Item(Int32)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Item[System.Int32]
  fullName.vb: System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 55
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  summary: Gets the <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> at the specific index of the collection.
  syntax:
    content: public virtual IPAddress this[int index] { get; }
    content.vb: Public Overridable ReadOnly Property Item(index As Integer) As IPAddress
    parameters:
    - id: index
      type: System.Int32
      description: The index of interest.
    return:
      type: System.Net.IPAddress
      description: The <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> at the specific index in the collection.
- uid: System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)
  id: Add(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.IPAddressCollection
  name: Add(IPAddress)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 35
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  summary: Throws a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref> because this operation is not supported for this collection.
  syntax:
    content: public virtual void Add(IPAddress address)
    content.vb: Public Overridable Sub Add(address As IPAddress)
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: The object to be added to the collection.
- uid: System.Net.NetworkInformation.IPAddressCollection.Clear
  id: Clear
  parent: System.Net.NetworkInformation.IPAddressCollection
  name: Clear()
  fullName: System.Net.NetworkInformation.IPAddressCollection.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 68
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  summary: Throws a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref> because this operation is not supported for this collection.
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
- uid: System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)
  id: Contains(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.IPAddressCollection
  name: Contains(IPAddress)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 40
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  summary: Checks whether the collection contains the specified <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual bool Contains(IPAddress address)
    content.vb: Public Overridable Function Contains(address As IPAddress) As Boolean
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: The <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> object to be searched in the collection.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> object exists in the collection; otherwise, false.
- uid: System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)
  id: CopyTo(System.Net.IPAddress[],System.Int32)
  parent: System.Net.NetworkInformation.IPAddressCollection
  name: CopyTo(IPAddress[], Int32)
  name.vb: CopyTo(IPAddress(), Int32)
  fullName: System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[], System.Int32)
  fullName.vb: System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 14
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  summary: Copies the elements in this collection to a one-dimensional array of type <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void CopyTo(IPAddress[] array, int offset)
    content.vb: Public Overridable Sub CopyTo(array As IPAddress(), offset As Integer)
    parameters:
    - id: array
      type: System.Net.IPAddress[]
      description: A one-dimensional array that receives a copy of the collection.
    - id: offset
      type: System.Int32
      description: The zero-based index in *array* at which the copy begins.
  exceptions:
  - type: System.ArgumentNullException
    description: '*array* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* is less than zero.'
  - type: System.ArgumentException
    description: '*array* is multidimensional.-or- The number of elements in this <xref href="System.Net.NetworkInformation.IPAddressCollection" data-throw-if-not-resolved="false"></xref> is greater than the available space from *offset* to the end of the destination *array*.'
  - type: System.InvalidCastException
    description: The elements in this <xref href="System.Net.NetworkInformation.IPAddressCollection" data-throw-if-not-resolved="false"></xref> cannot be cast automatically to the type of the destination *array*.
- uid: System.Net.NetworkInformation.IPAddressCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Net.NetworkInformation.IPAddressCollection
  name: GetEnumerator()
  fullName: System.Net.NetworkInformation.IPAddressCollection.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 50
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  summary: Returns an object that can be used to iterate through this collection.
  syntax:
    content: public virtual Collections.Generic.IEnumerator<IPAddress> GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As Collections.Generic.IEnumerator(Of IPAddress)
    return:
      type: System.Collections.Generic.IEnumerator{System.Net.IPAddress}
      description: An object that implements the <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> interface and provides access to the <xref href="System.Net.NetworkInformation.IPAddressCollection" data-throw-if-not-resolved="false"></xref> types in this collection.
- uid: System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)
  id: Remove(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.IPAddressCollection
  name: Remove(IPAddress)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 63
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  summary: Throws a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref> because this operation is not supported for this collection.
  syntax:
    content: public virtual bool Remove(IPAddress address)
    content.vb: Public Overridable Function Remove(address As IPAddress) As Boolean
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: The object to be removed.
    return:
      type: System.Boolean
      description: Always throws a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref>.
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{System.Net.IPAddress}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<IPAddress>
  name.vb: Collections.Generic.IEnumerable(Of IPAddress)
  fullName: System.Collections.Generic.IEnumerable<System.Net.IPAddress>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Net.IPAddress)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  name.vb: Collections.Generic.IEnumerable(Of )
  fullName: System.Collections.Generic.IEnumerable<>
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Net.IPAddress[]
  isExternal: false
  name: IPAddress[]
  name.vb: IPAddress()
  fullName: System.Net.IPAddress[]
  fullName.vb: System.Net.IPAddress()
  spec.csharp:
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerator{System.Net.IPAddress}
  definition: System.Collections.Generic.IEnumerator`1
  name: Collections.Generic.IEnumerator<IPAddress>
  name.vb: Collections.Generic.IEnumerator(Of IPAddress)
  fullName: System.Collections.Generic.IEnumerator<System.Net.IPAddress>
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Net.IPAddress)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerator<>
  name.vb: Collections.Generic.IEnumerator(Of )
  fullName: System.Collections.Generic.IEnumerator<>
  fullName.vb: System.Collections.Generic.IEnumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
