items:
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties
  id: IPv4InterfaceProperties
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor
  - System.Net.NetworkInformation.IPv4InterfaceProperties.Index
  - System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
  - System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
  - System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled
  - System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled
  - System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu
  - System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins
  name: IPv4InterfaceProperties
  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties
  type: Class
  source:
    remote: &o0
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPv4InterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPv4InterfaceProperties.cs
    startLine: 9
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Provides information about network interfaces that support Internet Protocol version 4 (IPv4).
  syntax:
    content: 'public abstract class IPv4InterfaceProperties : object'
    content.vb: Public MustInherit Class IPv4InterfaceProperties Inherits Object
  inheritance:
  - System.Object
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  name: IPv4InterfaceProperties()
  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties.IPv4InterfaceProperties()
  type: Constructor
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 203
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Initializes a new instance of the <xref href="System.Net.NetworkInformation.IPv4InterfaceProperties" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected IPv4InterfaceProperties()
    content.vb: Protected Sub New
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Index
  id: Index
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  name: Index
  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties.Index
  type: Property
  source:
    remote: *o0
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPv4InterfaceProperties.cs
    startLine: 34
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets the index of the network interface associated with the Internet Protocol version 4 (IPv4) address.
  syntax:
    content: public abstract int Index { get; }
    content.vb: Public MustOverride ReadOnly Property Index As Integer
    parameters: []
    return:
      type: System.Int32
      description: An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that contains the index of the IPv4 interface.
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
  id: IsAutomaticPrivateAddressingActive
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  name: IsAutomaticPrivateAddressingActive
  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
  type: Property
  source:
    remote: *o0
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPv4InterfaceProperties.cs
    startLine: 24
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that indicates whether this interface has an automatic private IP addressing (APIPA) address.
  syntax:
    content: public abstract bool IsAutomaticPrivateAddressingActive { get; }
    content.vb: Public MustOverride ReadOnly Property IsAutomaticPrivateAddressingActive As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the interface uses an APIPA address; otherwise, false.
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
  id: IsAutomaticPrivateAddressingEnabled
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  name: IsAutomaticPrivateAddressingEnabled
  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
  type: Property
  source:
    remote: *o0
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPv4InterfaceProperties.cs
    startLine: 29
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that indicates whether this interface has automatic private IP addressing (APIPA) enabled.
  syntax:
    content: public abstract bool IsAutomaticPrivateAddressingEnabled { get; }
    content.vb: Public MustOverride ReadOnly Property IsAutomaticPrivateAddressingEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the interface uses APIPA; otherwise, false.
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled
  id: IsDhcpEnabled
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  name: IsDhcpEnabled
  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled
  type: Property
  source:
    remote: *o0
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPv4InterfaceProperties.cs
    startLine: 19
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that indicates whether the interface is configured to use a Dynamic Host Configuration Protocol (DHCP) server to obtain an IP address.
  syntax:
    content: public abstract bool IsDhcpEnabled { get; }
    content.vb: Public MustOverride ReadOnly Property IsDhcpEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the interface is configured to obtain an IP address from a DHCP server; otherwise, false.
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled
  id: IsForwardingEnabled
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  name: IsForwardingEnabled
  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled
  type: Property
  source:
    remote: *o0
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPv4InterfaceProperties.cs
    startLine: 39
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that indicates whether this interface can forward (route) packets.
  syntax:
    content: public abstract bool IsForwardingEnabled { get; }
    content.vb: Public MustOverride ReadOnly Property IsForwardingEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this interface routes packets; otherwise false.
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu
  id: Mtu
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  name: Mtu
  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu
  type: Property
  source:
    remote: *o0
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPv4InterfaceProperties.cs
    startLine: 44
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets the maximum transmission unit (MTU) for this network interface.
  syntax:
    content: public abstract int Mtu { get; }
    content.vb: Public MustOverride ReadOnly Property Mtu As Integer
    parameters: []
    return:
      type: System.Int32
      description: An <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> value that specifies the MTU.
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins
  id: UsesWins
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  name: UsesWins
  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins
  type: Property
  source:
    remote: *o0
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPv4InterfaceProperties.cs
    startLine: 14
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that indicates whether an interface uses Windows Internet Name Service (WINS).
  syntax:
    content: public abstract bool UsesWins { get; }
    content.vb: Public MustOverride ReadOnly Property UsesWins As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the interface uses WINS; otherwise, false.
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
