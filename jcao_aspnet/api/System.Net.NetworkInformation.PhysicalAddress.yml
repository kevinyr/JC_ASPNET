items:
- uid: System.Net.NetworkInformation.PhysicalAddress
  commentId: T:System.Net.NetworkInformation.PhysicalAddress
  id: PhysicalAddress
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.PhysicalAddress.#ctor(System.Byte[])
  - System.Net.NetworkInformation.PhysicalAddress.Equals(System.Object)
  - System.Net.NetworkInformation.PhysicalAddress.GetAddressBytes
  - System.Net.NetworkInformation.PhysicalAddress.GetHashCode
  - System.Net.NetworkInformation.PhysicalAddress.None
  - System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)
  - System.Net.NetworkInformation.PhysicalAddress.ToString
  langs:
  - csharp
  - vb
  name: PhysicalAddress
  nameWithType: PhysicalAddress
  fullName: System.Net.NetworkInformation.PhysicalAddress
  type: Class
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PhysicalAddress
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 330
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  syntax:
    content: 'public class PhysicalAddress : object'
    content.vb: >-
      Public Class PhysicalAddress
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.NetworkInformation.PhysicalAddress.None
  commentId: F:System.Net.NetworkInformation.PhysicalAddress.None
  id: None
  parent: System.Net.NetworkInformation.PhysicalAddress
  langs:
  - csharp
  - vb
  name: None
  nameWithType: PhysicalAddress.None
  fullName: System.Net.NetworkInformation.PhysicalAddress.None
  type: Field
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: None
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 332
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  syntax:
    content: public static readonly PhysicalAddress None
    content.vb: Public Shared ReadOnly None As PhysicalAddress
    return:
      type: System.Net.NetworkInformation.PhysicalAddress
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.NetworkInformation.PhysicalAddress.#ctor(System.Byte[])
  commentId: M:System.Net.NetworkInformation.PhysicalAddress.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Net.NetworkInformation.PhysicalAddress
  langs:
  - csharp
  - vb
  name: PhysicalAddress(Byte[])
  nameWithType: PhysicalAddress.PhysicalAddress(Byte[])
  fullName: System.Net.NetworkInformation.PhysicalAddress.PhysicalAddress(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 333
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  syntax:
    content: public PhysicalAddress(byte[] address)
    content.vb: Public Sub New(address As Byte())
    parameters:
    - id: address
      type: System.Byte[]
  nameWithType.vb: PhysicalAddress.PhysicalAddress(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.NetworkInformation.PhysicalAddress.PhysicalAddress(System.Byte())
  name.vb: PhysicalAddress(Byte())
- uid: System.Net.NetworkInformation.PhysicalAddress.Equals(System.Object)
  commentId: M:System.Net.NetworkInformation.PhysicalAddress.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.NetworkInformation.PhysicalAddress
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: PhysicalAddress.Equals(Object)
  fullName: System.Net.NetworkInformation.PhysicalAddress.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 334
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  syntax:
    content: public override bool Equals(object comparand)
    content.vb: Public Overrides Function Equals(comparand As Object) As Boolean
    parameters:
    - id: comparand
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.NetworkInformation.PhysicalAddress.GetAddressBytes
  commentId: M:System.Net.NetworkInformation.PhysicalAddress.GetAddressBytes
  id: GetAddressBytes
  parent: System.Net.NetworkInformation.PhysicalAddress
  langs:
  - csharp
  - vb
  name: GetAddressBytes()
  nameWithType: PhysicalAddress.GetAddressBytes()
  fullName: System.Net.NetworkInformation.PhysicalAddress.GetAddressBytes()
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAddressBytes
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 335
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  syntax:
    content: public byte[] GetAddressBytes()
    content.vb: Public Function GetAddressBytes As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.NetworkInformation.PhysicalAddress.GetHashCode
  commentId: M:System.Net.NetworkInformation.PhysicalAddress.GetHashCode
  id: GetHashCode
  parent: System.Net.NetworkInformation.PhysicalAddress
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PhysicalAddress.GetHashCode()
  fullName: System.Net.NetworkInformation.PhysicalAddress.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 336
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)
  commentId: M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.NetworkInformation.PhysicalAddress
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: PhysicalAddress.Parse(String)
  fullName: System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 337
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  syntax:
    content: public static PhysicalAddress Parse(string address)
    content.vb: Public Shared Function Parse(address As String) As PhysicalAddress
    parameters:
    - id: address
      type: System.String
    return:
      type: System.Net.NetworkInformation.PhysicalAddress
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.NetworkInformation.PhysicalAddress.ToString
  commentId: M:System.Net.NetworkInformation.PhysicalAddress.ToString
  id: ToString
  parent: System.Net.NetworkInformation.PhysicalAddress
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PhysicalAddress.ToString()
  fullName: System.Net.NetworkInformation.PhysicalAddress.ToString()
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 338
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Net.NetworkInformation
  commentId: N:System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  nameWithType: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.NetworkInformation.PhysicalAddress
  commentId: T:System.Net.NetworkInformation.PhysicalAddress
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PhysicalAddress
  nameWithType: PhysicalAddress
  fullName: System.Net.NetworkInformation.PhysicalAddress
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
