items:
- uid: System.Net.NetworkInformation.Ping
  commentId: T:System.Net.NetworkInformation.Ping
  id: Ping
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.Ping.#ctor
  - System.Net.NetworkInformation.Ping.Dispose
  - System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  langs:
  - csharp
  - vb
  name: Ping
  nameWithType: Ping
  fullName: System.Net.NetworkInformation.Ping
  type: Class
  source:
    remote:
      path: src/System.Net.Ping/ref/System.Net.Ping.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Ping
    path: src/System.Net.Ping/ref/System.Net.Ping.Manual.cs
    startLine: 9
  assemblies:
  - System.Net.Ping
  namespace: System.Net.NetworkInformation
  syntax:
    content: 'public class Ping : IDisposable'
    content.vb: >-
      Public Class Ping
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.NetworkInformation.Ping.#ctor
  commentId: M:System.Net.NetworkInformation.Ping.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  - vb
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Ping/ref/System.Net.Ping.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Ping/ref/System.Net.Ping.cs
    startLine: 39
  assemblies:
  - System.Net.Ping
  namespace: System.Net.NetworkInformation
  syntax:
    content: public Ping()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  commentId: M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  id: SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  - vb
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  type: Method
  source:
    remote:
      path: src/System.Net.Ping/ref/System.Net.Ping.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPingAsync
    path: src/System.Net.Ping/ref/System.Net.Ping.cs
    startLine: 40
  assemblies:
  - System.Net.Ping
  namespace: System.Net.NetworkInformation
  syntax:
    content: public Threading.Tasks.Task<PingReply> SendPingAsync(IPAddress address)
    content.vb: Public Function SendPingAsync(address As IPAddress) As Threading.Tasks.Task(Of PingReply)
    parameters:
    - id: address
      type: System.Net.IPAddress
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  commentId: M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  id: SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  - vb
  name: SendPingAsync(IPAddress, Int32)
  nameWithType: Ping.SendPingAsync(IPAddress, Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Ping/ref/System.Net.Ping.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPingAsync
    path: src/System.Net.Ping/ref/System.Net.Ping.cs
    startLine: 41
  assemblies:
  - System.Net.Ping
  namespace: System.Net.NetworkInformation
  syntax:
    content: public Threading.Tasks.Task<PingReply> SendPingAsync(IPAddress address, int timeout)
    content.vb: Public Function SendPingAsync(address As IPAddress, timeout As Integer) As Threading.Tasks.Task(Of PingReply)
    parameters:
    - id: address
      type: System.Net.IPAddress
    - id: timeout
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  commentId: M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  - vb
  name: SendPingAsync(IPAddress, Int32, Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress, Int32, Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress, System.Int32, System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Ping/ref/System.Net.Ping.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPingAsync
    path: src/System.Net.Ping/ref/System.Net.Ping.cs
    startLine: 42
  assemblies:
  - System.Net.Ping
  namespace: System.Net.NetworkInformation
  syntax:
    content: public Threading.Tasks.Task<PingReply> SendPingAsync(IPAddress address, int timeout, byte[] buffer)
    content.vb: Public Function SendPingAsync(address As IPAddress, timeout As Integer, buffer As Byte()) As Threading.Tasks.Task(Of PingReply)
    parameters:
    - id: address
      type: System.Net.IPAddress
    - id: timeout
      type: System.Int32
    - id: buffer
      type: System.Byte[]
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  nameWithType.vb: Ping.SendPingAsync(IPAddress, Int32, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress, System.Int32, System.Byte())
  name.vb: SendPingAsync(IPAddress, Int32, Byte())
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  commentId: M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  - vb
  name: SendPingAsync(IPAddress, Int32, Byte[], PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress, Int32, Byte[], PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress, System.Int32, System.Byte[], System.Net.NetworkInformation.PingOptions)
  type: Method
  source:
    remote:
      path: src/System.Net.Ping/ref/System.Net.Ping.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPingAsync
    path: src/System.Net.Ping/ref/System.Net.Ping.cs
    startLine: 43
  assemblies:
  - System.Net.Ping
  namespace: System.Net.NetworkInformation
  syntax:
    content: public Threading.Tasks.Task<PingReply> SendPingAsync(IPAddress address, int timeout, byte[] buffer, PingOptions options)
    content.vb: Public Function SendPingAsync(address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As Threading.Tasks.Task(Of PingReply)
    parameters:
    - id: address
      type: System.Net.IPAddress
    - id: timeout
      type: System.Int32
    - id: buffer
      type: System.Byte[]
    - id: options
      type: System.Net.NetworkInformation.PingOptions
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  nameWithType.vb: Ping.SendPingAsync(IPAddress, Int32, Byte(), PingOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress, System.Int32, System.Byte(), System.Net.NetworkInformation.PingOptions)
  name.vb: SendPingAsync(IPAddress, Int32, Byte(), PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  commentId: M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  id: SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  - vb
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Ping/ref/System.Net.Ping.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPingAsync
    path: src/System.Net.Ping/ref/System.Net.Ping.cs
    startLine: 44
  assemblies:
  - System.Net.Ping
  namespace: System.Net.NetworkInformation
  syntax:
    content: public Threading.Tasks.Task<PingReply> SendPingAsync(string hostNameOrAddress)
    content.vb: Public Function SendPingAsync(hostNameOrAddress As String) As Threading.Tasks.Task(Of PingReply)
    parameters:
    - id: hostNameOrAddress
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  commentId: M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  id: SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  - vb
  name: SendPingAsync(String, Int32)
  nameWithType: Ping.SendPingAsync(String, Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Ping/ref/System.Net.Ping.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPingAsync
    path: src/System.Net.Ping/ref/System.Net.Ping.cs
    startLine: 45
  assemblies:
  - System.Net.Ping
  namespace: System.Net.NetworkInformation
  syntax:
    content: public Threading.Tasks.Task<PingReply> SendPingAsync(string hostNameOrAddress, int timeout)
    content.vb: Public Function SendPingAsync(hostNameOrAddress As String, timeout As Integer) As Threading.Tasks.Task(Of PingReply)
    parameters:
    - id: hostNameOrAddress
      type: System.String
    - id: timeout
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  commentId: M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  id: SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  - vb
  name: SendPingAsync(String, Int32, Byte[])
  nameWithType: Ping.SendPingAsync(String, Int32, Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(System.String, System.Int32, System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Ping/ref/System.Net.Ping.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPingAsync
    path: src/System.Net.Ping/ref/System.Net.Ping.cs
    startLine: 46
  assemblies:
  - System.Net.Ping
  namespace: System.Net.NetworkInformation
  syntax:
    content: public Threading.Tasks.Task<PingReply> SendPingAsync(string hostNameOrAddress, int timeout, byte[] buffer)
    content.vb: Public Function SendPingAsync(hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As Threading.Tasks.Task(Of PingReply)
    parameters:
    - id: hostNameOrAddress
      type: System.String
    - id: timeout
      type: System.Int32
    - id: buffer
      type: System.Byte[]
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  nameWithType.vb: Ping.SendPingAsync(String, Int32, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.NetworkInformation.Ping.SendPingAsync(System.String, System.Int32, System.Byte())
  name.vb: SendPingAsync(String, Int32, Byte())
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  commentId: M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  - vb
  name: SendPingAsync(String, Int32, Byte[], PingOptions)
  nameWithType: Ping.SendPingAsync(String, Int32, Byte[], PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(System.String, System.Int32, System.Byte[], System.Net.NetworkInformation.PingOptions)
  type: Method
  source:
    remote:
      path: src/System.Net.Ping/ref/System.Net.Ping.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPingAsync
    path: src/System.Net.Ping/ref/System.Net.Ping.cs
    startLine: 47
  assemblies:
  - System.Net.Ping
  namespace: System.Net.NetworkInformation
  syntax:
    content: public Threading.Tasks.Task<PingReply> SendPingAsync(string hostNameOrAddress, int timeout, byte[] buffer, PingOptions options)
    content.vb: Public Function SendPingAsync(hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As Threading.Tasks.Task(Of PingReply)
    parameters:
    - id: hostNameOrAddress
      type: System.String
    - id: timeout
      type: System.Int32
    - id: buffer
      type: System.Byte[]
    - id: options
      type: System.Net.NetworkInformation.PingOptions
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  nameWithType.vb: Ping.SendPingAsync(String, Int32, Byte(), PingOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.NetworkInformation.Ping.SendPingAsync(System.String, System.Int32, System.Byte(), System.Net.NetworkInformation.PingOptions)
  name.vb: SendPingAsync(String, Int32, Byte(), PingOptions)
- uid: System.Net.NetworkInformation.Ping.Dispose
  commentId: M:System.Net.NetworkInformation.Ping.Dispose
  id: Dispose
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Ping.Dispose()
  fullName: System.Net.NetworkInformation.Ping.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Net.Ping/ref/System.Net.Ping.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Ping/ref/System.Net.Ping.Manual.cs
    startLine: 11
  assemblies:
  - System.Net.Ping
  namespace: System.Net.NetworkInformation
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  commentId: M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Ping/ref/System.Net.Ping.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Ping/ref/System.Net.Ping.Manual.cs
    startLine: 12
  assemblies:
  - System.Net.Ping
  namespace: System.Net.NetworkInformation
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.Net.NetworkInformation
  commentId: N:System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  nameWithType: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  commentId: '!:System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}'
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<PingReply>
  nameWithType: Threading.Tasks.Task<PingReply>
  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply>
  nameWithType.vb: Threading.Tasks.Task(Of PingReply)
  fullname.vb: System.Threading.Tasks.Task(Of System.Net.NetworkInformation.PingReply)
  name.vb: Threading.Tasks.Task(Of PingReply)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.NetworkInformation.PingReply
    name: PingReply
    nameWithType: PingReply
    fullName: System.Net.NetworkInformation.PingReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.PingReply
    name: PingReply
    nameWithType: PingReply
    fullName: System.Net.NetworkInformation.PingReply
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: false
  name: Threading.Tasks.Task<>
  nameWithType: Threading.Tasks.Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Threading.Tasks.Task(Of )
  fullname.vb: System.Threading.Tasks.Task(Of )
  name.vb: Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    nameWithType: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Net.NetworkInformation.PingOptions
  commentId: T:System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
