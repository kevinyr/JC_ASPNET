items:
- uid: System.Net.Security.AuthenticatedStream
  id: AuthenticatedStream
  parent: System.Net.Security
  children:
  - System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.IsAuthenticated
  - System.Net.Security.AuthenticatedStream.IsEncrypted
  - System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
  - System.Net.Security.AuthenticatedStream.IsServer
  - System.Net.Security.AuthenticatedStream.IsSigned
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  name: AuthenticatedStream
  fullName: System.Net.Security.AuthenticatedStream
  type: Class
  source:
    remote: &o0
      path: src/System.Net.Security/src/System/Net/SecureProtocols/AuthenticatedStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Security/src/System/Net/SecureProtocols/AuthenticatedStream.cs
    startLine: 9
  assemblies:
  - System.Net.Security
  namespace: System.Net.Security
  summary: Provides methods for passing credentials across a stream and requesting or performing authentication for client-server applications.
  syntax:
    content: 'public abstract class AuthenticatedStream : IO.Stream'
    content.vb: Public MustInherit Class AuthenticatedStream Inherits IO.Stream
  inheritance:
  - System.Object
- uid: System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.AuthenticatedStream
  name: AuthenticatedStream(IO.Stream, Boolean)
  fullName: System.Net.Security.AuthenticatedStream.AuthenticatedStream(System.IO.Stream, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Security/ref/System.Net.Security.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Security/ref/System.Net.Security.cs
    startLine: 9
  assemblies:
  - System.Net.Security
  namespace: System.Net.Security
  summary: Initializes a new instance of the <xref href="System.Net.Security.AuthenticatedStream" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected AuthenticatedStream(IO.Stream innerStream, bool leaveInnerStreamOpen)
    content.vb: Protected Sub New(innerStream As IO.Stream, leaveInnerStreamOpen As Boolean)
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object used by the <xref href="System.Net.Security.AuthenticatedStream" data-throw-if-not-resolved="false"></xref>  for sending and receiving data.
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: A <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> that indicates whether closing this <xref href="System.Net.Security.AuthenticatedStream" data-throw-if-not-resolved="false"></xref>  object also closes *innerStream*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*innerStream* is null.-or-*innerStream* is equal to <xref href="System.IO.Stream.Null" data-throw-if-not-resolved="false"></xref>.'
- uid: System.Net.Security.AuthenticatedStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.AuthenticatedStream
  name: IsAuthenticated
  fullName: System.Net.Security.AuthenticatedStream.IsAuthenticated
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Security/src/System/Net/SecureProtocols/AuthenticatedStream.cs
    startLine: 75
  assemblies:
  - System.Net.Security
  namespace: System.Net.Security
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that indicates whether authentication was successful.
  syntax:
    content: public abstract bool IsAuthenticated { get; }
    content.vb: Public MustOverride ReadOnly Property IsAuthenticated As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if successful authentication occurred; otherwise, false.
- uid: System.Net.Security.AuthenticatedStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.AuthenticatedStream
  name: IsEncrypted
  fullName: System.Net.Security.AuthenticatedStream.IsEncrypted
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Security/src/System/Net/SecureProtocols/AuthenticatedStream.cs
    startLine: 77
  assemblies:
  - System.Net.Security
  namespace: System.Net.Security
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that indicates whether data sent using this <xref href="System.Net.Security.AuthenticatedStream" data-throw-if-not-resolved="false"></xref> is encrypted.
  syntax:
    content: public abstract bool IsEncrypted { get; }
    content.vb: Public MustOverride ReadOnly Property IsEncrypted As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, false.
- uid: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.AuthenticatedStream
  name: IsMutuallyAuthenticated
  fullName: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Security/src/System/Net/SecureProtocols/AuthenticatedStream.cs
    startLine: 76
  assemblies:
  - System.Net.Security
  namespace: System.Net.Security
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that indicates whether both server and client have been authenticated.
  syntax:
    content: public abstract bool IsMutuallyAuthenticated { get; }
    content.vb: Public MustOverride ReadOnly Property IsMutuallyAuthenticated As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the client and server have been authenticated; otherwise, false.
- uid: System.Net.Security.AuthenticatedStream.IsServer
  id: IsServer
  parent: System.Net.Security.AuthenticatedStream
  name: IsServer
  fullName: System.Net.Security.AuthenticatedStream.IsServer
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Security/src/System/Net/SecureProtocols/AuthenticatedStream.cs
    startLine: 79
  assemblies:
  - System.Net.Security
  namespace: System.Net.Security
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that indicates whether the local side of the connection was authenticated as the server.
  syntax:
    content: public abstract bool IsServer { get; }
    content.vb: Public MustOverride ReadOnly Property IsServer As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the local endpoint was authenticated as the server side of a client-server authenticated connection; false if the local endpoint was authenticated as the client.
- uid: System.Net.Security.AuthenticatedStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.AuthenticatedStream
  name: IsSigned
  fullName: System.Net.Security.AuthenticatedStream.IsSigned
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Security/src/System/Net/SecureProtocols/AuthenticatedStream.cs
    startLine: 78
  assemblies:
  - System.Net.Security
  namespace: System.Net.Security
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that indicates whether the data sent using this stream is signed.
  syntax:
    content: public abstract bool IsSigned { get; }
    content.vb: Public MustOverride ReadOnly Property IsSigned As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the data is signed before being transmitted; otherwise, false.
- uid: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  id: LeaveInnerStreamOpen
  parent: System.Net.Security.AuthenticatedStream
  name: LeaveInnerStreamOpen
  fullName: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Security/src/System/Net/SecureProtocols/AuthenticatedStream.cs
    startLine: 30
  assemblies:
  - System.Net.Security
  namespace: System.Net.Security
  summary: Gets whether the stream used by this <xref href="System.Net.Security.AuthenticatedStream" data-throw-if-not-resolved="false"></xref> for sending and receiving data has been left open.
  syntax:
    content: public bool LeaveInnerStreamOpen { get; }
    content.vb: Public ReadOnly Property LeaveInnerStreamOpen As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the inner stream has been left open; otherwise, false.
- uid: System.Net.Security.AuthenticatedStream.InnerStream
  id: InnerStream
  parent: System.Net.Security.AuthenticatedStream
  name: InnerStream
  fullName: System.Net.Security.AuthenticatedStream.InnerStream
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Security/src/System/Net/SecureProtocols/AuthenticatedStream.cs
    startLine: 38
  assemblies:
  - System.Net.Security
  namespace: System.Net.Security
  summary: Gets the stream used by this <xref href="System.Net.Security.AuthenticatedStream" data-throw-if-not-resolved="false"></xref> for sending and receiving data.
  syntax:
    content: protected IO.Stream InnerStream { get; }
    content.vb: Protected ReadOnly Property InnerStream As IO.Stream
    parameters: []
    return:
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object.
- uid: System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.AuthenticatedStream
  name: Dispose(Boolean)
  fullName: System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Security/src/System/Net/SecureProtocols/AuthenticatedStream.cs
    startLine: 46
  assemblies:
  - System.Net.Security
  namespace: System.Net.Security
  summary: Releases the unmanaged resources used by the <xref href="System.Net.Security.AuthenticatedStream" data-throw-if-not-resolved="false"></xref> and optionally releases the managed resources.
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
references:
- uid: System.Net.Security
  isExternal: false
  name: System.Net.Security
  fullName: System.Net.Security
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
