items:
- uid: System.Net.Sockets.UdpClient
  id: UdpClient
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.UdpClient.#ctor
  - System.Net.Sockets.UdpClient.#ctor(System.Int32)
  - System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)
  - System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)
  - System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)
  - System.Net.Sockets.UdpClient.Active
  - System.Net.Sockets.UdpClient.Available
  - System.Net.Sockets.UdpClient.Client
  - System.Net.Sockets.UdpClient.Dispose
  - System.Net.Sockets.UdpClient.Dispose(System.Boolean)
  - System.Net.Sockets.UdpClient.DontFragment
  - System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)
  - System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpClient.EnableBroadcast
  - System.Net.Sockets.UdpClient.ExclusiveAddressUse
  - System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)
  - System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)
  - System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)
  - System.Net.Sockets.UdpClient.MulticastLoopback
  - System.Net.Sockets.UdpClient.ReceiveAsync
  - System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)
  - System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)
  - System.Net.Sockets.UdpClient.Ttl
  name: UdpClient
  fullName: System.Net.Sockets.UdpClient
  type: Class
  source:
    remote: &o0
      path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 13
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Provides User Datagram Protocol (UDP) network services.
  syntax:
    content: 'public class UdpClient : IDisposable'
    content.vb: Public Class UdpClient Inherits IDisposable
  inheritance:
  - System.Object
- uid: System.Net.Sockets.UdpClient.#ctor
  id: '#ctor'
  parent: System.Net.Sockets.UdpClient
  name: UdpClient()
  fullName: System.Net.Sockets.UdpClient.UdpClient()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 23
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Initializes a new instance of the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public UdpClient()
    content.vb: Public Sub New
  exceptions:
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
- uid: System.Net.Sockets.UdpClient.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Net.Sockets.UdpClient
  name: UdpClient(Int32)
  fullName: System.Net.Sockets.UdpClient.UdpClient(System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 47
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Initializes a new instance of the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> class and binds it to the local port number provided.
  syntax:
    content: public UdpClient(int port)
    content.vb: Public Sub New(port As Integer)
    parameters:
    - id: port
      type: System.Int32
      description: The local port number from which you intend to communicate.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The *port* parameter is greater than <xref href="System.Net.IPEndPoint.MaxPort" data-throw-if-not-resolved="false"></xref> or less than <xref href="System.Net.IPEndPoint.MinPort" data-throw-if-not-resolved="false"></xref>.
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
- uid: System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)
  id: '#ctor(System.Int32,System.Net.Sockets.AddressFamily)'
  parent: System.Net.Sockets.UdpClient
  name: UdpClient(Int32, AddressFamily)
  fullName: System.Net.Sockets.UdpClient.UdpClient(System.Int32, System.Net.Sockets.AddressFamily)
  type: Constructor
  source:
    remote: &o1
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 455
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Initializes a new instance of the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> class and binds it to the local port number provided.
  syntax:
    content: public UdpClient(int port, AddressFamily family)
    content.vb: Public Sub New(port As Integer, family As AddressFamily)
    parameters:
    - id: port
      type: System.Int32
      description: The port on which to listen for incoming connection attempts.
    - id: family
      type: System.Net.Sockets.AddressFamily
      description: One of the <xref href="System.Net.Sockets.AddressFamily" data-throw-if-not-resolved="false"></xref> values that specifies the addressing scheme of the socket.
  exceptions:
  - type: System.ArgumentException
    description: '*family* is not <xref href="System.Net.Sockets.AddressFamily.InterNetwork" data-throw-if-not-resolved="false"></xref> or <xref href="System.Net.Sockets.AddressFamily.InterNetworkV6" data-throw-if-not-resolved="false"></xref>.'
  - type: System.ArgumentOutOfRangeException
    description: '*port* is greater than <xref href="System.Net.IPEndPoint.MaxPort" data-throw-if-not-resolved="false"></xref> or less than <xref href="System.Net.IPEndPoint.MinPort" data-throw-if-not-resolved="false"></xref>.'
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
- uid: System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)
  id: '#ctor(System.Net.IPEndPoint)'
  parent: System.Net.Sockets.UdpClient
  name: UdpClient(IPEndPoint)
  fullName: System.Net.Sockets.UdpClient.UdpClient(System.Net.IPEndPoint)
  type: Constructor
  source:
    remote: *o1
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 456
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Initializes a new instance of the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> class and binds it to the specified local endpoint.
  syntax:
    content: public UdpClient(IPEndPoint localEP)
    content.vb: Public Sub New(localEP As IPEndPoint)
    parameters:
    - id: localEP
      type: System.Net.IPEndPoint
      description: An <xref href="System.Net.IPEndPoint" data-throw-if-not-resolved="false"></xref> that respresents the local endpoint to which you bind the UDP connection.
  exceptions:
  - type: System.ArgumentNullException
    description: '*localEP* is null.'
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
- uid: System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)
  id: '#ctor(System.Net.Sockets.AddressFamily)'
  parent: System.Net.Sockets.UdpClient
  name: UdpClient(AddressFamily)
  fullName: System.Net.Sockets.UdpClient.UdpClient(System.Net.Sockets.AddressFamily)
  type: Constructor
  source:
    remote: *o1
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 457
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Initializes a new instance of the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public UdpClient(AddressFamily family)
    content.vb: Public Sub New(family As AddressFamily)
    parameters:
    - id: family
      type: System.Net.Sockets.AddressFamily
      description: One of the <xref href="System.Net.Sockets.AddressFamily" data-throw-if-not-resolved="false"></xref> values that specifies the addressing scheme of the socket.
  exceptions:
  - type: System.ArgumentException
    description: '*family* is not <xref href="System.Net.Sockets.AddressFamily.InterNetwork" data-throw-if-not-resolved="false"></xref> or <xref href="System.Net.Sockets.AddressFamily.InterNetworkV6" data-throw-if-not-resolved="false"></xref>.'
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
- uid: System.Net.Sockets.UdpClient.Active
  id: Active
  parent: System.Net.Sockets.UdpClient
  name: Active
  fullName: System.Net.Sockets.UdpClient.Active
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 117
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a value indicating whether a default remote host has been established.
  syntax:
    content: protected bool Active { get; set; }
    content.vb: Protected Property Active As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if a connection is active; otherwise, false.
- uid: System.Net.Sockets.UdpClient.Available
  id: Available
  parent: System.Net.Sockets.UdpClient
  name: Available
  fullName: System.Net.Sockets.UdpClient.Available
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 129
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the amount of data received from the network that is available to read.
  syntax:
    content: public int Available { get; }
    content.vb: Public ReadOnly Property Available As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of bytes of data received from the network.
  exceptions:
  - type: System.Net.Sockets.SocketException
    description: An error occurred while attempting to access the socket. See the Remarks section for more information.
  - type: System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed.
- uid: System.Net.Sockets.UdpClient.Client
  id: Client
  parent: System.Net.Sockets.UdpClient
  name: Client
  fullName: System.Net.Sockets.UdpClient.Client
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 104
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets the underlying network <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public Socket Client { get; set; }
    content.vb: Public Property Client As Socket
    parameters: []
    return:
      type: System.Net.Sockets.Socket
      description: The underlying Network <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
- uid: System.Net.Sockets.UdpClient.DontFragment
  id: DontFragment
  parent: System.Net.Sockets.UdpClient
  name: DontFragment
  fullName: System.Net.Sockets.UdpClient.DontFragment
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 149
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that specifies whether the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> allows Internet Protocol (IP) datagrams to be fragmented.
  syntax:
    content: public bool DontFragment { get; set; }
    content.vb: Public Property DontFragment As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> allows datagram fragmentation; otherwise, false. The default is true.
  exceptions:
  - type: System.NotSupportedException
    description: This property can be set only for sockets that use the <xref href="System.Net.Sockets.AddressFamily.InterNetwork" data-throw-if-not-resolved="false"></xref> flag or the <xref href="System.Net.Sockets.AddressFamily.InterNetworkV6" data-throw-if-not-resolved="false"></xref> flag.
- uid: System.Net.Sockets.UdpClient.EnableBroadcast
  id: EnableBroadcast
  parent: System.Net.Sockets.UdpClient
  name: EnableBroadcast
  fullName: System.Net.Sockets.UdpClient.EnableBroadcast
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 173
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that specifies whether the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> may send or receive broadcast packets.
  syntax:
    content: public bool EnableBroadcast { get; set; }
    content.vb: Public Property EnableBroadcast As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> allows broadcast packets; otherwise, false. The default is false.
- uid: System.Net.Sockets.UdpClient.ExclusiveAddressUse
  id: ExclusiveAddressUse
  parent: System.Net.Sockets.UdpClient
  name: ExclusiveAddressUse
  fullName: System.Net.Sockets.UdpClient.ExclusiveAddressUse
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 185
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that specifies whether the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> allows only one client to use a port.
  syntax:
    content: public bool ExclusiveAddressUse { get; set; }
    content.vb: Public Property ExclusiveAddressUse As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> allows only one client to use a specific port; otherwise, false. The default is true for Windows Server 2003 and Windows XP Service Pack 2 and later, and false for all other versions.
  exceptions:
  - type: System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the underlying socket.
  - type: System.ObjectDisposedException
    description: The underlying <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed.
- uid: System.Net.Sockets.UdpClient.MulticastLoopback
  id: MulticastLoopback
  parent: System.Net.Sockets.UdpClient
  name: MulticastLoopback
  fullName: System.Net.Sockets.UdpClient.MulticastLoopback
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 161
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that specifies whether outgoing multicast packets are delivered to the sending application.
  syntax:
    content: public bool MulticastLoopback { get; set; }
    content.vb: Public Property MulticastLoopback As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> receives outgoing multicast packets; otherwise, false.
- uid: System.Net.Sockets.UdpClient.Ttl
  id: Ttl
  parent: System.Net.Sockets.UdpClient
  name: Ttl
  fullName: System.Net.Sockets.UdpClient.Ttl
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 137
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public short Ttl { get; set; }
    content.vb: Public Property Ttl As Short
    parameters: []
    return:
      type: System.Int16
      description: The TTL value.
- uid: System.Net.Sockets.UdpClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpClient
  name: Dispose()
  fullName: System.Net.Sockets.UdpClient.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 222
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.Net.Sockets.UdpClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Sockets.UdpClient
  name: Dispose(Boolean)
  fullName: System.Net.Sockets.UdpClient.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 227
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Releases the unmanaged resources used by the <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
- uid: System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)
  id: DropMulticastGroup(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpClient
  name: DropMulticastGroup(IPAddress)
  fullName: System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 468
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Leaves a multicast group.
  syntax:
    content: public void DropMulticastGroup(IPAddress multicastAddr)
    content.vb: Public Sub DropMulticastGroup(multicastAddr As IPAddress)
    parameters:
    - id: multicastAddr
      type: System.Net.IPAddress
      description: The <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> of the multicast group to leave.
  exceptions:
  - type: System.ObjectDisposedException
    description: The underlying <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed.
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
  - type: System.ArgumentException
    description: The IP address is not compatible with the <xref href="System.Net.Sockets.AddressFamily" data-throw-if-not-resolved="false"></xref> value that defines the addressing scheme of the socket.
  - type: System.ArgumentNullException
    description: '*multicastAddr* is null.'
- uid: System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)
  id: DropMulticastGroup(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpClient
  name: DropMulticastGroup(IPAddress, Int32)
  fullName: System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress, System.Int32)
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 469
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Leaves a multicast group.
  syntax:
    content: public void DropMulticastGroup(IPAddress multicastAddr, int ifindex)
    content.vb: Public Sub DropMulticastGroup(multicastAddr As IPAddress, ifindex As Integer)
    parameters:
    - id: multicastAddr
      type: System.Net.IPAddress
      description: The <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> of the multicast group to leave.
    - id: ifindex
      type: System.Int32
      description: The local address of the multicast group to leave.
  exceptions:
  - type: System.ObjectDisposedException
    description: The underlying <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed.
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
  - type: System.ArgumentException
    description: The IP address is not compatible with the <xref href="System.Net.Sockets.AddressFamily" data-throw-if-not-resolved="false"></xref> value that defines the addressing scheme of the socket.
  - type: System.ArgumentNullException
    description: '*multicastAddr* is null.'
- uid: System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)
  id: JoinMulticastGroup(System.Int32,System.Net.IPAddress)
  parent: System.Net.Sockets.UdpClient
  name: JoinMulticastGroup(Int32, IPAddress)
  fullName: System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32, System.Net.IPAddress)
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 470
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Adds a <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> to a multicast group.
  syntax:
    content: public void JoinMulticastGroup(int ifindex, IPAddress multicastAddr)
    content.vb: Public Sub JoinMulticastGroup(ifindex As Integer, multicastAddr As IPAddress)
    parameters:
    - id: ifindex
      type: System.Int32
      description: The interface index associated with the local IP address on which to join the multicast group.
    - id: multicastAddr
      type: System.Net.IPAddress
      description: The multicast <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> of the group you want to join.
  exceptions:
  - type: System.ObjectDisposedException
    description: The underlying <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed.
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
- uid: System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)
  id: JoinMulticastGroup(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpClient
  name: JoinMulticastGroup(IPAddress)
  fullName: System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 471
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Adds a <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> to a multicast group.
  syntax:
    content: public void JoinMulticastGroup(IPAddress multicastAddr)
    content.vb: Public Sub JoinMulticastGroup(multicastAddr As IPAddress)
    parameters:
    - id: multicastAddr
      type: System.Net.IPAddress
      description: The multicast <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> of the group you want to join.
  exceptions:
  - type: System.ObjectDisposedException
    description: The underlying <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed.
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
  - type: System.ArgumentException
    description: The IP address is not compatible with the <xref href="System.Net.Sockets.AddressFamily" data-throw-if-not-resolved="false"></xref> value that defines the addressing scheme of the socket.
- uid: System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)
  id: JoinMulticastGroup(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpClient
  name: JoinMulticastGroup(IPAddress, Int32)
  fullName: System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress, System.Int32)
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 472
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Adds a <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> to a multicast group with the specified Time to Live (TTL).
  syntax:
    content: public void JoinMulticastGroup(IPAddress multicastAddr, int timeToLive)
    content.vb: Public Sub JoinMulticastGroup(multicastAddr As IPAddress, timeToLive As Integer)
    parameters:
    - id: multicastAddr
      type: System.Net.IPAddress
      description: The <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> of the multicast group to join.
    - id: timeToLive
      type: System.Int32
      description: The Time to Live (TTL), measured in router hops.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The TTL provided is not between 0 and 255
  - type: System.ObjectDisposedException
    description: The underlying <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed.
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
  - type: System.ArgumentNullException
    description: '*multicastAddr* is null.'
  - type: System.ArgumentException
    description: The IP address is not compatible with the <xref href="System.Net.Sockets.AddressFamily" data-throw-if-not-resolved="false"></xref> value that defines the addressing scheme of the socket.
- uid: System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)
  id: JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)
  parent: System.Net.Sockets.UdpClient
  name: JoinMulticastGroup(IPAddress, IPAddress)
  fullName: System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress, System.Net.IPAddress)
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 473
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Adds a <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> to a multicast group.
  syntax:
    content: public void JoinMulticastGroup(IPAddress multicastAddr, IPAddress localAddress)
    content.vb: Public Sub JoinMulticastGroup(multicastAddr As IPAddress, localAddress As IPAddress)
    parameters:
    - id: multicastAddr
      type: System.Net.IPAddress
      description: The multicast <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> of the group you want to join.
    - id: localAddress
      type: System.Net.IPAddress
      description: The local <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ObjectDisposedException
    description: The underlying <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed.
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
- uid: System.Net.Sockets.UdpClient.ReceiveAsync
  id: ReceiveAsync
  parent: System.Net.Sockets.UdpClient
  name: ReceiveAsync()
  fullName: System.Net.Sockets.UdpClient.ReceiveAsync()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 650
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Returns a UDP datagram asynchronously that was sent by a remote host.
  syntax:
    content: public Threading.Tasks.Task<UdpReceiveResult> ReceiveAsync()
    content.vb: Public Function ReceiveAsync As Threading.Tasks.Task(Of UdpReceiveResult)
    return:
      type: System.Threading.Tasks.Task{System.Net.Sockets.UdpReceiveResult}
      description: Returns <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
  exceptions:
  - type: System.ObjectDisposedException
    description: The underlying <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>  has been closed.
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
- uid: System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)
  id: SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)
  parent: System.Net.Sockets.UdpClient
  name: SendAsync(Byte[], Int32, IPEndPoint)
  name.vb: SendAsync(Byte(), Int32, IPEndPoint)
  fullName: System.Net.Sockets.UdpClient.SendAsync(System.Byte[], System.Int32, System.Net.IPEndPoint)
  fullName.vb: System.Net.Sockets.UdpClient.SendAsync(System.Byte(), System.Int32, System.Net.IPEndPoint)
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 475
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends a UDP datagram asynchronously to a remote host.
  syntax:
    content: public Threading.Tasks.Task<int> SendAsync(byte[] datagram, int bytes, IPEndPoint endPoint)
    content.vb: Public Function SendAsync(datagram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: datagram
      type: System.Byte[]
      description: An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that specifies the UDP datagram that you intend to send represented as an array of bytes.
    - id: bytes
      type: System.Int32
      description: The number of bytes in the datagram.
    - id: endPoint
      type: System.Net.IPEndPoint
      description: An <xref href="System.Net.IPEndPoint" data-throw-if-not-resolved="false"></xref> that represents the host and port to which to send the datagram.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Returns <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    description: '*dgram* is null.'
  - type: System.InvalidOperationException
    description: <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> has already established a default remote host.
  - type: System.ObjectDisposedException
    description: <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> is closed.
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
- uid: System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)
  id: SendAsync(System.Byte[],System.Int32,System.String,System.Int32)
  parent: System.Net.Sockets.UdpClient
  name: SendAsync(Byte[], Int32, String, Int32)
  name.vb: SendAsync(Byte(), Int32, String, Int32)
  fullName: System.Net.Sockets.UdpClient.SendAsync(System.Byte[], System.Int32, System.String, System.Int32)
  fullName.vb: System.Net.Sockets.UdpClient.SendAsync(System.Byte(), System.Int32, System.String, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UDPClient.cs
    startLine: 630
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends a UDP datagram asynchronously to a remote host.
  syntax:
    content: public Threading.Tasks.Task<int> SendAsync(byte[] datagram, int bytes, string hostname, int port)
    content.vb: Public Function SendAsync(datagram As Byte(), bytes As Integer, hostname As String, port As Integer) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: datagram
      type: System.Byte[]
      description: An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that specifies the UDP datagram that you intend to send represented as an array of bytes.
    - id: bytes
      type: System.Int32
      description: The number of bytes in the datagram.
    - id: hostname
      type: System.String
      description: The name of the remote host to which you intend to send the datagram.
    - id: port
      type: System.Int32
      description: The remote port number with which you intend to communicate.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Returns <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    description: '*dgram* is null.'
  - type: System.InvalidOperationException
    description: The <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> has already established a default remote host.
  - type: System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpClient" data-throw-if-not-resolved="false"></xref> is closed.
  - type: System.Net.Sockets.SocketException
    description: An error occurred when accessing the socket. See the Remarks section for more information.
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.AddressFamily
  parent: System.Net.Sockets
  isExternal: false
  name: AddressFamily
  fullName: System.Net.Sockets.AddressFamily
- uid: System.Net.IPEndPoint
  isExternal: false
  name: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.Socket
  parent: System.Net.Sockets
  isExternal: false
  name: Socket
  fullName: System.Net.Sockets.Socket
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Threading.Tasks.Task{System.Net.Sockets.UdpReceiveResult}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<UdpReceiveResult>
  name.vb: Threading.Tasks.Task(Of UdpReceiveResult)
  fullName: System.Threading.Tasks.Task<System.Net.Sockets.UdpReceiveResult>
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Sockets.UdpReceiveResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.Sockets.UdpReceiveResult
    name: UdpReceiveResult
    fullName: System.Net.Sockets.UdpReceiveResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.Sockets.UdpReceiveResult
    name: UdpReceiveResult
    fullName: System.Net.Sockets.UdpReceiveResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task<>
  name.vb: Threading.Tasks.Task(Of )
  fullName: System.Threading.Tasks.Task<>
  fullName.vb: System.Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.Int32}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Int32>
  name.vb: Threading.Tasks.Task(Of Int32)
  fullName: System.Threading.Tasks.Task<System.Int32>
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Net.Sockets.SocketException
  isExternal: false
  name: SocketException
  fullName: System.Net.Sockets.SocketException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
