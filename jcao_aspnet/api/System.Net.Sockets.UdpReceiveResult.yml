items:
- uid: System.Net.Sockets.UdpReceiveResult
  id: UdpReceiveResult
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)
  - System.Net.Sockets.UdpReceiveResult.Buffer
  - System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)
  - System.Net.Sockets.UdpReceiveResult.Equals(System.Object)
  - System.Net.Sockets.UdpReceiveResult.GetHashCode
  - System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  - System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  - System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
  name: UdpReceiveResult
  fullName: System.Net.Sockets.UdpReceiveResult
  type: Struct
  source:
    remote: &o0
      path: src/System.Net.Sockets/src/System/Net/Sockets/UdpReceiveResult.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Sockets/src/System/Net/Sockets/UdpReceiveResult.cs
    startLine: 8
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Presents UDP receive result information from a call to the <xref href="System.Net.Sockets.UdpClient.ReceiveAsync" data-throw-if-not-resolved="false"></xref> method.
  syntax:
    content: 'public struct UdpReceiveResult : IEquatable<UdpReceiveResult>'
    content.vb: Public Structure UdpReceiveResult Implements IEquatable(Of UdpReceiveResult)
  implements:
  - System.IEquatable{System.Net.Sockets.UdpReceiveResult}
- uid: System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)
  id: '#ctor(System.Byte[],System.Net.IPEndPoint)'
  parent: System.Net.Sockets.UdpReceiveResult
  name: UdpReceiveResult(Byte[], IPEndPoint)
  name.vb: UdpReceiveResult(Byte(), IPEndPoint)
  fullName: System.Net.Sockets.UdpReceiveResult.UdpReceiveResult(System.Byte[], System.Net.IPEndPoint)
  fullName.vb: System.Net.Sockets.UdpReceiveResult.UdpReceiveResult(System.Byte(), System.Net.IPEndPoint)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 481
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Initializes a new instance of the <xref href="System.Net.Sockets.UdpReceiveResult" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public UdpReceiveResult(byte[] buffer, IPEndPoint remoteEndPoint)
    content.vb: Public Sub New(buffer As Byte(), remoteEndPoint As IPEndPoint)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: A buffer for data to receive in the UDP packet.
    - id: remoteEndPoint
      type: System.Net.IPEndPoint
      description: The remote endpoint of the UDP packet.
- uid: System.Net.Sockets.UdpReceiveResult.Buffer
  id: Buffer
  parent: System.Net.Sockets.UdpReceiveResult
  name: Buffer
  fullName: System.Net.Sockets.UdpReceiveResult.Buffer
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UdpReceiveResult.cs
    startLine: 29
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets a buffer with the data received in the UDP packet.
  syntax:
    content: public byte[] Buffer { get; }
    content.vb: Public ReadOnly Property Buffer As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: Returns <xref href="System.Byte" data-throw-if-not-resolved="false"></xref>.A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array with the data received in the UDP packet.
- uid: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.Sockets.UdpReceiveResult
  name: RemoteEndPoint
  fullName: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UdpReceiveResult.cs
    startLine: 37
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the remote endpoint from which the UDP packet was received.
  syntax:
    content: public IPEndPoint RemoteEndPoint { get; }
    content.vb: Public ReadOnly Property RemoteEndPoint As IPEndPoint
    parameters: []
    return:
      type: System.Net.IPEndPoint
      description: Returns <xref href="System.Net.IPEndPoint" data-throw-if-not-resolved="false"></xref>.The remote endpoint from which the UDP packet was received.
- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)
  id: Equals(System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  name: Equals(UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UdpReceiveResult.cs
    startLine: 60
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Returns a value that indicates whether this instance is equal to a specified object.
  syntax:
    content: public bool Equals(UdpReceiveResult other)
    content.vb: Public Function Equals(other As UdpReceiveResult) As Boolean
    parameters:
    - id: other
      type: System.Net.Sockets.UdpReceiveResult
      description: The object to compare with this instance.
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if *other* is an instance of <xref href="System.Net.Sockets.UdpReceiveResult" data-throw-if-not-resolved="false"></xref> and equals the value of the instance; otherwise, false.
- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Sockets.UdpReceiveResult
  name: Equals(Object)
  fullName: System.Net.Sockets.UdpReceiveResult.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UdpReceiveResult.cs
    startLine: 50
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Returns a value that indicates whether this instance is equal to a specified object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with this instance.
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if *obj* is an instance of <xref href="System.Net.Sockets.UdpReceiveResult" data-throw-if-not-resolved="false"></xref> and equals the value of the instance; otherwise, false.
- uid: System.Net.Sockets.UdpReceiveResult.GetHashCode
  id: GetHashCode
  parent: System.Net.Sockets.UdpReceiveResult
  name: GetHashCode()
  fullName: System.Net.Sockets.UdpReceiveResult.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UdpReceiveResult.cs
    startLine: 45
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.The hash code.
- uid: System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  id: op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  name: Equality(UdpReceiveResult, UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.Equality(System.Net.Sockets.UdpReceiveResult, System.Net.Sockets.UdpReceiveResult)
  type: Operator
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UdpReceiveResult.cs
    startLine: 65
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Tests whether two specified <xref href="System.Net.Sockets.UdpReceiveResult" data-throw-if-not-resolved="false"></xref> instances are equivalent.
  syntax:
    content: public static bool operator ==(UdpReceiveResult left, UdpReceiveResult right)
    content.vb: Public Shared Operator =(left As UdpReceiveResult, right As UdpReceiveResult) As Boolean
    parameters:
    - id: left
      type: System.Net.Sockets.UdpReceiveResult
      description: The <xref href="System.Net.Sockets.UdpReceiveResult" data-throw-if-not-resolved="false"></xref> instance that is to the left of the equality operator.
    - id: right
      type: System.Net.Sockets.UdpReceiveResult
      description: The <xref href="System.Net.Sockets.UdpReceiveResult" data-throw-if-not-resolved="false"></xref> instance that is to the right of the equality operator.
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if *left* and *right* are equal; otherwise, false.
- uid: System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  id: op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  name: Inequality(UdpReceiveResult, UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.Inequality(System.Net.Sockets.UdpReceiveResult, System.Net.Sockets.UdpReceiveResult)
  type: Operator
  source:
    remote: *o0
    path: src/System.Net.Sockets/src/System/Net/Sockets/UdpReceiveResult.cs
    startLine: 70
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Tests whether two specified <xref href="System.Net.Sockets.UdpReceiveResult" data-throw-if-not-resolved="false"></xref> instances are not equal.
  syntax:
    content: public static bool operator !=(UdpReceiveResult left, UdpReceiveResult right)
    content.vb: Public Shared Operator <>(left As UdpReceiveResult, right As UdpReceiveResult) As Boolean
    parameters:
    - id: left
      type: System.Net.Sockets.UdpReceiveResult
      description: The <xref href="System.Net.Sockets.UdpReceiveResult" data-throw-if-not-resolved="false"></xref> instance that is to the left of the not equal operator.
    - id: right
      type: System.Net.Sockets.UdpReceiveResult
      description: The <xref href="System.Net.Sockets.UdpReceiveResult" data-throw-if-not-resolved="false"></xref> instance that is to the right of the not equal operator.
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if *left* and *right* are unequal; otherwise, false.
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.IEquatable{System.Net.Sockets.UdpReceiveResult}
  definition: System.IEquatable`1
  name: IEquatable<UdpReceiveResult>
  name.vb: IEquatable(Of UdpReceiveResult)
  fullName: System.IEquatable<System.Net.Sockets.UdpReceiveResult>
  fullName.vb: System.IEquatable(Of System.Net.Sockets.UdpReceiveResult)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.Sockets.UdpReceiveResult
    name: UdpReceiveResult
    fullName: System.Net.Sockets.UdpReceiveResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.Sockets.UdpReceiveResult
    name: UdpReceiveResult
    fullName: System.Net.Sockets.UdpReceiveResult
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<>
  name.vb: IEquatable(Of )
  fullName: System.IEquatable<>
  fullName.vb: System.IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Net.IPEndPoint
  isExternal: false
  name: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.Sockets.UdpReceiveResult
  parent: System.Net.Sockets
  isExternal: false
  name: UdpReceiveResult
  fullName: System.Net.Sockets.UdpReceiveResult
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
