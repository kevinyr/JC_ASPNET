items:
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  id: BigInteger
  parent: System.Numerics
  children:
  - System.Numerics.BigInteger.#ctor(System.Byte[])
  - System.Numerics.BigInteger.#ctor(System.Decimal)
  - System.Numerics.BigInteger.#ctor(System.Double)
  - System.Numerics.BigInteger.#ctor(System.Int32)
  - System.Numerics.BigInteger.#ctor(System.Int64)
  - System.Numerics.BigInteger.#ctor(System.Single)
  - System.Numerics.BigInteger.#ctor(System.UInt32)
  - System.Numerics.BigInteger.#ctor(System.UInt64)
  - System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.CompareTo(System.Int64)
  - System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.CompareTo(System.UInt64)
  - System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)
  - System.Numerics.BigInteger.Equals(System.Int64)
  - System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Equals(System.Object)
  - System.Numerics.BigInteger.Equals(System.UInt64)
  - System.Numerics.BigInteger.GetHashCode
  - System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.IsEven
  - System.Numerics.BigInteger.IsOne
  - System.Numerics.BigInteger.IsPowerOfTwo
  - System.Numerics.BigInteger.IsZero
  - System.Numerics.BigInteger.Log(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)
  - System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.MinusOne
  - System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.One
  - System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)
  - System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)
  - System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64
  - System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)
  - System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)
  - System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)
  - System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  - System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)
  - System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)
  - System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)
  - System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)
  - System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)
  - System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)
  - System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  - System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)
  - System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Parse(System.String)
  - System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)
  - System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  - System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)
  - System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)
  - System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Sign
  - System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.ToByteArray
  - System.Numerics.BigInteger.ToString
  - System.Numerics.BigInteger.ToString(System.IFormatProvider)
  - System.Numerics.BigInteger.ToString(System.String)
  - System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)
  - System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)
  - System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)
  - System.Numerics.BigInteger.Zero
  langs:
  - csharp
  - vb
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
  type: Struct
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BigInteger
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 10
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: 'public struct BigInteger : IComparable, IComparable<BigInteger>, IEquatable<BigInteger>, IFormattable'
    content.vb: >-
      Public Structure BigInteger
          Implements IComparable, IComparable(Of BigInteger), IEquatable(Of BigInteger), IFormattable
  implements:
  - System.IComparable
  - System.IComparable{System.Numerics.BigInteger}
  - System.IEquatable{System.Numerics.BigInteger}
  - System.IFormattable
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Numerics.BigInteger.#ctor(System.Byte[])
  commentId: M:System.Numerics.BigInteger.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(Byte[])
  nameWithType: BigInteger.BigInteger(Byte[])
  fullName: System.Numerics.BigInteger.BigInteger(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 13
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public BigInteger(byte[] value)
    content.vb: Public Sub New(value As Byte())
    parameters:
    - id: value
      type: System.Byte[]
  nameWithType.vb: BigInteger.BigInteger(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Numerics.BigInteger.BigInteger(System.Byte())
  name.vb: BigInteger(Byte())
- uid: System.Numerics.BigInteger.#ctor(System.Decimal)
  commentId: M:System.Numerics.BigInteger.#ctor(System.Decimal)
  id: '#ctor(System.Decimal)'
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(Decimal)
  nameWithType: BigInteger.BigInteger(Decimal)
  fullName: System.Numerics.BigInteger.BigInteger(System.Decimal)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 15
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public BigInteger(decimal value)
    content.vb: Public Sub New(value As Decimal)
    parameters:
    - id: value
      type: System.Decimal
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.#ctor(System.Double)
  commentId: M:System.Numerics.BigInteger.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(Double)
  nameWithType: BigInteger.BigInteger(Double)
  fullName: System.Numerics.BigInteger.BigInteger(System.Double)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 16
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public BigInteger(double value)
    content.vb: Public Sub New(value As Double)
    parameters:
    - id: value
      type: System.Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.#ctor(System.Int32)
  commentId: M:System.Numerics.BigInteger.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(Int32)
  nameWithType: BigInteger.BigInteger(Int32)
  fullName: System.Numerics.BigInteger.BigInteger(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 17
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public BigInteger(int value)
    content.vb: Public Sub New(value As Integer)
    parameters:
    - id: value
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.#ctor(System.Int64)
  commentId: M:System.Numerics.BigInteger.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(Int64)
  nameWithType: BigInteger.BigInteger(Int64)
  fullName: System.Numerics.BigInteger.BigInteger(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 18
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public BigInteger(long value)
    content.vb: Public Sub New(value As Long)
    parameters:
    - id: value
      type: System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.#ctor(System.Single)
  commentId: M:System.Numerics.BigInteger.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(Single)
  nameWithType: BigInteger.BigInteger(Single)
  fullName: System.Numerics.BigInteger.BigInteger(System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 19
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public BigInteger(float value)
    content.vb: Public Sub New(value As Single)
    parameters:
    - id: value
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.#ctor(System.UInt32)
  commentId: M:System.Numerics.BigInteger.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(UInt32)
  nameWithType: BigInteger.BigInteger(UInt32)
  fullName: System.Numerics.BigInteger.BigInteger(System.UInt32)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 20
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public BigInteger(uint value)
    content.vb: Public Sub New(value As UInteger)
    parameters:
    - id: value
      type: System.UInt32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.#ctor(System.UInt64)
  commentId: M:System.Numerics.BigInteger.#ctor(System.UInt64)
  id: '#ctor(System.UInt64)'
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(UInt64)
  nameWithType: BigInteger.BigInteger(UInt64)
  fullName: System.Numerics.BigInteger.BigInteger(System.UInt64)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 22
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public BigInteger(ulong value)
    content.vb: Public Sub New(value As ULong)
    parameters:
    - id: value
      type: System.UInt64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.IsEven
  commentId: P:System.Numerics.BigInteger.IsEven
  id: IsEven
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: IsEven
  nameWithType: BigInteger.IsEven
  fullName: System.Numerics.BigInteger.IsEven
  type: Property
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEven
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 24
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public bool IsEven { get; }
    content.vb: Public ReadOnly Property IsEven As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Numerics.BigInteger.IsOne
  commentId: P:System.Numerics.BigInteger.IsOne
  id: IsOne
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: IsOne
  nameWithType: BigInteger.IsOne
  fullName: System.Numerics.BigInteger.IsOne
  type: Property
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsOne
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 25
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public bool IsOne { get; }
    content.vb: Public ReadOnly Property IsOne As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Numerics.BigInteger.IsPowerOfTwo
  commentId: P:System.Numerics.BigInteger.IsPowerOfTwo
  id: IsPowerOfTwo
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: IsPowerOfTwo
  nameWithType: BigInteger.IsPowerOfTwo
  fullName: System.Numerics.BigInteger.IsPowerOfTwo
  type: Property
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsPowerOfTwo
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 26
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public bool IsPowerOfTwo { get; }
    content.vb: Public ReadOnly Property IsPowerOfTwo As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Numerics.BigInteger.IsZero
  commentId: P:System.Numerics.BigInteger.IsZero
  id: IsZero
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: IsZero
  nameWithType: BigInteger.IsZero
  fullName: System.Numerics.BigInteger.IsZero
  type: Property
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsZero
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 27
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public bool IsZero { get; }
    content.vb: Public ReadOnly Property IsZero As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Numerics.BigInteger.MinusOne
  commentId: P:System.Numerics.BigInteger.MinusOne
  id: MinusOne
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: MinusOne
  nameWithType: BigInteger.MinusOne
  fullName: System.Numerics.BigInteger.MinusOne
  type: Property
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinusOne
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 28
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger MinusOne { get; }
    content.vb: Public Shared ReadOnly Property MinusOne As BigInteger
    parameters: []
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.BigInteger.One
  commentId: P:System.Numerics.BigInteger.One
  id: One
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: One
  nameWithType: BigInteger.One
  fullName: System.Numerics.BigInteger.One
  type: Property
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: One
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 29
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger One { get; }
    content.vb: Public Shared ReadOnly Property One As BigInteger
    parameters: []
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.BigInteger.Sign
  commentId: P:System.Numerics.BigInteger.Sign
  id: Sign
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Sign
  nameWithType: BigInteger.Sign
  fullName: System.Numerics.BigInteger.Sign
  type: Property
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Sign
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 30
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public int Sign { get; }
    content.vb: Public ReadOnly Property Sign As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Numerics.BigInteger.Zero
  commentId: P:System.Numerics.BigInteger.Zero
  id: Zero
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: BigInteger.Zero
  fullName: System.Numerics.BigInteger.Zero
  type: Property
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Zero
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 31
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Zero { get; }
    content.vb: Public Shared ReadOnly Property Zero As BigInteger
    parameters: []
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)
  id: Abs(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Abs(BigInteger)
  nameWithType: BigInteger.Abs(BigInteger)
  fullName: System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Abs
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 32
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Abs(BigInteger value)
    content.vb: Public Shared Function Abs(value As BigInteger) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Add(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Add(BigInteger, BigInteger)
  nameWithType: BigInteger.Add(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Add(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 33
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Add(BigInteger left, BigInteger right)
    content.vb: Public Shared Function Add(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Compare(BigInteger, BigInteger)
  nameWithType: BigInteger.Compare(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Compare(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Compare
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 34
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static int Compare(BigInteger left, BigInteger right)
    content.vb: Public Shared Function Compare(left As BigInteger, right As BigInteger) As Integer
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.CompareTo(System.Int64)
  commentId: M:System.Numerics.BigInteger.CompareTo(System.Int64)
  id: CompareTo(System.Int64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: CompareTo(Int64)
  nameWithType: BigInteger.CompareTo(Int64)
  fullName: System.Numerics.BigInteger.CompareTo(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 35
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public int CompareTo(long other)
    content.vb: Public Function CompareTo(other As Long) As Integer
    parameters:
    - id: other
      type: System.Int64
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)
  id: CompareTo(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: CompareTo(BigInteger)
  nameWithType: BigInteger.CompareTo(BigInteger)
  fullName: System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 36
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public int CompareTo(BigInteger other)
    content.vb: Public Function CompareTo(other As BigInteger) As Integer
    parameters:
    - id: other
      type: System.Numerics.BigInteger
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.CompareTo(System.UInt64)
  commentId: M:System.Numerics.BigInteger.CompareTo(System.UInt64)
  id: CompareTo(System.UInt64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: CompareTo(UInt64)
  nameWithType: BigInteger.CompareTo(UInt64)
  fullName: System.Numerics.BigInteger.CompareTo(System.UInt64)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 37
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public int CompareTo(ulong other)
    content.vb: Public Function CompareTo(other As ULong) As Integer
    parameters:
    - id: other
      type: System.UInt64
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Divide(BigInteger, BigInteger)
  nameWithType: BigInteger.Divide(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Divide(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Divide
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 39
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Divide(BigInteger dividend, BigInteger divisor)
    content.vb: Public Shared Function Divide(dividend As BigInteger, divisor As BigInteger) As BigInteger
    parameters:
    - id: dividend
      type: System.Numerics.BigInteger
    - id: divisor
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)
  commentId: M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)
  id: DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: DivRem(BigInteger, BigInteger, out BigInteger)
  nameWithType: BigInteger.DivRem(BigInteger, BigInteger, out BigInteger)
  fullName: System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger, System.Numerics.BigInteger, out System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DivRem
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 40
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger DivRem(BigInteger dividend, BigInteger divisor, out BigInteger remainder)
    content.vb: Public Shared Function DivRem(dividend As BigInteger, divisor As BigInteger, ByRef remainder As BigInteger) As BigInteger
    parameters:
    - id: dividend
      type: System.Numerics.BigInteger
    - id: divisor
      type: System.Numerics.BigInteger
    - id: remainder
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  nameWithType.vb: BigInteger.DivRem(BigInteger, BigInteger, ByRef BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger, System.Numerics.BigInteger, ByRef System.Numerics.BigInteger)
  name.vb: DivRem(BigInteger, BigInteger, ByRef BigInteger)
- uid: System.Numerics.BigInteger.Equals(System.Int64)
  commentId: M:System.Numerics.BigInteger.Equals(System.Int64)
  id: Equals(System.Int64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Equals(Int64)
  nameWithType: BigInteger.Equals(Int64)
  fullName: System.Numerics.BigInteger.Equals(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 41
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public bool Equals(long other)
    content.vb: Public Function Equals(other As Long) As Boolean
    parameters:
    - id: other
      type: System.Int64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)
  id: Equals(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Equals(BigInteger)
  nameWithType: BigInteger.Equals(BigInteger)
  fullName: System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 42
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public bool Equals(BigInteger other)
    content.vb: Public Function Equals(other As BigInteger) As Boolean
    parameters:
    - id: other
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.Equals(System.Object)
  commentId: M:System.Numerics.BigInteger.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BigInteger.Equals(Object)
  fullName: System.Numerics.BigInteger.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 43
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.BigInteger.Equals(System.UInt64)
  commentId: M:System.Numerics.BigInteger.Equals(System.UInt64)
  id: Equals(System.UInt64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Equals(UInt64)
  nameWithType: BigInteger.Equals(UInt64)
  fullName: System.Numerics.BigInteger.Equals(System.UInt64)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 44
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public bool Equals(ulong other)
    content.vb: Public Function Equals(other As ULong) As Boolean
    parameters:
    - id: other
      type: System.UInt64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.GetHashCode
  commentId: M:System.Numerics.BigInteger.GetHashCode
  id: GetHashCode
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BigInteger.GetHashCode()
  fullName: System.Numerics.BigInteger.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 46
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: GreatestCommonDivisor(BigInteger, BigInteger)
  nameWithType: BigInteger.GreatestCommonDivisor(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreatestCommonDivisor
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 47
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger GreatestCommonDivisor(BigInteger left, BigInteger right)
    content.vb: Public Shared Function GreatestCommonDivisor(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Log(System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)
  id: Log(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Log(BigInteger)
  nameWithType: BigInteger.Log(BigInteger)
  fullName: System.Numerics.BigInteger.Log(System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Log
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 48
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static double Log(BigInteger value)
    content.vb: Public Shared Function Log(value As BigInteger) As Double
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)
  commentId: M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)
  id: Log(System.Numerics.BigInteger,System.Double)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Log(BigInteger, Double)
  nameWithType: BigInteger.Log(BigInteger, Double)
  fullName: System.Numerics.BigInteger.Log(System.Numerics.BigInteger, System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Log
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 49
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static double Log(BigInteger value, double baseValue)
    content.vb: Public Shared Function Log(value As BigInteger, baseValue As Double) As Double
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    - id: baseValue
      type: System.Double
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)
  id: Log10(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Log10(BigInteger)
  nameWithType: BigInteger.Log10(BigInteger)
  fullName: System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Log10
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 50
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static double Log10(BigInteger value)
    content.vb: Public Shared Function Log10(value As BigInteger) As Double
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Max(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Max(BigInteger, BigInteger)
  nameWithType: BigInteger.Max(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Max(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Max
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 51
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Max(BigInteger left, BigInteger right)
    content.vb: Public Shared Function Max(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Min(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Min(BigInteger, BigInteger)
  nameWithType: BigInteger.Min(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Min(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Min
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 52
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Min(BigInteger left, BigInteger right)
    content.vb: Public Shared Function Min(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: ModPow(BigInteger, BigInteger, BigInteger)
  nameWithType: BigInteger.ModPow(BigInteger, BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger, System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ModPow
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 53
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger ModPow(BigInteger value, BigInteger exponent, BigInteger modulus)
    content.vb: Public Shared Function ModPow(value As BigInteger, exponent As BigInteger, modulus As BigInteger) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    - id: exponent
      type: System.Numerics.BigInteger
    - id: modulus
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Multiply(BigInteger, BigInteger)
  nameWithType: BigInteger.Multiply(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 54
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Multiply(BigInteger left, BigInteger right)
    content.vb: Public Shared Function Multiply(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)
  id: Negate(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Negate(BigInteger)
  nameWithType: BigInteger.Negate(BigInteger)
  fullName: System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Negate
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 55
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Negate(BigInteger value)
    content.vb: Public Shared Function Negate(value As BigInteger) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Addition(BigInteger, BigInteger)
  nameWithType: BigInteger.Addition(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Addition(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 56
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator +(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator +(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: BitwiseAnd(BigInteger, BigInteger)
  nameWithType: BigInteger.BitwiseAnd(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.BitwiseAnd(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_BitwiseAnd
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 57
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator &(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator And(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: BitwiseOr(BigInteger, BigInteger)
  nameWithType: BigInteger.BitwiseOr(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.BitwiseOr(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_BitwiseOr
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 58
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator |(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator Or(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)
  id: op_Decrement(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Decrement(BigInteger)
  nameWithType: BigInteger.Decrement(BigInteger)
  fullName: System.Numerics.BigInteger.Decrement(System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Decrement
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 59
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator --(BigInteger value)
    content.vb: VB cannot support this operator.
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Division(BigInteger, BigInteger)
  nameWithType: BigInteger.Division(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Division(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Division
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 60
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator /(BigInteger dividend, BigInteger divisor)
    content.vb: Public Shared Operator /(dividend As BigInteger, divisor As BigInteger) As BigInteger
    parameters:
    - id: dividend
      type: System.Numerics.BigInteger
    - id: divisor
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)
  id: op_Equality(System.Int64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Equality(Int64, BigInteger)
  nameWithType: BigInteger.Equality(Int64, BigInteger)
  fullName: System.Numerics.BigInteger.Equality(System.Int64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 61
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator ==(long left, BigInteger right)
    content.vb: Public Shared Operator =(left As Long, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)
  commentId: M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)
  id: op_Equality(System.Numerics.BigInteger,System.Int64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Equality(BigInteger, Int64)
  nameWithType: BigInteger.Equality(BigInteger, Int64)
  fullName: System.Numerics.BigInteger.Equality(System.Numerics.BigInteger, System.Int64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 62
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator ==(BigInteger left, long right)
    content.vb: Public Shared Operator =(left As BigInteger, right As Long) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Int64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Equality(BigInteger, BigInteger)
  nameWithType: BigInteger.Equality(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Equality(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 63
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator ==(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator =(left As BigInteger, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)
  commentId: M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)
  id: op_Equality(System.Numerics.BigInteger,System.UInt64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Equality(BigInteger, UInt64)
  nameWithType: BigInteger.Equality(BigInteger, UInt64)
  fullName: System.Numerics.BigInteger.Equality(System.Numerics.BigInteger, System.UInt64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 64
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator ==(BigInteger left, ulong right)
    content.vb: Public Shared Operator =(left As BigInteger, right As ULong) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.UInt64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)
  id: op_Equality(System.UInt64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Equality(UInt64, BigInteger)
  nameWithType: BigInteger.Equality(UInt64, BigInteger)
  fullName: System.Numerics.BigInteger.Equality(System.UInt64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 66
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator ==(ulong left, BigInteger right)
    content.vb: Public Shared Operator =(left As ULong, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.UInt64
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: ExclusiveOr(BigInteger, BigInteger)
  nameWithType: BigInteger.ExclusiveOr(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.ExclusiveOr(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_ExclusiveOr
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 68
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator ^(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator Xor(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger
  id: op_Explicit(System.Decimal)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to BigInteger)
  nameWithType: BigInteger.Explicit(Decimal to BigInteger)
  fullName: System.Numerics.BigInteger.Explicit(System.Decimal to System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 69
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator BigInteger(decimal value)
    content.vb: Public Shared Narrowing Operator CType(value As Decimal) As BigInteger
    parameters:
    - id: value
      type: System.Decimal
    return:
      type: System.Numerics.BigInteger
  nameWithType.vb: BigInteger.Narrowing(Decimal to BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Decimal to System.Numerics.BigInteger)
  name.vb: Narrowing(Decimal to BigInteger)
- uid: System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger
  id: op_Explicit(System.Double)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(Double to BigInteger)
  nameWithType: BigInteger.Explicit(Double to BigInteger)
  fullName: System.Numerics.BigInteger.Explicit(System.Double to System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 70
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator BigInteger(double value)
    content.vb: Public Shared Narrowing Operator CType(value As Double) As BigInteger
    parameters:
    - id: value
      type: System.Double
    return:
      type: System.Numerics.BigInteger
  nameWithType.vb: BigInteger.Narrowing(Double to BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Double to System.Numerics.BigInteger)
  name.vb: Narrowing(Double to BigInteger)
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte
  id: op_Explicit(System.Numerics.BigInteger)~System.Byte
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(BigInteger to Byte)
  nameWithType: BigInteger.Explicit(BigInteger to Byte)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Byte)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 71
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator byte (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Byte
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Byte
  nameWithType.vb: BigInteger.Narrowing(BigInteger to Byte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Byte)
  name.vb: Narrowing(BigInteger to Byte)
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal
  id: op_Explicit(System.Numerics.BigInteger)~System.Decimal
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(BigInteger to Decimal)
  nameWithType: BigInteger.Explicit(BigInteger to Decimal)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 72
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator decimal (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Decimal
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Decimal
  nameWithType.vb: BigInteger.Narrowing(BigInteger to Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Decimal)
  name.vb: Narrowing(BigInteger to Decimal)
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double
  id: op_Explicit(System.Numerics.BigInteger)~System.Double
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(BigInteger to Double)
  nameWithType: BigInteger.Explicit(BigInteger to Double)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Double)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 73
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator double (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Double
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Double
  nameWithType.vb: BigInteger.Narrowing(BigInteger to Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Double)
  name.vb: Narrowing(BigInteger to Double)
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16
  id: op_Explicit(System.Numerics.BigInteger)~System.Int16
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(BigInteger to Int16)
  nameWithType: BigInteger.Explicit(BigInteger to Int16)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Int16)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 74
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator short (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Short
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Int16
  nameWithType.vb: BigInteger.Narrowing(BigInteger to Int16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Int16)
  name.vb: Narrowing(BigInteger to Int16)
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32
  id: op_Explicit(System.Numerics.BigInteger)~System.Int32
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(BigInteger to Int32)
  nameWithType: BigInteger.Explicit(BigInteger to Int32)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Int32)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 75
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator int (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Integer
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Int32
  nameWithType.vb: BigInteger.Narrowing(BigInteger to Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Int32)
  name.vb: Narrowing(BigInteger to Int32)
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64
  id: op_Explicit(System.Numerics.BigInteger)~System.Int64
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(BigInteger to Int64)
  nameWithType: BigInteger.Explicit(BigInteger to Int64)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Int64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 76
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator long (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Long
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Int64
  nameWithType.vb: BigInteger.Narrowing(BigInteger to Int64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Int64)
  name.vb: Narrowing(BigInteger to Int64)
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte
  id: op_Explicit(System.Numerics.BigInteger)~System.SByte
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(BigInteger to SByte)
  nameWithType: BigInteger.Explicit(BigInteger to SByte)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.SByte)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 77
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator sbyte (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As SByte
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.SByte
  nameWithType.vb: BigInteger.Narrowing(BigInteger to SByte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.SByte)
  name.vb: Narrowing(BigInteger to SByte)
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single
  id: op_Explicit(System.Numerics.BigInteger)~System.Single
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(BigInteger to Single)
  nameWithType: BigInteger.Explicit(BigInteger to Single)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Single)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 79
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator float (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Single
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Single
  nameWithType.vb: BigInteger.Narrowing(BigInteger to Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Single)
  name.vb: Narrowing(BigInteger to Single)
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16
  id: op_Explicit(System.Numerics.BigInteger)~System.UInt16
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(BigInteger to UInt16)
  nameWithType: BigInteger.Explicit(BigInteger to UInt16)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.UInt16)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 80
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator ushort (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As UShort
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.UInt16
  nameWithType.vb: BigInteger.Narrowing(BigInteger to UInt16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.UInt16)
  name.vb: Narrowing(BigInteger to UInt16)
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32
  id: op_Explicit(System.Numerics.BigInteger)~System.UInt32
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(BigInteger to UInt32)
  nameWithType: BigInteger.Explicit(BigInteger to UInt32)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.UInt32)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 82
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator uint (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As UInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.UInt32
  nameWithType.vb: BigInteger.Narrowing(BigInteger to UInt32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.UInt32)
  name.vb: Narrowing(BigInteger to UInt32)
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64
  id: op_Explicit(System.Numerics.BigInteger)~System.UInt64
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(BigInteger to UInt64)
  nameWithType: BigInteger.Explicit(BigInteger to UInt64)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.UInt64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 84
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator ulong (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As ULong
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.UInt64
  nameWithType.vb: BigInteger.Narrowing(BigInteger to UInt64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.UInt64)
  name.vb: Narrowing(BigInteger to UInt64)
- uid: System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger
  commentId: M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger
  id: op_Explicit(System.Single)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Explicit(Single to BigInteger)
  nameWithType: BigInteger.Explicit(Single to BigInteger)
  fullName: System.Numerics.BigInteger.Explicit(System.Single to System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 86
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator BigInteger(float value)
    content.vb: Public Shared Narrowing Operator CType(value As Single) As BigInteger
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Numerics.BigInteger
  nameWithType.vb: BigInteger.Narrowing(Single to BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Single to System.Numerics.BigInteger)
  name.vb: Narrowing(Single to BigInteger)
- uid: System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)
  id: op_GreaterThan(System.Int64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: GreaterThan(Int64, BigInteger)
  nameWithType: BigInteger.GreaterThan(Int64, BigInteger)
  fullName: System.Numerics.BigInteger.GreaterThan(System.Int64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 87
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator>(long left, BigInteger right)
    content.vb: Public Shared Operator>(left As Long, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)
  commentId: M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)
  id: op_GreaterThan(System.Numerics.BigInteger,System.Int64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: GreaterThan(BigInteger, Int64)
  nameWithType: BigInteger.GreaterThan(BigInteger, Int64)
  fullName: System.Numerics.BigInteger.GreaterThan(System.Numerics.BigInteger, System.Int64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 88
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator>(BigInteger left, long right)
    content.vb: Public Shared Operator>(left As BigInteger, right As Long) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Int64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: GreaterThan(BigInteger, BigInteger)
  nameWithType: BigInteger.GreaterThan(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.GreaterThan(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 89
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator>(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator>(left As BigInteger, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)
  commentId: M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)
  id: op_GreaterThan(System.Numerics.BigInteger,System.UInt64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: GreaterThan(BigInteger, UInt64)
  nameWithType: BigInteger.GreaterThan(BigInteger, UInt64)
  fullName: System.Numerics.BigInteger.GreaterThan(System.Numerics.BigInteger, System.UInt64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 90
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator>(BigInteger left, ulong right)
    content.vb: Public Shared Operator>(left As BigInteger, right As ULong) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.UInt64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)
  id: op_GreaterThan(System.UInt64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: GreaterThan(UInt64, BigInteger)
  nameWithType: BigInteger.GreaterThan(UInt64, BigInteger)
  fullName: System.Numerics.BigInteger.GreaterThan(System.UInt64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 92
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator>(ulong left, BigInteger right)
    content.vb: Public Shared Operator>(left As ULong, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.UInt64
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)
  id: op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Int64, BigInteger)
  nameWithType: BigInteger.GreaterThanOrEqual(Int64, BigInteger)
  fullName: System.Numerics.BigInteger.GreaterThanOrEqual(System.Int64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 94
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator >=(long left, BigInteger right)
    content.vb: Public Shared Operator >=(left As Long, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)
  commentId: M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)
  id: op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(BigInteger, Int64)
  nameWithType: BigInteger.GreaterThanOrEqual(BigInteger, Int64)
  fullName: System.Numerics.BigInteger.GreaterThanOrEqual(System.Numerics.BigInteger, System.Int64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 95
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator >=(BigInteger left, long right)
    content.vb: Public Shared Operator >=(left As BigInteger, right As Long) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Int64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(BigInteger, BigInteger)
  nameWithType: BigInteger.GreaterThanOrEqual(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.GreaterThanOrEqual(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 96
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator >=(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator >=(left As BigInteger, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  commentId: M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  id: op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(BigInteger, UInt64)
  nameWithType: BigInteger.GreaterThanOrEqual(BigInteger, UInt64)
  fullName: System.Numerics.BigInteger.GreaterThanOrEqual(System.Numerics.BigInteger, System.UInt64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 97
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator >=(BigInteger left, ulong right)
    content.vb: Public Shared Operator >=(left As BigInteger, right As ULong) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.UInt64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  id: op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(UInt64, BigInteger)
  nameWithType: BigInteger.GreaterThanOrEqual(UInt64, BigInteger)
  fullName: System.Numerics.BigInteger.GreaterThanOrEqual(System.UInt64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 99
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator >=(ulong left, BigInteger right)
    content.vb: Public Shared Operator >=(left As ULong, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.UInt64
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger
  commentId: M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger
  id: op_Implicit(System.Byte)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Implicit(Byte to BigInteger)
  nameWithType: BigInteger.Implicit(Byte to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.Byte to System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 101
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator BigInteger(byte value)
    content.vb: Public Shared Widening Operator CType(value As Byte) As BigInteger
    parameters:
    - id: value
      type: System.Byte
    return:
      type: System.Numerics.BigInteger
  nameWithType.vb: BigInteger.Widening(Byte to BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Widening(System.Byte to System.Numerics.BigInteger)
  name.vb: Widening(Byte to BigInteger)
- uid: System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger
  commentId: M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger
  id: op_Implicit(System.Int16)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Implicit(Int16 to BigInteger)
  nameWithType: BigInteger.Implicit(Int16 to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.Int16 to System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 102
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator BigInteger(short value)
    content.vb: Public Shared Widening Operator CType(value As Short) As BigInteger
    parameters:
    - id: value
      type: System.Int16
    return:
      type: System.Numerics.BigInteger
  nameWithType.vb: BigInteger.Widening(Int16 to BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Widening(System.Int16 to System.Numerics.BigInteger)
  name.vb: Widening(Int16 to BigInteger)
- uid: System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger
  commentId: M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger
  id: op_Implicit(System.Int32)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Implicit(Int32 to BigInteger)
  nameWithType: BigInteger.Implicit(Int32 to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.Int32 to System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 103
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator BigInteger(int value)
    content.vb: Public Shared Widening Operator CType(value As Integer) As BigInteger
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Numerics.BigInteger
  nameWithType.vb: BigInteger.Widening(Int32 to BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Widening(System.Int32 to System.Numerics.BigInteger)
  name.vb: Widening(Int32 to BigInteger)
- uid: System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger
  commentId: M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger
  id: op_Implicit(System.Int64)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Implicit(Int64 to BigInteger)
  nameWithType: BigInteger.Implicit(Int64 to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.Int64 to System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 104
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator BigInteger(long value)
    content.vb: Public Shared Widening Operator CType(value As Long) As BigInteger
    parameters:
    - id: value
      type: System.Int64
    return:
      type: System.Numerics.BigInteger
  nameWithType.vb: BigInteger.Widening(Int64 to BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Widening(System.Int64 to System.Numerics.BigInteger)
  name.vb: Widening(Int64 to BigInteger)
- uid: System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger
  commentId: M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger
  id: op_Implicit(System.SByte)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Implicit(SByte to BigInteger)
  nameWithType: BigInteger.Implicit(SByte to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.SByte to System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 105
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator BigInteger(sbyte value)
    content.vb: Public Shared Widening Operator CType(value As SByte) As BigInteger
    parameters:
    - id: value
      type: System.SByte
    return:
      type: System.Numerics.BigInteger
  nameWithType.vb: BigInteger.Widening(SByte to BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Widening(System.SByte to System.Numerics.BigInteger)
  name.vb: Widening(SByte to BigInteger)
- uid: System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger
  commentId: M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger
  id: op_Implicit(System.UInt16)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Implicit(UInt16 to BigInteger)
  nameWithType: BigInteger.Implicit(UInt16 to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.UInt16 to System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 107
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator BigInteger(ushort value)
    content.vb: Public Shared Widening Operator CType(value As UShort) As BigInteger
    parameters:
    - id: value
      type: System.UInt16
    return:
      type: System.Numerics.BigInteger
  nameWithType.vb: BigInteger.Widening(UInt16 to BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Widening(System.UInt16 to System.Numerics.BigInteger)
  name.vb: Widening(UInt16 to BigInteger)
- uid: System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger
  commentId: M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger
  id: op_Implicit(System.UInt32)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Implicit(UInt32 to BigInteger)
  nameWithType: BigInteger.Implicit(UInt32 to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.UInt32 to System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 109
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator BigInteger(uint value)
    content.vb: Public Shared Widening Operator CType(value As UInteger) As BigInteger
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: System.Numerics.BigInteger
  nameWithType.vb: BigInteger.Widening(UInt32 to BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Widening(System.UInt32 to System.Numerics.BigInteger)
  name.vb: Widening(UInt32 to BigInteger)
- uid: System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger
  commentId: M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger
  id: op_Implicit(System.UInt64)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Implicit(UInt64 to BigInteger)
  nameWithType: BigInteger.Implicit(UInt64 to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.UInt64 to System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 111
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator BigInteger(ulong value)
    content.vb: Public Shared Widening Operator CType(value As ULong) As BigInteger
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.Numerics.BigInteger
  nameWithType.vb: BigInteger.Widening(UInt64 to BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.Widening(System.UInt64 to System.Numerics.BigInteger)
  name.vb: Widening(UInt64 to BigInteger)
- uid: System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)
  id: op_Increment(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Increment(BigInteger)
  nameWithType: BigInteger.Increment(BigInteger)
  fullName: System.Numerics.BigInteger.Increment(System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Increment
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 113
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator ++(BigInteger value)
    content.vb: VB cannot support this operator.
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)
  id: op_Inequality(System.Int64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Inequality(Int64, BigInteger)
  nameWithType: BigInteger.Inequality(Int64, BigInteger)
  fullName: System.Numerics.BigInteger.Inequality(System.Int64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 114
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator !=(long left, BigInteger right)
    content.vb: Public Shared Operator <>(left As Long, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)
  commentId: M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)
  id: op_Inequality(System.Numerics.BigInteger,System.Int64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Inequality(BigInteger, Int64)
  nameWithType: BigInteger.Inequality(BigInteger, Int64)
  fullName: System.Numerics.BigInteger.Inequality(System.Numerics.BigInteger, System.Int64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 115
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator !=(BigInteger left, long right)
    content.vb: Public Shared Operator <>(left As BigInteger, right As Long) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Int64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Inequality(BigInteger, BigInteger)
  nameWithType: BigInteger.Inequality(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Inequality(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 116
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator !=(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator <>(left As BigInteger, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)
  commentId: M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)
  id: op_Inequality(System.Numerics.BigInteger,System.UInt64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Inequality(BigInteger, UInt64)
  nameWithType: BigInteger.Inequality(BigInteger, UInt64)
  fullName: System.Numerics.BigInteger.Inequality(System.Numerics.BigInteger, System.UInt64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 117
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator !=(BigInteger left, ulong right)
    content.vb: Public Shared Operator <>(left As BigInteger, right As ULong) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.UInt64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)
  id: op_Inequality(System.UInt64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Inequality(UInt64, BigInteger)
  nameWithType: BigInteger.Inequality(UInt64, BigInteger)
  fullName: System.Numerics.BigInteger.Inequality(System.UInt64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 119
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator !=(ulong left, BigInteger right)
    content.vb: Public Shared Operator <>(left As ULong, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.UInt64
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)
  commentId: M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)
  id: op_LeftShift(System.Numerics.BigInteger,System.Int32)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: LeftShift(BigInteger, Int32)
  nameWithType: BigInteger.LeftShift(BigInteger, Int32)
  fullName: System.Numerics.BigInteger.LeftShift(System.Numerics.BigInteger, System.Int32)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LeftShift
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 121
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator <<(BigInteger value, int shift)
    content.vb: Public Shared Operator <<(value As BigInteger, shift As Integer) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    - id: shift
      type: System.Int32
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)
  id: op_LessThan(System.Int64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: LessThan(Int64, BigInteger)
  nameWithType: BigInteger.LessThan(Int64, BigInteger)
  fullName: System.Numerics.BigInteger.LessThan(System.Int64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 122
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator <(long left, BigInteger right)
    content.vb: Public Shared Operator <(left As Long, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)
  commentId: M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)
  id: op_LessThan(System.Numerics.BigInteger,System.Int64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: LessThan(BigInteger, Int64)
  nameWithType: BigInteger.LessThan(BigInteger, Int64)
  fullName: System.Numerics.BigInteger.LessThan(System.Numerics.BigInteger, System.Int64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 123
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator <(BigInteger left, long right)
    content.vb: Public Shared Operator <(left As BigInteger, right As Long) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Int64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: LessThan(BigInteger, BigInteger)
  nameWithType: BigInteger.LessThan(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.LessThan(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 124
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator <(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator <(left As BigInteger, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)
  commentId: M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)
  id: op_LessThan(System.Numerics.BigInteger,System.UInt64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: LessThan(BigInteger, UInt64)
  nameWithType: BigInteger.LessThan(BigInteger, UInt64)
  fullName: System.Numerics.BigInteger.LessThan(System.Numerics.BigInteger, System.UInt64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 125
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator <(BigInteger left, ulong right)
    content.vb: Public Shared Operator <(left As BigInteger, right As ULong) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.UInt64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)
  id: op_LessThan(System.UInt64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: LessThan(UInt64, BigInteger)
  nameWithType: BigInteger.LessThan(UInt64, BigInteger)
  fullName: System.Numerics.BigInteger.LessThan(System.UInt64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 127
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator <(ulong left, BigInteger right)
    content.vb: Public Shared Operator <(left As ULong, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.UInt64
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)
  id: op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Int64, BigInteger)
  nameWithType: BigInteger.LessThanOrEqual(Int64, BigInteger)
  fullName: System.Numerics.BigInteger.LessThanOrEqual(System.Int64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 129
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator <=(long left, BigInteger right)
    content.vb: Public Shared Operator <=(left As Long, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)
  commentId: M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)
  id: op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(BigInteger, Int64)
  nameWithType: BigInteger.LessThanOrEqual(BigInteger, Int64)
  fullName: System.Numerics.BigInteger.LessThanOrEqual(System.Numerics.BigInteger, System.Int64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 130
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator <=(BigInteger left, long right)
    content.vb: Public Shared Operator <=(left As BigInteger, right As Long) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Int64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(BigInteger, BigInteger)
  nameWithType: BigInteger.LessThanOrEqual(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.LessThanOrEqual(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 131
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator <=(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator <=(left As BigInteger, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  commentId: M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  id: op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(BigInteger, UInt64)
  nameWithType: BigInteger.LessThanOrEqual(BigInteger, UInt64)
  fullName: System.Numerics.BigInteger.LessThanOrEqual(System.Numerics.BigInteger, System.UInt64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 132
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator <=(BigInteger left, ulong right)
    content.vb: Public Shared Operator <=(left As BigInteger, right As ULong) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.UInt64
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  id: op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(UInt64, BigInteger)
  nameWithType: BigInteger.LessThanOrEqual(UInt64, BigInteger)
  fullName: System.Numerics.BigInteger.LessThanOrEqual(System.UInt64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 134
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator <=(ulong left, BigInteger right)
    content.vb: Public Shared Operator <=(left As ULong, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.UInt64
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Modulus(BigInteger, BigInteger)
  nameWithType: BigInteger.Modulus(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Modulus(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Modulus
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 136
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator %(BigInteger dividend, BigInteger divisor)
    content.vb: Public Shared Operator Mod(dividend As BigInteger, divisor As BigInteger) As BigInteger
    parameters:
    - id: dividend
      type: System.Numerics.BigInteger
    - id: divisor
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Multiply(BigInteger, BigInteger)
  nameWithType: BigInteger.Multiply(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Multiply
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 137
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator *(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator *(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)
  id: op_OnesComplement(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: OnesComplement(BigInteger)
  nameWithType: BigInteger.OnesComplement(BigInteger)
  fullName: System.Numerics.BigInteger.OnesComplement(System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_OnesComplement
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 138
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator ~(BigInteger value)
    content.vb: Public Shared Operator Not(value As BigInteger) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)
  commentId: M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)
  id: op_RightShift(System.Numerics.BigInteger,System.Int32)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: RightShift(BigInteger, Int32)
  nameWithType: BigInteger.RightShift(BigInteger, Int32)
  fullName: System.Numerics.BigInteger.RightShift(System.Numerics.BigInteger, System.Int32)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_RightShift
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 139
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator >>(BigInteger value, int shift)
    content.vb: Public Shared Operator >>(value As BigInteger, shift As Integer) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    - id: shift
      type: System.Int32
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Subtraction(BigInteger, BigInteger)
  nameWithType: BigInteger.Subtraction(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Subtraction(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 140
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator -(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator -(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)
  id: op_UnaryNegation(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: UnaryNegation(BigInteger)
  nameWithType: BigInteger.UnaryNegation(BigInteger)
  fullName: System.Numerics.BigInteger.UnaryNegation(System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_UnaryNegation
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 141
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator -(BigInteger value)
    content.vb: Public Shared Operator -(value As BigInteger) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)
  id: op_UnaryPlus(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: UnaryPlus(BigInteger)
  nameWithType: BigInteger.UnaryPlus(BigInteger)
  fullName: System.Numerics.BigInteger.UnaryPlus(System.Numerics.BigInteger)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_UnaryPlus
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 142
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger operator +(BigInteger value)
    content.vb: Public Shared Operator +(value As BigInteger) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Parse(System.String)
  commentId: M:System.Numerics.BigInteger.Parse(System.String)
  id: Parse(System.String)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: BigInteger.Parse(String)
  fullName: System.Numerics.BigInteger.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 143
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Parse(string value)
    content.vb: Public Shared Function Parse(value As String) As BigInteger
    parameters:
    - id: value
      type: System.String
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)
  commentId: M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)
  id: Parse(System.String,System.Globalization.NumberStyles)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Parse(String, Globalization.NumberStyles)
  nameWithType: BigInteger.Parse(String, Globalization.NumberStyles)
  fullName: System.Numerics.BigInteger.Parse(System.String, System.Globalization.NumberStyles)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 144
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Parse(string value, Globalization.NumberStyles style)
    content.vb: Public Shared Function Parse(value As String, style As Globalization.NumberStyles) As BigInteger
    parameters:
    - id: value
      type: System.String
    - id: style
      type: System.Globalization.NumberStyles
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  commentId: M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Parse(String, Globalization.NumberStyles, IFormatProvider)
  nameWithType: BigInteger.Parse(String, Globalization.NumberStyles, IFormatProvider)
  fullName: System.Numerics.BigInteger.Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 145
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Parse(string value, Globalization.NumberStyles style, IFormatProvider provider)
    content.vb: Public Shared Function Parse(value As String, style As Globalization.NumberStyles, provider As IFormatProvider) As BigInteger
    parameters:
    - id: value
      type: System.String
    - id: style
      type: System.Globalization.NumberStyles
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)
  commentId: M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider)
  nameWithType: BigInteger.Parse(String, IFormatProvider)
  fullName: System.Numerics.BigInteger.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 146
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Parse(string value, IFormatProvider provider)
    content.vb: Public Shared Function Parse(value As String, provider As IFormatProvider) As BigInteger
    parameters:
    - id: value
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)
  commentId: M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)
  id: Pow(System.Numerics.BigInteger,System.Int32)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Pow(BigInteger, Int32)
  nameWithType: BigInteger.Pow(BigInteger, Int32)
  fullName: System.Numerics.BigInteger.Pow(System.Numerics.BigInteger, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Pow
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 147
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Pow(BigInteger value, int exponent)
    content.vb: Public Shared Function Pow(value As BigInteger, exponent As Integer) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    - id: exponent
      type: System.Int32
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Remainder(BigInteger, BigInteger)
  nameWithType: BigInteger.Remainder(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remainder
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 148
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Remainder(BigInteger dividend, BigInteger divisor)
    content.vb: Public Shared Function Remainder(dividend As BigInteger, divisor As BigInteger) As BigInteger
    parameters:
    - id: dividend
      type: System.Numerics.BigInteger
    - id: divisor
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: Subtract(BigInteger, BigInteger)
  nameWithType: BigInteger.Subtract(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 149
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static BigInteger Subtract(BigInteger left, BigInteger right)
    content.vb: Public Shared Function Subtract(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
    - id: right
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.BigInteger.ToByteArray
  commentId: M:System.Numerics.BigInteger.ToByteArray
  id: ToByteArray
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: ToByteArray()
  nameWithType: BigInteger.ToByteArray()
  fullName: System.Numerics.BigInteger.ToByteArray()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToByteArray
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 151
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public byte[] ToByteArray()
    content.vb: Public Function ToByteArray As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.ToString
  commentId: M:System.Numerics.BigInteger.ToString
  id: ToString
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BigInteger.ToString()
  fullName: System.Numerics.BigInteger.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 152
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.BigInteger.ToString(System.IFormatProvider)
  commentId: M:System.Numerics.BigInteger.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: BigInteger.ToString(IFormatProvider)
  fullName: System.Numerics.BigInteger.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 153
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public string ToString(IFormatProvider provider)
    content.vb: Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.ToString(System.String)
  commentId: M:System.Numerics.BigInteger.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: BigInteger.ToString(String)
  fullName: System.Numerics.BigInteger.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 154
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)
  commentId: M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  nameWithType: BigInteger.ToString(String, IFormatProvider)
  fullName: System.Numerics.BigInteger.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 155
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public string ToString(string format, IFormatProvider provider)
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)
  commentId: M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)
  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: TryParse(String, Globalization.NumberStyles, IFormatProvider, out BigInteger)
  nameWithType: BigInteger.TryParse(String, Globalization.NumberStyles, IFormatProvider, out BigInteger)
  fullName: System.Numerics.BigInteger.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 156
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool TryParse(string value, Globalization.NumberStyles style, IFormatProvider provider, out BigInteger result)
    content.vb: Public Shared Function TryParse(value As String, style As Globalization.NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean
    parameters:
    - id: value
      type: System.String
    - id: style
      type: System.Globalization.NumberStyles
    - id: provider
      type: System.IFormatProvider
    - id: result
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  nameWithType.vb: BigInteger.TryParse(String, Globalization.NumberStyles, IFormatProvider, ByRef BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, ByRef System.Numerics.BigInteger)
  name.vb: TryParse(String, Globalization.NumberStyles, IFormatProvider, ByRef BigInteger)
- uid: System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)
  commentId: M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)
  id: TryParse(System.String,System.Numerics.BigInteger@)
  parent: System.Numerics.BigInteger
  langs:
  - csharp
  - vb
  name: TryParse(String, out BigInteger)
  nameWithType: BigInteger.TryParse(String, out BigInteger)
  fullName: System.Numerics.BigInteger.TryParse(System.String, out System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 157
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool TryParse(string value, out BigInteger result)
    content.vb: Public Shared Function TryParse(value As String, ByRef result As BigInteger) As Boolean
    parameters:
    - id: value
      type: System.String
    - id: result
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
  nameWithType.vb: BigInteger.TryParse(String, ByRef BigInteger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.BigInteger.TryParse(System.String, ByRef System.Numerics.BigInteger)
  name.vb: TryParse(String, ByRef BigInteger)
references:
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: false
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable{System.Numerics.BigInteger}
  commentId: '!:System.IComparable{System.Numerics.BigInteger}'
  definition: System.IComparable`1
  name: IComparable<BigInteger>
  nameWithType: IComparable<BigInteger>
  fullName: System.IComparable<System.Numerics.BigInteger>
  nameWithType.vb: IComparable(Of BigInteger)
  fullname.vb: System.IComparable(Of System.Numerics.BigInteger)
  name.vb: IComparable(Of BigInteger)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Numerics.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: System.Numerics.BigInteger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: System.Numerics.BigInteger
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{System.Numerics.BigInteger}
  commentId: '!:System.IEquatable{System.Numerics.BigInteger}'
  definition: System.IEquatable`1
  name: IEquatable<BigInteger>
  nameWithType: IEquatable<BigInteger>
  fullName: System.IEquatable<System.Numerics.BigInteger>
  nameWithType.vb: IEquatable(Of BigInteger)
  fullname.vb: System.IEquatable(Of System.Numerics.BigInteger)
  name.vb: IEquatable(Of BigInteger)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Numerics.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: System.Numerics.BigInteger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: System.Numerics.BigInteger
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: false
  name: IComparable<>
  nameWithType: IComparable<>
  fullName: System.IComparable<>
  nameWithType.vb: IComparable(Of )
  fullname.vb: System.IComparable(Of )
  name.vb: IComparable(Of )
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: false
  name: IEquatable<>
  nameWithType: IEquatable<>
  fullName: System.IEquatable<>
  nameWithType.vb: IEquatable(Of )
  fullname.vb: System.IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: false
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: false
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.NumberStyles
  commentId: T:System.Globalization.NumberStyles
  parent: System.Globalization
  isExternal: false
  name: Globalization.NumberStyles
  nameWithType: Globalization.NumberStyles
  fullName: System.Globalization.NumberStyles
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: false
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
