items:
- uid: System.Numerics.Complex
  commentId: T:System.Numerics.Complex
  id: Complex
  parent: System.Numerics
  children:
  - System.Numerics.Complex.#ctor(System.Double,System.Double)
  - System.Numerics.Complex.Abs(System.Numerics.Complex)
  - System.Numerics.Complex.Acos(System.Numerics.Complex)
  - System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Asin(System.Numerics.Complex)
  - System.Numerics.Complex.Atan(System.Numerics.Complex)
  - System.Numerics.Complex.Conjugate(System.Numerics.Complex)
  - System.Numerics.Complex.Cos(System.Numerics.Complex)
  - System.Numerics.Complex.Cosh(System.Numerics.Complex)
  - System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Equals(System.Numerics.Complex)
  - System.Numerics.Complex.Equals(System.Object)
  - System.Numerics.Complex.Exp(System.Numerics.Complex)
  - System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)
  - System.Numerics.Complex.GetHashCode
  - System.Numerics.Complex.Imaginary
  - System.Numerics.Complex.ImaginaryOne
  - System.Numerics.Complex.Log(System.Numerics.Complex)
  - System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)
  - System.Numerics.Complex.Log10(System.Numerics.Complex)
  - System.Numerics.Complex.Magnitude
  - System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Negate(System.Numerics.Complex)
  - System.Numerics.Complex.One
  - System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex
  - System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex
  - System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)
  - System.Numerics.Complex.Phase
  - System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)
  - System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Real
  - System.Numerics.Complex.Reciprocal(System.Numerics.Complex)
  - System.Numerics.Complex.Sin(System.Numerics.Complex)
  - System.Numerics.Complex.Sinh(System.Numerics.Complex)
  - System.Numerics.Complex.Sqrt(System.Numerics.Complex)
  - System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Tan(System.Numerics.Complex)
  - System.Numerics.Complex.Tanh(System.Numerics.Complex)
  - System.Numerics.Complex.ToString
  - System.Numerics.Complex.ToString(System.IFormatProvider)
  - System.Numerics.Complex.ToString(System.String)
  - System.Numerics.Complex.ToString(System.String,System.IFormatProvider)
  - System.Numerics.Complex.Zero
  langs:
  - csharp
  - vb
  name: Complex
  nameWithType: Complex
  fullName: System.Numerics.Complex
  type: Struct
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Complex
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 159
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: 'public struct Complex : IEquatable<Complex>, IFormattable'
    content.vb: >-
      Public Structure Complex
          Implements IEquatable(Of Complex), IFormattable
  implements:
  - System.IEquatable{System.Numerics.Complex}
  - System.IFormattable
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Numerics.Complex.ImaginaryOne
  commentId: F:System.Numerics.Complex.ImaginaryOne
  id: ImaginaryOne
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: ImaginaryOne
  nameWithType: Complex.ImaginaryOne
  fullName: System.Numerics.Complex.ImaginaryOne
  type: Field
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ImaginaryOne
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 162
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static readonly Complex ImaginaryOne
    content.vb: Public Shared ReadOnly ImaginaryOne As Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.Complex.One
  commentId: F:System.Numerics.Complex.One
  id: One
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Complex.One
  fullName: System.Numerics.Complex.One
  type: Field
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: One
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 163
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static readonly Complex One
    content.vb: Public Shared ReadOnly One As Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.Complex.Zero
  commentId: F:System.Numerics.Complex.Zero
  id: Zero
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Complex.Zero
  fullName: System.Numerics.Complex.Zero
  type: Field
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Zero
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 164
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static readonly Complex Zero
    content.vb: Public Shared ReadOnly Zero As Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.Complex.#ctor(System.Double,System.Double)
  commentId: M:System.Numerics.Complex.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Complex(Double, Double)
  nameWithType: Complex.Complex(Double, Double)
  fullName: System.Numerics.Complex.Complex(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 165
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public Complex(double real, double imaginary)
    content.vb: Public Sub New(real As Double, imaginary As Double)
    parameters:
    - id: real
      type: System.Double
    - id: imaginary
      type: System.Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Complex.Imaginary
  commentId: P:System.Numerics.Complex.Imaginary
  id: Imaginary
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Imaginary
  nameWithType: Complex.Imaginary
  fullName: System.Numerics.Complex.Imaginary
  type: Property
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Imaginary
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 166
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public double Imaginary { get; }
    content.vb: Public ReadOnly Property Imaginary As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Numerics.Complex.Magnitude
  commentId: P:System.Numerics.Complex.Magnitude
  id: Magnitude
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Magnitude
  nameWithType: Complex.Magnitude
  fullName: System.Numerics.Complex.Magnitude
  type: Property
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Magnitude
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 167
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public double Magnitude { get; }
    content.vb: Public ReadOnly Property Magnitude As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Numerics.Complex.Phase
  commentId: P:System.Numerics.Complex.Phase
  id: Phase
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Phase
  nameWithType: Complex.Phase
  fullName: System.Numerics.Complex.Phase
  type: Property
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Phase
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 168
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public double Phase { get; }
    content.vb: Public ReadOnly Property Phase As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Numerics.Complex.Real
  commentId: P:System.Numerics.Complex.Real
  id: Real
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Real
  nameWithType: Complex.Real
  fullName: System.Numerics.Complex.Real
  type: Property
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Real
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 169
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public double Real { get; }
    content.vb: Public ReadOnly Property Real As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Numerics.Complex.Abs(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Abs(System.Numerics.Complex)
  id: Abs(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Abs(Complex)
  nameWithType: Complex.Abs(Complex)
  fullName: System.Numerics.Complex.Abs(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Abs
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 170
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static double Abs(Complex value)
    content.vb: Public Shared Function Abs(value As Complex) As Double
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Acos(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Acos(System.Numerics.Complex)
  id: Acos(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Acos(Complex)
  nameWithType: Complex.Acos(Complex)
  fullName: System.Numerics.Complex.Acos(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Acos
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 171
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Acos(Complex value)
    content.vb: Public Shared Function Acos(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)
  id: Add(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Add(Complex, Complex)
  nameWithType: Complex.Add(Complex, Complex)
  fullName: System.Numerics.Complex.Add(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 172
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Add(Complex left, Complex right)
    content.vb: Public Shared Function Add(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
    - id: right
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Asin(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Asin(System.Numerics.Complex)
  id: Asin(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Asin(Complex)
  nameWithType: Complex.Asin(Complex)
  fullName: System.Numerics.Complex.Asin(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Asin
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 173
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Asin(Complex value)
    content.vb: Public Shared Function Asin(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Atan(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Atan(System.Numerics.Complex)
  id: Atan(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Atan(Complex)
  nameWithType: Complex.Atan(Complex)
  fullName: System.Numerics.Complex.Atan(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Atan
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 174
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Atan(Complex value)
    content.vb: Public Shared Function Atan(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Conjugate(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)
  id: Conjugate(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Conjugate(Complex)
  nameWithType: Complex.Conjugate(Complex)
  fullName: System.Numerics.Complex.Conjugate(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Conjugate
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 175
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Conjugate(Complex value)
    content.vb: Public Shared Function Conjugate(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Cos(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Cos(System.Numerics.Complex)
  id: Cos(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Cos(Complex)
  nameWithType: Complex.Cos(Complex)
  fullName: System.Numerics.Complex.Cos(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Cos
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 176
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Cos(Complex value)
    content.vb: Public Shared Function Cos(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Cosh(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Cosh(System.Numerics.Complex)
  id: Cosh(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Cosh(Complex)
  nameWithType: Complex.Cosh(Complex)
  fullName: System.Numerics.Complex.Cosh(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Cosh
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 177
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Cosh(Complex value)
    content.vb: Public Shared Function Cosh(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)
  id: Divide(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Divide(Complex, Complex)
  nameWithType: Complex.Divide(Complex, Complex)
  fullName: System.Numerics.Complex.Divide(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Divide
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 178
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Divide(Complex dividend, Complex divisor)
    content.vb: Public Shared Function Divide(dividend As Complex, divisor As Complex) As Complex
    parameters:
    - id: dividend
      type: System.Numerics.Complex
    - id: divisor
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Equals(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Equals(System.Numerics.Complex)
  id: Equals(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Equals(Complex)
  nameWithType: Complex.Equals(Complex)
  fullName: System.Numerics.Complex.Equals(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 179
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public bool Equals(Complex value)
    content.vb: Public Function Equals(value As Complex) As Boolean
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Complex.Equals(System.Object)
  commentId: M:System.Numerics.Complex.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Complex.Equals(Object)
  fullName: System.Numerics.Complex.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 180
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.Complex.Exp(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Exp(System.Numerics.Complex)
  id: Exp(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Exp(Complex)
  nameWithType: Complex.Exp(Complex)
  fullName: System.Numerics.Complex.Exp(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exp
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 181
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Exp(Complex value)
    content.vb: Public Shared Function Exp(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)
  commentId: M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)
  id: FromPolarCoordinates(System.Double,System.Double)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: FromPolarCoordinates(Double, Double)
  nameWithType: Complex.FromPolarCoordinates(Double, Double)
  fullName: System.Numerics.Complex.FromPolarCoordinates(System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromPolarCoordinates
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 182
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex FromPolarCoordinates(double magnitude, double phase)
    content.vb: Public Shared Function FromPolarCoordinates(magnitude As Double, phase As Double) As Complex
    parameters:
    - id: magnitude
      type: System.Double
    - id: phase
      type: System.Double
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.GetHashCode
  commentId: M:System.Numerics.Complex.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Complex.GetHashCode()
  fullName: System.Numerics.Complex.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 183
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.Complex.Log(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Log(System.Numerics.Complex)
  id: Log(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Log(Complex)
  nameWithType: Complex.Log(Complex)
  fullName: System.Numerics.Complex.Log(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Log
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 184
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Log(Complex value)
    content.vb: Public Shared Function Log(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)
  commentId: M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)
  id: Log(System.Numerics.Complex,System.Double)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Log(Complex, Double)
  nameWithType: Complex.Log(Complex, Double)
  fullName: System.Numerics.Complex.Log(System.Numerics.Complex, System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Log
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 185
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Log(Complex value, double baseValue)
    content.vb: Public Shared Function Log(value As Complex, baseValue As Double) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    - id: baseValue
      type: System.Double
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Log10(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Log10(System.Numerics.Complex)
  id: Log10(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Log10(Complex)
  nameWithType: Complex.Log10(Complex)
  fullName: System.Numerics.Complex.Log10(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Log10
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 186
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Log10(Complex value)
    content.vb: Public Shared Function Log10(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)
  id: Multiply(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Multiply(Complex, Complex)
  nameWithType: Complex.Multiply(Complex, Complex)
  fullName: System.Numerics.Complex.Multiply(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 187
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Multiply(Complex left, Complex right)
    content.vb: Public Shared Function Multiply(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
    - id: right
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Negate(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Negate(System.Numerics.Complex)
  id: Negate(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Negate(Complex)
  nameWithType: Complex.Negate(Complex)
  fullName: System.Numerics.Complex.Negate(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Negate
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 188
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Negate(Complex value)
    content.vb: Public Shared Function Negate(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)
  id: op_Addition(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Addition(Complex, Complex)
  nameWithType: Complex.Addition(Complex, Complex)
  fullName: System.Numerics.Complex.Addition(System.Numerics.Complex, System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 189
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex operator +(Complex left, Complex right)
    content.vb: Public Shared Operator +(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
    - id: right
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)
  id: op_Division(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Division(Complex, Complex)
  nameWithType: Complex.Division(Complex, Complex)
  fullName: System.Numerics.Complex.Division(System.Numerics.Complex, System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Division
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 190
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex operator /(Complex left, Complex right)
    content.vb: Public Shared Operator /(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
    - id: right
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)
  id: op_Equality(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Equality(Complex, Complex)
  nameWithType: Complex.Equality(Complex, Complex)
  fullName: System.Numerics.Complex.Equality(System.Numerics.Complex, System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 191
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator ==(Complex left, Complex right)
    content.vb: Public Shared Operator =(left As Complex, right As Complex) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Complex
    - id: right
      type: System.Numerics.Complex
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex
  commentId: M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex
  id: op_Explicit(System.Decimal)~System.Numerics.Complex
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to Complex)
  nameWithType: Complex.Explicit(Decimal to Complex)
  fullName: System.Numerics.Complex.Explicit(System.Decimal to System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 192
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator Complex(decimal value)
    content.vb: Public Shared Narrowing Operator CType(value As Decimal) As Complex
    parameters:
    - id: value
      type: System.Decimal
    return:
      type: System.Numerics.Complex
  nameWithType.vb: Complex.Narrowing(Decimal to Complex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Complex.Narrowing(System.Decimal to System.Numerics.Complex)
  name.vb: Narrowing(Decimal to Complex)
- uid: System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex
  commentId: M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex
  id: op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Explicit(BigInteger to Complex)
  nameWithType: Complex.Explicit(BigInteger to Complex)
  fullName: System.Numerics.Complex.Explicit(System.Numerics.BigInteger to System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 193
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static explicit operator Complex(BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Complex
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.Complex
  nameWithType.vb: Complex.Narrowing(BigInteger to Complex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Complex.Narrowing(System.Numerics.BigInteger to System.Numerics.Complex)
  name.vb: Narrowing(BigInteger to Complex)
- uid: System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex
  commentId: M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex
  id: op_Implicit(System.Byte)~System.Numerics.Complex
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Implicit(Byte to Complex)
  nameWithType: Complex.Implicit(Byte to Complex)
  fullName: System.Numerics.Complex.Implicit(System.Byte to System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 194
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator Complex(byte value)
    content.vb: Public Shared Widening Operator CType(value As Byte) As Complex
    parameters:
    - id: value
      type: System.Byte
    return:
      type: System.Numerics.Complex
  nameWithType.vb: Complex.Widening(Byte to Complex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Complex.Widening(System.Byte to System.Numerics.Complex)
  name.vb: Widening(Byte to Complex)
- uid: System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex
  commentId: M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex
  id: op_Implicit(System.Double)~System.Numerics.Complex
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Implicit(Double to Complex)
  nameWithType: Complex.Implicit(Double to Complex)
  fullName: System.Numerics.Complex.Implicit(System.Double to System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 195
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator Complex(double value)
    content.vb: Public Shared Widening Operator CType(value As Double) As Complex
    parameters:
    - id: value
      type: System.Double
    return:
      type: System.Numerics.Complex
  nameWithType.vb: Complex.Widening(Double to Complex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Complex.Widening(System.Double to System.Numerics.Complex)
  name.vb: Widening(Double to Complex)
- uid: System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex
  commentId: M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex
  id: op_Implicit(System.Int16)~System.Numerics.Complex
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Implicit(Int16 to Complex)
  nameWithType: Complex.Implicit(Int16 to Complex)
  fullName: System.Numerics.Complex.Implicit(System.Int16 to System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 196
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator Complex(short value)
    content.vb: Public Shared Widening Operator CType(value As Short) As Complex
    parameters:
    - id: value
      type: System.Int16
    return:
      type: System.Numerics.Complex
  nameWithType.vb: Complex.Widening(Int16 to Complex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Complex.Widening(System.Int16 to System.Numerics.Complex)
  name.vb: Widening(Int16 to Complex)
- uid: System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex
  commentId: M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex
  id: op_Implicit(System.Int32)~System.Numerics.Complex
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Implicit(Int32 to Complex)
  nameWithType: Complex.Implicit(Int32 to Complex)
  fullName: System.Numerics.Complex.Implicit(System.Int32 to System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 197
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator Complex(int value)
    content.vb: Public Shared Widening Operator CType(value As Integer) As Complex
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Numerics.Complex
  nameWithType.vb: Complex.Widening(Int32 to Complex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Complex.Widening(System.Int32 to System.Numerics.Complex)
  name.vb: Widening(Int32 to Complex)
- uid: System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex
  commentId: M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex
  id: op_Implicit(System.Int64)~System.Numerics.Complex
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Implicit(Int64 to Complex)
  nameWithType: Complex.Implicit(Int64 to Complex)
  fullName: System.Numerics.Complex.Implicit(System.Int64 to System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 198
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator Complex(long value)
    content.vb: Public Shared Widening Operator CType(value As Long) As Complex
    parameters:
    - id: value
      type: System.Int64
    return:
      type: System.Numerics.Complex
  nameWithType.vb: Complex.Widening(Int64 to Complex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Complex.Widening(System.Int64 to System.Numerics.Complex)
  name.vb: Widening(Int64 to Complex)
- uid: System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex
  commentId: M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex
  id: op_Implicit(System.SByte)~System.Numerics.Complex
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Implicit(SByte to Complex)
  nameWithType: Complex.Implicit(SByte to Complex)
  fullName: System.Numerics.Complex.Implicit(System.SByte to System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 199
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator Complex(sbyte value)
    content.vb: Public Shared Widening Operator CType(value As SByte) As Complex
    parameters:
    - id: value
      type: System.SByte
    return:
      type: System.Numerics.Complex
  nameWithType.vb: Complex.Widening(SByte to Complex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Complex.Widening(System.SByte to System.Numerics.Complex)
  name.vb: Widening(SByte to Complex)
- uid: System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex
  commentId: M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex
  id: op_Implicit(System.Single)~System.Numerics.Complex
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Implicit(Single to Complex)
  nameWithType: Complex.Implicit(Single to Complex)
  fullName: System.Numerics.Complex.Implicit(System.Single to System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 201
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator Complex(float value)
    content.vb: Public Shared Widening Operator CType(value As Single) As Complex
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Numerics.Complex
  nameWithType.vb: Complex.Widening(Single to Complex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Complex.Widening(System.Single to System.Numerics.Complex)
  name.vb: Widening(Single to Complex)
- uid: System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex
  commentId: M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex
  id: op_Implicit(System.UInt16)~System.Numerics.Complex
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Implicit(UInt16 to Complex)
  nameWithType: Complex.Implicit(UInt16 to Complex)
  fullName: System.Numerics.Complex.Implicit(System.UInt16 to System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 202
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator Complex(ushort value)
    content.vb: Public Shared Widening Operator CType(value As UShort) As Complex
    parameters:
    - id: value
      type: System.UInt16
    return:
      type: System.Numerics.Complex
  nameWithType.vb: Complex.Widening(UInt16 to Complex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Complex.Widening(System.UInt16 to System.Numerics.Complex)
  name.vb: Widening(UInt16 to Complex)
- uid: System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex
  commentId: M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex
  id: op_Implicit(System.UInt32)~System.Numerics.Complex
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Implicit(UInt32 to Complex)
  nameWithType: Complex.Implicit(UInt32 to Complex)
  fullName: System.Numerics.Complex.Implicit(System.UInt32 to System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 204
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator Complex(uint value)
    content.vb: Public Shared Widening Operator CType(value As UInteger) As Complex
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: System.Numerics.Complex
  nameWithType.vb: Complex.Widening(UInt32 to Complex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Complex.Widening(System.UInt32 to System.Numerics.Complex)
  name.vb: Widening(UInt32 to Complex)
- uid: System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex
  commentId: M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex
  id: op_Implicit(System.UInt64)~System.Numerics.Complex
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Implicit(UInt64 to Complex)
  nameWithType: Complex.Implicit(UInt64 to Complex)
  fullName: System.Numerics.Complex.Implicit(System.UInt64 to System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 206
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static implicit operator Complex(ulong value)
    content.vb: Public Shared Widening Operator CType(value As ULong) As Complex
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.Numerics.Complex
  nameWithType.vb: Complex.Widening(UInt64 to Complex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Complex.Widening(System.UInt64 to System.Numerics.Complex)
  name.vb: Widening(UInt64 to Complex)
- uid: System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)
  id: op_Inequality(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Inequality(Complex, Complex)
  nameWithType: Complex.Inequality(Complex, Complex)
  fullName: System.Numerics.Complex.Inequality(System.Numerics.Complex, System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 208
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static bool operator !=(Complex left, Complex right)
    content.vb: Public Shared Operator <>(left As Complex, right As Complex) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Complex
    - id: right
      type: System.Numerics.Complex
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)
  id: op_Multiply(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Multiply(Complex, Complex)
  nameWithType: Complex.Multiply(Complex, Complex)
  fullName: System.Numerics.Complex.Multiply(System.Numerics.Complex, System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Multiply
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 209
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex operator *(Complex left, Complex right)
    content.vb: Public Shared Operator *(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
    - id: right
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)
  id: op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Subtraction(Complex, Complex)
  nameWithType: Complex.Subtraction(Complex, Complex)
  fullName: System.Numerics.Complex.Subtraction(System.Numerics.Complex, System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 210
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex operator -(Complex left, Complex right)
    content.vb: Public Shared Operator -(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
    - id: right
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)
  id: op_UnaryNegation(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: UnaryNegation(Complex)
  nameWithType: Complex.UnaryNegation(Complex)
  fullName: System.Numerics.Complex.UnaryNegation(System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_UnaryNegation
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 211
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex operator -(Complex value)
    content.vb: Public Shared Operator -(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)
  commentId: M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)
  id: Pow(System.Numerics.Complex,System.Double)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Pow(Complex, Double)
  nameWithType: Complex.Pow(Complex, Double)
  fullName: System.Numerics.Complex.Pow(System.Numerics.Complex, System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Pow
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 212
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Pow(Complex value, double power)
    content.vb: Public Shared Function Pow(value As Complex, power As Double) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    - id: power
      type: System.Double
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)
  id: Pow(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Pow(Complex, Complex)
  nameWithType: Complex.Pow(Complex, Complex)
  fullName: System.Numerics.Complex.Pow(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Pow
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 213
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Pow(Complex value, Complex power)
    content.vb: Public Shared Function Pow(value As Complex, power As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    - id: power
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Reciprocal(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)
  id: Reciprocal(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Reciprocal(Complex)
  nameWithType: Complex.Reciprocal(Complex)
  fullName: System.Numerics.Complex.Reciprocal(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reciprocal
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 214
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Reciprocal(Complex value)
    content.vb: Public Shared Function Reciprocal(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Sin(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Sin(System.Numerics.Complex)
  id: Sin(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Sin(Complex)
  nameWithType: Complex.Sin(Complex)
  fullName: System.Numerics.Complex.Sin(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Sin
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 215
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Sin(Complex value)
    content.vb: Public Shared Function Sin(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Sinh(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Sinh(System.Numerics.Complex)
  id: Sinh(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Sinh(Complex)
  nameWithType: Complex.Sinh(Complex)
  fullName: System.Numerics.Complex.Sinh(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Sinh
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 216
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Sinh(Complex value)
    content.vb: Public Shared Function Sinh(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Sqrt(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)
  id: Sqrt(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Sqrt(Complex)
  nameWithType: Complex.Sqrt(Complex)
  fullName: System.Numerics.Complex.Sqrt(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Sqrt
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 217
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Sqrt(Complex value)
    content.vb: Public Shared Function Sqrt(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)
  id: Subtract(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Subtract(Complex, Complex)
  nameWithType: Complex.Subtract(Complex, Complex)
  fullName: System.Numerics.Complex.Subtract(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 218
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Subtract(Complex left, Complex right)
    content.vb: Public Shared Function Subtract(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
    - id: right
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Tan(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Tan(System.Numerics.Complex)
  id: Tan(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Tan(Complex)
  nameWithType: Complex.Tan(Complex)
  fullName: System.Numerics.Complex.Tan(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Tan
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 219
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Tan(Complex value)
    content.vb: Public Shared Function Tan(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.Tanh(System.Numerics.Complex)
  commentId: M:System.Numerics.Complex.Tanh(System.Numerics.Complex)
  id: Tanh(System.Numerics.Complex)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: Tanh(Complex)
  nameWithType: Complex.Tanh(Complex)
  fullName: System.Numerics.Complex.Tanh(System.Numerics.Complex)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Tanh
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 220
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public static Complex Tanh(Complex value)
    content.vb: Public Shared Function Tanh(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Complex.ToString
  commentId: M:System.Numerics.Complex.ToString
  id: ToString
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Complex.ToString()
  fullName: System.Numerics.Complex.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 221
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.Complex.ToString(System.IFormatProvider)
  commentId: M:System.Numerics.Complex.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Complex.ToString(IFormatProvider)
  fullName: System.Numerics.Complex.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 222
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public string ToString(IFormatProvider provider)
    content.vb: Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Complex.ToString(System.String)
  commentId: M:System.Numerics.Complex.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: Complex.ToString(String)
  fullName: System.Numerics.Complex.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 223
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Complex.ToString(System.String,System.IFormatProvider)
  commentId: M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Complex
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  nameWithType: Complex.ToString(String, IFormatProvider)
  fullName: System.Numerics.Complex.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.Numerics/ref/System.Runtime.Numerics.cs
    startLine: 224
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: public string ToString(string format, IFormatProvider provider)
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: false
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: System.IEquatable{System.Numerics.Complex}
  commentId: '!:System.IEquatable{System.Numerics.Complex}'
  definition: System.IEquatable`1
  name: IEquatable<Complex>
  nameWithType: IEquatable<Complex>
  fullName: System.IEquatable<System.Numerics.Complex>
  nameWithType.vb: IEquatable(Of Complex)
  fullname.vb: System.IEquatable(Of System.Numerics.Complex)
  name.vb: IEquatable(Of Complex)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Numerics.Complex
    name: Complex
    nameWithType: Complex
    fullName: System.Numerics.Complex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.Complex
    name: Complex
    nameWithType: Complex
    fullName: System.Numerics.Complex
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: false
  name: IEquatable<>
  nameWithType: IEquatable<>
  fullName: System.IEquatable<>
  nameWithType.vb: IEquatable(Of )
  fullname.vb: System.IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Numerics.Complex
  commentId: T:System.Numerics.Complex
  parent: System.Numerics
  isExternal: false
  name: Complex
  nameWithType: Complex
  fullName: System.Numerics.Complex
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: false
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: false
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
