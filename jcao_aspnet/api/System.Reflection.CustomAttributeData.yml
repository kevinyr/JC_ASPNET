items:
- uid: System.Reflection.CustomAttributeData
  commentId: T:System.Reflection.CustomAttributeData
  id: CustomAttributeData
  parent: System.Reflection
  children:
  - System.Reflection.CustomAttributeData.AttributeType
  - System.Reflection.CustomAttributeData.ConstructorArguments
  - System.Reflection.CustomAttributeData.NamedArguments
  langs:
  - csharp
  - vb
  name: CustomAttributeData
  nameWithType: CustomAttributeData
  fullName: System.Reflection.CustomAttributeData
  type: Class
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CustomAttributeData
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 68
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: 'public class CustomAttributeData : object'
    content.vb: >-
      Public Class CustomAttributeData
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Reflection.CustomAttributeData.AttributeType
  commentId: P:System.Reflection.CustomAttributeData.AttributeType
  id: AttributeType
  parent: System.Reflection.CustomAttributeData
  langs:
  - csharp
  - vb
  name: AttributeType
  nameWithType: CustomAttributeData.AttributeType
  fullName: System.Reflection.CustomAttributeData.AttributeType
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AttributeType
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 71
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual Type AttributeType { get; }
    content.vb: Public Overridable ReadOnly Property AttributeType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.CustomAttributeData.ConstructorArguments
  commentId: P:System.Reflection.CustomAttributeData.ConstructorArguments
  id: ConstructorArguments
  parent: System.Reflection.CustomAttributeData
  langs:
  - csharp
  - vb
  name: ConstructorArguments
  nameWithType: CustomAttributeData.ConstructorArguments
  fullName: System.Reflection.CustomAttributeData.ConstructorArguments
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConstructorArguments
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 72
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual Collections.Generic.IList<CustomAttributeTypedArgument> ConstructorArguments { get; }
    content.vb: Public Overridable ReadOnly Property ConstructorArguments As Collections.Generic.IList(Of CustomAttributeTypedArgument)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeTypedArgument}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.CustomAttributeData.NamedArguments
  commentId: P:System.Reflection.CustomAttributeData.NamedArguments
  id: NamedArguments
  parent: System.Reflection.CustomAttributeData
  langs:
  - csharp
  - vb
  name: NamedArguments
  nameWithType: CustomAttributeData.NamedArguments
  fullName: System.Reflection.CustomAttributeData.NamedArguments
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NamedArguments
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 73
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual Collections.Generic.IList<CustomAttributeNamedArgument> NamedArguments { get; }
    content.vb: Public Overridable ReadOnly Property NamedArguments As Collections.Generic.IList(Of CustomAttributeNamedArgument)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeNamedArgument}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeTypedArgument}
  commentId: '!:System.Collections.Generic.IList{System.Reflection.CustomAttributeTypedArgument}'
  definition: System.Collections.Generic.IList`1
  name: Collections.Generic.IList<CustomAttributeTypedArgument>
  nameWithType: Collections.Generic.IList<CustomAttributeTypedArgument>
  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeTypedArgument>
  nameWithType.vb: Collections.Generic.IList(Of CustomAttributeTypedArgument)
  fullname.vb: System.Collections.Generic.IList(Of System.Reflection.CustomAttributeTypedArgument)
  name.vb: Collections.Generic.IList(Of CustomAttributeTypedArgument)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    nameWithType: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.CustomAttributeTypedArgument
    name: CustomAttributeTypedArgument
    nameWithType: CustomAttributeTypedArgument
    fullName: System.Reflection.CustomAttributeTypedArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    nameWithType: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.CustomAttributeTypedArgument
    name: CustomAttributeTypedArgument
    nameWithType: CustomAttributeTypedArgument
    fullName: System.Reflection.CustomAttributeTypedArgument
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: false
  name: Collections.Generic.IList<>
  nameWithType: Collections.Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: Collections.Generic.IList(Of )
  fullname.vb: System.Collections.Generic.IList(Of )
  name.vb: Collections.Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    nameWithType: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    nameWithType: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeNamedArgument}
  commentId: '!:System.Collections.Generic.IList{System.Reflection.CustomAttributeNamedArgument}'
  definition: System.Collections.Generic.IList`1
  name: Collections.Generic.IList<CustomAttributeNamedArgument>
  nameWithType: Collections.Generic.IList<CustomAttributeNamedArgument>
  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeNamedArgument>
  nameWithType.vb: Collections.Generic.IList(Of CustomAttributeNamedArgument)
  fullname.vb: System.Collections.Generic.IList(Of System.Reflection.CustomAttributeNamedArgument)
  name.vb: Collections.Generic.IList(Of CustomAttributeNamedArgument)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    nameWithType: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.CustomAttributeNamedArgument
    name: CustomAttributeNamedArgument
    nameWithType: CustomAttributeNamedArgument
    fullName: System.Reflection.CustomAttributeNamedArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    nameWithType: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.CustomAttributeNamedArgument
    name: CustomAttributeNamedArgument
    nameWithType: CustomAttributeNamedArgument
    fullName: System.Reflection.CustomAttributeNamedArgument
  - name: )
    nameWithType: )
    fullName: )
