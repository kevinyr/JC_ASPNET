items:
- uid: System.Reflection.CustomAttributeExtensions
  id: CustomAttributeExtensions
  parent: System.Reflection
  children:
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  name: CustomAttributeExtensions
  fullName: System.Reflection.CustomAttributeExtensions
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 7
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Contains static methods for retrieving custom attributes.
  syntax:
    content: 'public class CustomAttributeExtensions : object'
    content.vb: Public Class CustomAttributeExtensions Inherits Object
  inheritance:
  - System.Object
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  id: GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttribute(Assembly, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 10
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified assembly.
  syntax:
    content: public static Attribute GetCustomAttribute(Assembly element, Type attributeType)
    content.vb: Public Shared Function GetCustomAttribute(element As Assembly, attributeType As Type) As Attribute
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: The assembly to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Attribute
      description: A custom attribute that matches *attributeType*, or null if no such attribute is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
  - type: System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  id: GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttribute(MemberInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 18
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified member.
  syntax:
    content: public static Attribute GetCustomAttribute(MemberInfo element, Type attributeType)
    content.vb: Public Shared Function GetCustomAttribute(element As MemberInfo, attributeType As Type) As Attribute
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Attribute
      description: A custom attribute that matches *attributeType*, or null if no such attribute is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  id: GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 44
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified member, and optionally inspects the ancestors of that member.
  syntax:
    content: public static Attribute GetCustomAttribute(MemberInfo element, Type attributeType, bool inherit)
    content.vb: Public Shared Function GetCustomAttribute(element As MemberInfo, attributeType As Type, inherit As Boolean) As Attribute
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    - id: inherit
      type: System.Boolean
      description: true to inspect the ancestors of *element*; otherwise, false.
    return:
      type: System.Attribute
      description: A custom attribute that matches *attributeType*, or null if no such attribute is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)
  id: GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttribute(Module, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 14
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified module.
  syntax:
    content: public static Attribute GetCustomAttribute(Module element, Type attributeType)
    content.vb: Public Shared Function GetCustomAttribute(element As Module, attributeType As Type) As Attribute
    parameters:
    - id: element
      type: System.Reflection.Module
      description: The module to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Attribute
      description: A custom attribute that matches *attributeType*, or null if no such attribute is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
  - type: System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  id: GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttribute(ParameterInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 22
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified parameter.
  syntax:
    content: public static Attribute GetCustomAttribute(ParameterInfo element, Type attributeType)
    content.vb: Public Shared Function GetCustomAttribute(element As ParameterInfo, attributeType As Type) As Attribute
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Attribute
      description: A custom attribute that matches *attributeType*, or null if no such attribute is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
  - type: System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  id: GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 48
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified parameter, and optionally inspects the ancestors of that parameter.
  syntax:
    content: public static Attribute GetCustomAttribute(ParameterInfo element, Type attributeType, bool inherit)
    content.vb: Public Shared Function GetCustomAttribute(element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    - id: inherit
      type: System.Boolean
      description: true to inspect the ancestors of *element*; otherwise, false.
    return:
      type: System.Attribute
      description: A custom attribute matching *attributeType*, or null if no such attribute is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
  - type: System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)
  id: GetCustomAttribute``1(System.Reflection.Assembly)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttribute<T>(Assembly)
  name.vb: GetCustomAttribute(Of T)(Assembly)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.Assembly)
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.Assembly)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 27
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified assembly.
  syntax:
    content: 'public static T GetCustomAttribute<T>(Assembly element)where T : Attribute'
    content.vb: Public Shared Function GetCustomAttribute(Of T As Attribute)(element As Assembly) As T
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: The assembly to inspect.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: A custom attribute that matches *T*, or null if no such attribute is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  id: GetCustomAttribute``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttribute<T>(MemberInfo)
  name.vb: GetCustomAttribute(Of T)(MemberInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo)
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 35
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified member.
  syntax:
    content: 'public static T GetCustomAttribute<T>(MemberInfo element)where T : Attribute'
    content.vb: Public Shared Function GetCustomAttribute(Of T As Attribute)(element As MemberInfo) As T
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: A custom attribute that matches *T*, or null if no such attribute is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  id: GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttribute<T>(MemberInfo, Boolean)
  name.vb: GetCustomAttribute(Of T)(MemberInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo, System.Boolean)
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 53
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified member, and optionally inspects the ancestors of that member.
  syntax:
    content: 'public static T GetCustomAttribute<T>(MemberInfo element, bool inherit)where T : Attribute'
    content.vb: Public Shared Function GetCustomAttribute(Of T As Attribute)(element As MemberInfo, inherit As Boolean) As T
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: inherit
      type: System.Boolean
      description: true to inspect the ancestors of *element*; otherwise, false.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: A custom attribute that matches *T*, or null if no such attribute is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)
  id: GetCustomAttribute``1(System.Reflection.Module)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttribute<T>(Module)
  name.vb: GetCustomAttribute(Of T)(Module)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.Module)
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.Module)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 31
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified module.
  syntax:
    content: 'public static T GetCustomAttribute<T>(Module element)where T : Attribute'
    content.vb: Public Shared Function GetCustomAttribute(Of T As Attribute)(element As Module) As T
    parameters:
    - id: element
      type: System.Reflection.Module
      description: The module to inspect.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: A custom attribute that matches *T*, or null if no such attribute is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)
  id: GetCustomAttribute``1(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttribute<T>(ParameterInfo)
  name.vb: GetCustomAttribute(Of T)(ParameterInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.ParameterInfo)
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 39
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified parameter.
  syntax:
    content: 'public static T GetCustomAttribute<T>(ParameterInfo element)where T : Attribute'
    content.vb: Public Shared Function GetCustomAttribute(Of T As Attribute)(element As ParameterInfo) As T
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: A custom attribute that matches *T*, or null if no such attribute is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  id: GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttribute<T>(ParameterInfo, Boolean)
  name.vb: GetCustomAttribute(Of T)(ParameterInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.ParameterInfo, System.Boolean)
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.ParameterInfo, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 57
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified parameter, and optionally inspects the ancestors of that parameter.
  syntax:
    content: 'public static T GetCustomAttribute<T>(ParameterInfo element, bool inherit)where T : Attribute'
    content.vb: Public Shared Function GetCustomAttribute(Of T As Attribute)(element As ParameterInfo, inherit As Boolean) As T
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: inherit
      type: System.Boolean
      description: true to inspect the ancestors of *element*; otherwise, false.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: A custom attribute that matches *T*, or null if no such attribute is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)
  id: GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes(Assembly)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 64
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes that are applied to a specified assembly.
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(Assembly element)
    content.vb: Public Shared Function GetCustomAttributes(element As Assembly) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: The assembly to inspect.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to *element*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  id: GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes(Assembly, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 92
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified assembly.
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(Assembly element, Type attributeType)
    content.vb: Public Shared Function GetCustomAttributes(element As Assembly, attributeType As Type) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: The assembly to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to *element* and that match *attributeType*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  id: GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes(MemberInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 72
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes that are applied to a specified member.
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(MemberInfo element)
    content.vb: Public Shared Function GetCustomAttributes(element As MemberInfo) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to *element*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes(MemberInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 81
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes that are applied to a specified member, and optionally inspects the ancestors of that member.
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(MemberInfo element, bool inherit)
    content.vb: Public Shared Function GetCustomAttributes(element As MemberInfo, inherit As Boolean) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: inherit
      type: System.Boolean
      description: true to inspect the ancestors of *element*; otherwise, false.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to *element* that match the specified criteria, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes(MemberInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 100
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified member.
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(MemberInfo element, Type attributeType)
    content.vb: Public Shared Function GetCustomAttributes(element As MemberInfo, attributeType As Type) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to *element* and that match *attributeType*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 126
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified member, and optionally inspects the ancestors of that member.
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(MemberInfo element, Type attributeType, bool inherit)
    content.vb: Public Shared Function GetCustomAttributes(element As MemberInfo, attributeType As Type, inherit As Boolean) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    - id: inherit
      type: System.Boolean
      description: true to inspect the ancestors of *element*; otherwise, false.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to *element* and that match *attributeType*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)
  id: GetCustomAttributes(System.Reflection.Module)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes(Module)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 68
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes that are applied to a specified module.
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(Module element)
    content.vb: Public Shared Function GetCustomAttributes(element As Module) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.Module
      description: The module to inspect.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to *element*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)
  id: GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes(Module, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 96
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified module.
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(Module element, Type attributeType)
    content.vb: Public Shared Function GetCustomAttributes(element As Module, attributeType As Type) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.Module
      description: The module to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to *element* and that match *attributeType*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  id: GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes(ParameterInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 76
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes that are applied to a specified parameter.
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(ParameterInfo element)
    content.vb: Public Shared Function GetCustomAttributes(element As ParameterInfo) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to *element*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes(ParameterInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 85
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(ParameterInfo element, bool inherit)
    content.vb: Public Shared Function GetCustomAttributes(element As ParameterInfo, inherit As Boolean) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: inherit
      type: System.Boolean
      description: true to inspect the ancestors of *element*; otherwise, false.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to *element*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes(ParameterInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 104
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter.
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(ParameterInfo element, Type attributeType)
    content.vb: Public Shared Function GetCustomAttributes(element As ParameterInfo, attributeType As Type) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to *element* and that match *attributeType*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 130
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(ParameterInfo element, Type attributeType, bool inherit)
    content.vb: Public Shared Function GetCustomAttributes(element As ParameterInfo, attributeType As Type, inherit As Boolean) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    - id: inherit
      type: System.Boolean
      description: true to inspect the ancestors of *element*; otherwise, false.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to *element* and that match *attributeType*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)
  id: GetCustomAttributes``1(System.Reflection.Assembly)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes<T>(Assembly)
  name.vb: GetCustomAttributes(Of T)(Assembly)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.Assembly)
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.Assembly)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 109
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified assembly.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> GetCustomAttributes<T>(Assembly element)where T : Attribute'
    content.vb: Public Shared Function GetCustomAttributes(Of T As Attribute)(element As Assembly) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: The assembly to inspect.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: A collection of the custom attributes that are applied to *element* and that match *T*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  id: GetCustomAttributes``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes<T>(MemberInfo)
  name.vb: GetCustomAttributes(Of T)(MemberInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo)
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 117
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified member.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> GetCustomAttributes<T>(MemberInfo element)where T : Attribute'
    content.vb: Public Shared Function GetCustomAttributes(Of T As Attribute)(element As MemberInfo) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: A collection of the custom attributes that are applied to *element* and that match *T*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  id: GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes<T>(MemberInfo, Boolean)
  name.vb: GetCustomAttributes(Of T)(MemberInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo, System.Boolean)
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 135
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified member, and optionally inspects the ancestors of that member.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> GetCustomAttributes<T>(MemberInfo element, bool inherit)where T : Attribute'
    content.vb: Public Shared Function GetCustomAttributes(Of T As Attribute)(element As MemberInfo, inherit As Boolean) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: inherit
      type: System.Boolean
      description: true to inspect the ancestors of *element*; otherwise, false.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: A collection of the custom attributes that are applied to *element* and that match *T*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)
  id: GetCustomAttributes``1(System.Reflection.Module)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes<T>(Module)
  name.vb: GetCustomAttributes(Of T)(Module)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.Module)
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.Module)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 113
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified module.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> GetCustomAttributes<T>(Module element)where T : Attribute'
    content.vb: Public Shared Function GetCustomAttributes(Of T As Attribute)(element As Module) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: element
      type: System.Reflection.Module
      description: The module to inspect.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: A collection of the custom attributes that are applied to *element* and that match *T*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)
  id: GetCustomAttributes``1(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes<T>(ParameterInfo)
  name.vb: GetCustomAttributes(Of T)(ParameterInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.ParameterInfo)
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 121
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> GetCustomAttributes<T>(ParameterInfo element)where T : Attribute'
    content.vb: Public Shared Function GetCustomAttributes(Of T As Attribute)(element As ParameterInfo) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: A collection of the custom attributes that are applied to *element* and that match *T*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  id: GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  name: GetCustomAttributes<T>(ParameterInfo, Boolean)
  name.vb: GetCustomAttributes(Of T)(ParameterInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.ParameterInfo, System.Boolean)
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.ParameterInfo, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 139
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> GetCustomAttributes<T>(ParameterInfo element, bool inherit)where T : Attribute'
    content.vb: Public Shared Function GetCustomAttributes(Of T As Attribute)(element As ParameterInfo, inherit As Boolean) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: inherit
      type: System.Boolean
      description: true to inspect the ancestors of *element*; otherwise, false.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: A collection of the custom attributes that are applied to *element* and that match *T*, or an empty collection if no such attributes exist.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* is null.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
  - type: System.TypeLoadException
    description: A custom attribute type cannot be loaded.
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)
  id: IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  name: IsDefined(Assembly, Type)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 146
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Indicates whether custom attributes of a specified type are applied to a specified assembly.
  syntax:
    content: public static bool IsDefined(Assembly element, Type attributeType)
    content.vb: Public Shared Function IsDefined(element As Assembly, attributeType As Type) As Boolean
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: The assembly to inspect.
    - id: attributeType
      type: System.Type
      description: The type of the attribute to search for.
    return:
      type: System.Boolean
      description: true if an attribute of the specified type is applied to *element*; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  id: IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  name: IsDefined(MemberInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 154
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Indicates whether custom attributes of a specified type are applied to a specified member.
  syntax:
    content: public static bool IsDefined(MemberInfo element, Type attributeType)
    content.vb: Public Shared Function IsDefined(element As MemberInfo, attributeType As Type) As Boolean
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Boolean
      description: true if an attribute of the specified type is applied to *element*; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  id: IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  name: IsDefined(MemberInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 163
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Indicates whether custom attributes of a specified type are applied to a specified member, and, optionally, applied to its ancestors.
  syntax:
    content: public static bool IsDefined(MemberInfo element, Type attributeType, bool inherit)
    content.vb: Public Shared Function IsDefined(element As MemberInfo, attributeType As Type, inherit As Boolean) As Boolean
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: attributeType
      type: System.Type
      description: The type of the attribute to search for.
    - id: inherit
      type: System.Boolean
      description: true to inspect the ancestors of *element*; otherwise, false.
    return:
      type: System.Boolean
      description: true if an attribute of the specified type is applied to *element*; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
  - type: System.NotSupportedException
    description: '*element* is not a constructor, method, property, event, type, or field.'
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)
  id: IsDefined(System.Reflection.Module,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  name: IsDefined(Module, Type)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 150
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Indicates whether custom attributes of a specified type are applied to a specified module.
  syntax:
    content: public static bool IsDefined(Module element, Type attributeType)
    content.vb: Public Shared Function IsDefined(element As Module, attributeType As Type) As Boolean
    parameters:
    - id: element
      type: System.Reflection.Module
      description: The module to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Boolean
      description: true if an attribute of the specified type is applied to *element*; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)
  id: IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  name: IsDefined(ParameterInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 158
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Indicates whether custom attributes of a specified type are applied to a specified parameter.
  syntax:
    content: public static bool IsDefined(ParameterInfo element, Type attributeType)
    content.vb: Public Shared Function IsDefined(element As ParameterInfo, attributeType As Type) As Boolean
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Boolean
      description: true if an attribute of the specified type is applied to *element*; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  id: IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  name: IsDefined(ParameterInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/CustomAttributeExtensions.cs
    startLine: 167
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: Indicates whether custom attributes of a specified type are applied to a specified parameter, and, optionally, applied to its ancestors.
  syntax:
    content: public static bool IsDefined(ParameterInfo element, Type attributeType, bool inherit)
    content.vb: Public Shared Function IsDefined(element As ParameterInfo, attributeType As Type, inherit As Boolean) As Boolean
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    - id: inherit
      type: System.Boolean
      description: true to inspect the ancestors of *element*; otherwise, false.
    return:
      type: System.Boolean
      description: true if an attribute of the specified type is applied to *element*; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*element* or *attributeType* is null.'
  - type: System.ArgumentException
    description: '*attributeType* is not derived from <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>.'
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Reflection.Assembly
  fullName: System.Reflection.Assembly
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  fullName: System.Attribute
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: false
  name: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Collections.Generic.IEnumerable{System.Attribute}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<Attribute>
  name.vb: Collections.Generic.IEnumerable(Of Attribute)
  fullName: System.Collections.Generic.IEnumerable<System.Attribute>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Attribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  name.vb: Collections.Generic.IEnumerable(Of )
  fullName: System.Collections.Generic.IEnumerable<>
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<T>
  name.vb: Collections.Generic.IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.Reflection.AmbiguousMatchException
  isExternal: false
  name: AmbiguousMatchException
  fullName: System.Reflection.AmbiguousMatchException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.TypeLoadException
  parent: System
  isExternal: false
  name: TypeLoadException
  fullName: System.TypeLoadException
