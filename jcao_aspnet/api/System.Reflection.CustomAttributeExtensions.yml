items:
- uid: System.Reflection.CustomAttributeExtensions
  commentId: T:System.Reflection.CustomAttributeExtensions
  id: CustomAttributeExtensions
  parent: System.Reflection
  children:
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  langs:
  - csharp
  - vb
  name: CustomAttributeExtensions
  nameWithType: CustomAttributeExtensions
  fullName: System.Reflection.CustomAttributeExtensions
  type: Class
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CustomAttributeExtensions
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 10
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public class CustomAttributeExtensions : object'
    content.vb: >-
      Public Class CustomAttributeExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  id: GetCustomAttribute(System.Reflection.Assembly,System.Type)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttribute(Assembly, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Assembly, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttribute
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 12
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Attribute GetCustomAttribute(this Assembly element, Type attributeType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(element As Assembly, attributeType As Type) As Attribute
    parameters:
    - id: element
      type: System.Reflection.Assembly
    - id: attributeType
      type: System.Type
    return:
      type: System.Attribute
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  id: GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttribute
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 13
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Attribute GetCustomAttribute(this MemberInfo element, Type attributeType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(element As MemberInfo, attributeType As Type) As Attribute
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
    - id: attributeType
      type: System.Type
    return:
      type: System.Attribute
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  id: GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttribute
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 14
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Attribute GetCustomAttribute(this MemberInfo element, Type attributeType, bool inherit)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(element As MemberInfo, attributeType As Type, inherit As Boolean) As Attribute
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
    - id: attributeType
      type: System.Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Attribute
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)
  id: GetCustomAttribute(System.Reflection.Module,System.Type)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttribute(Module, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Module, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttribute
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 15
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Attribute GetCustomAttribute(this Module element, Type attributeType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(element As  Module, attributeType As Type) As Attribute
    parameters:
    - id: element
      type: System.Reflection.Module
    - id: attributeType
      type: System.Type
    return:
      type: System.Attribute
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  id: GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttribute(ParameterInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttribute
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 16
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Attribute GetCustomAttribute(this ParameterInfo element, Type attributeType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(element As ParameterInfo, attributeType As Type) As Attribute
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
    - id: attributeType
      type: System.Type
    return:
      type: System.Attribute
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  id: GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttribute
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 17
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Attribute GetCustomAttribute(this ParameterInfo element, Type attributeType, bool inherit)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
    - id: attributeType
      type: System.Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Attribute
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)
  id: GetCustomAttribute``1(System.Reflection.Assembly)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttribute<T>(Assembly)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Assembly)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttribute
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 18
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public static T GetCustomAttribute<T>(this Assembly element)where T : Attribute'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(Of T As Attribute)(element As Assembly) As T
    parameters:
    - id: element
      type: System.Reflection.Assembly
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(Assembly)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.Assembly)
  name.vb: GetCustomAttribute(Of T)(Assembly)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  id: GetCustomAttribute``1(System.Reflection.MemberInfo)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttribute<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttribute
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 19
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public static T GetCustomAttribute<T>(this MemberInfo element)where T : Attribute'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(Of T As Attribute)(element As MemberInfo) As T
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(MemberInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo)
  name.vb: GetCustomAttribute(Of T)(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  id: GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttribute<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttribute
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 20
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public static T GetCustomAttribute<T>(this MemberInfo element, bool inherit)where T : Attribute'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(Of T As Attribute)(element As MemberInfo, inherit As Boolean) As T
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
    - id: inherit
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(MemberInfo, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo, System.Boolean)
  name.vb: GetCustomAttribute(Of T)(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)
  id: GetCustomAttribute``1(System.Reflection.Module)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttribute<T>(Module)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Module)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.Module)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttribute
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 21
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public static T GetCustomAttribute<T>(this Module element)where T : Attribute'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(Of T As Attribute)(element As  Module) As T
    parameters:
    - id: element
      type: System.Reflection.Module
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(Module)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.Module)
  name.vb: GetCustomAttribute(Of T)(Module)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)
  id: GetCustomAttribute``1(System.Reflection.ParameterInfo)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttribute<T>(ParameterInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttribute
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 22
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public static T GetCustomAttribute<T>(this ParameterInfo element)where T : Attribute'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(Of T As Attribute)(element As ParameterInfo) As T
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(ParameterInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.ParameterInfo)
  name.vb: GetCustomAttribute(Of T)(ParameterInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  id: GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttribute<T>(ParameterInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.ParameterInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttribute
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 23
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public static T GetCustomAttribute<T>(this ParameterInfo element, bool inherit)where T : Attribute'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(Of T As Attribute)(element As ParameterInfo, inherit As Boolean) As T
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
    - id: inherit
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(ParameterInfo, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.ParameterInfo, System.Boolean)
  name.vb: GetCustomAttribute(Of T)(ParameterInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)
  id: GetCustomAttributes(System.Reflection.Assembly)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Assembly)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Assembly)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 24
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(this Assembly element)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(element As Assembly) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.Assembly
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  id: GetCustomAttributes(System.Reflection.Assembly,System.Type)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Assembly, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Assembly, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 25
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(this Assembly element, Type attributeType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(element As Assembly, attributeType As Type) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.Assembly
    - id: attributeType
      type: System.Type
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  id: GetCustomAttributes(System.Reflection.MemberInfo)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 26
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(this MemberInfo element)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(element As MemberInfo) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 27
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(this MemberInfo element, bool inherit)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(element As MemberInfo, inherit As Boolean) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
    - id: inherit
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 28
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(this MemberInfo element, Type attributeType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(element As MemberInfo, attributeType As Type) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
    - id: attributeType
      type: System.Type
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 29
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(this MemberInfo element, Type attributeType, bool inherit)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(element As MemberInfo, attributeType As Type, inherit As Boolean) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
    - id: attributeType
      type: System.Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)
  id: GetCustomAttributes(System.Reflection.Module)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Module)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Module)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 30
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(this Module element)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(element As  Module) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.Module
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)
  id: GetCustomAttributes(System.Reflection.Module,System.Type)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Module, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Module, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 31
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(this Module element, Type attributeType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(element As  Module, attributeType As Type) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.Module
    - id: attributeType
      type: System.Type
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  id: GetCustomAttributes(System.Reflection.ParameterInfo)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(ParameterInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 32
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(this ParameterInfo element)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(element As ParameterInfo) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(ParameterInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 33
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(this ParameterInfo element, bool inherit)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(element As ParameterInfo, inherit As Boolean) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
    - id: inherit
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(ParameterInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 34
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(this ParameterInfo element, Type attributeType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(element As ParameterInfo, attributeType As Type) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
    - id: attributeType
      type: System.Type
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 35
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static Collections.Generic.IEnumerable<Attribute> GetCustomAttributes(this ParameterInfo element, Type attributeType, bool inherit)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(element As ParameterInfo, attributeType As Type, inherit As Boolean) As Collections.Generic.IEnumerable(Of Attribute)
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
    - id: attributeType
      type: System.Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)
  id: GetCustomAttributes``1(System.Reflection.Assembly)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes<T>(Assembly)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Assembly)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 36
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> GetCustomAttributes<T>(this Assembly element)where T : Attribute'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(Of T As Attribute)(element As Assembly) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: element
      type: System.Reflection.Assembly
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(Assembly)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.Assembly)
  name.vb: GetCustomAttributes(Of T)(Assembly)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  id: GetCustomAttributes``1(System.Reflection.MemberInfo)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 37
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> GetCustomAttributes<T>(this MemberInfo element)where T : Attribute'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(Of T As Attribute)(element As MemberInfo) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(MemberInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo)
  name.vb: GetCustomAttributes(Of T)(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  id: GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 38
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> GetCustomAttributes<T>(this MemberInfo element, bool inherit)where T : Attribute'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(Of T As Attribute)(element As MemberInfo, inherit As Boolean) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
    - id: inherit
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(MemberInfo, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo, System.Boolean)
  name.vb: GetCustomAttributes(Of T)(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)
  id: GetCustomAttributes``1(System.Reflection.Module)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes<T>(Module)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Module)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.Module)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 39
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> GetCustomAttributes<T>(this Module element)where T : Attribute'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(Of T As Attribute)(element As  Module) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: element
      type: System.Reflection.Module
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(Module)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.Module)
  name.vb: GetCustomAttributes(Of T)(Module)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)
  id: GetCustomAttributes``1(System.Reflection.ParameterInfo)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes<T>(ParameterInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 40
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> GetCustomAttributes<T>(this ParameterInfo element)where T : Attribute'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(Of T As Attribute)(element As ParameterInfo) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(ParameterInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.ParameterInfo)
  name.vb: GetCustomAttributes(Of T)(ParameterInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  id: GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: GetCustomAttributes<T>(ParameterInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.ParameterInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCustomAttributes
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 41
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> GetCustomAttributes<T>(this ParameterInfo element, bool inherit)where T : Attribute'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttributes(Of T As Attribute)(element As ParameterInfo, inherit As Boolean) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
    - id: inherit
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(ParameterInfo, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.ParameterInfo, System.Boolean)
  name.vb: GetCustomAttributes(Of T)(ParameterInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)
  id: IsDefined(System.Reflection.Assembly,System.Type)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: IsDefined(Assembly, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(Assembly, Type)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDefined
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 42
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static bool IsDefined(this Assembly element, Type attributeType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsDefined(element As Assembly, attributeType As Type) As Boolean
    parameters:
    - id: element
      type: System.Reflection.Assembly
    - id: attributeType
      type: System.Type
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  id: IsDefined(System.Reflection.MemberInfo,System.Type)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: IsDefined(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDefined
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 43
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static bool IsDefined(this MemberInfo element, Type attributeType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsDefined(element As MemberInfo, attributeType As Type) As Boolean
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
    - id: attributeType
      type: System.Type
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  id: IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDefined
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 44
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static bool IsDefined(this MemberInfo element, Type attributeType, bool inherit)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsDefined(element As MemberInfo, attributeType As Type, inherit As Boolean) As Boolean
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
    - id: attributeType
      type: System.Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)
  id: IsDefined(System.Reflection.Module,System.Type)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: IsDefined(Module, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(Module, Type)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDefined
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 45
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static bool IsDefined(this Module element, Type attributeType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsDefined(element As  Module, attributeType As Type) As Boolean
    parameters:
    - id: element
      type: System.Reflection.Module
    - id: attributeType
      type: System.Type
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)
  id: IsDefined(System.Reflection.ParameterInfo,System.Type)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: IsDefined(ParameterInfo, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(ParameterInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDefined
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 46
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static bool IsDefined(this ParameterInfo element, Type attributeType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsDefined(element As ParameterInfo, attributeType As Type) As Boolean
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
    - id: attributeType
      type: System.Type
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  id: IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  - vb
  name: IsDefined(ParameterInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.IsDefined(ParameterInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDefined
    path: src/System.Reflection.Extensions/ref/System.Reflection.Extensions.cs
    startLine: 47
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  syntax:
    content: public static bool IsDefined(this ParameterInfo element, Type attributeType, bool inherit)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsDefined(element As ParameterInfo, attributeType As Type, inherit As Boolean) As Boolean
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
    - id: attributeType
      type: System.Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Module
  commentId: T:System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: false
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEnumerable{System.Attribute}
  commentId: '!:System.Collections.Generic.IEnumerable{System.Attribute}'
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<Attribute>
  nameWithType: Collections.Generic.IEnumerable<Attribute>
  fullName: System.Collections.Generic.IEnumerable<System.Attribute>
  nameWithType.vb: Collections.Generic.IEnumerable(Of Attribute)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Attribute)
  name.vb: Collections.Generic.IEnumerable(Of Attribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  nameWithType: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: Collections.Generic.IEnumerable(Of )
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: '!:System.Collections.Generic.IEnumerable{`0}'
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: Generic.IEnumerable<T>
  nameWithType: Generic.IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: Generic.IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Generic.IEnumerable
    nameWithType: Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Generic.IEnumerable
    nameWithType: Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
