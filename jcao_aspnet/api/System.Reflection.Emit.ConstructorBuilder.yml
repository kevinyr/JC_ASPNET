items:
- uid: System.Reflection.Emit.ConstructorBuilder
  id: ConstructorBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.ConstructorBuilder.Attributes
  - System.Reflection.Emit.ConstructorBuilder.CallingConvention
  - System.Reflection.Emit.ConstructorBuilder.DeclaringType
  - System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  - System.Reflection.Emit.ConstructorBuilder.GetILGenerator
  - System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  - System.Reflection.Emit.ConstructorBuilder.GetParameters
  - System.Reflection.Emit.ConstructorBuilder.InitLocals
  - System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags
  - System.Reflection.Emit.ConstructorBuilder.Name
  - System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  - System.Reflection.Emit.ConstructorBuilder.ToString
  name: ConstructorBuilder
  fullName: System.Reflection.Emit.ConstructorBuilder
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 18
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines and represents a constructor of a dynamic class.
  syntax:
    content: 'public sealed class ConstructorBuilder : ConstructorInfo, ConstructorInfo'
    content.vb: Public NotInheritable Class ConstructorBuilder Inherits ConstructorInfo Implements ConstructorInfo
  inheritance:
  - System.Object
  implements:
  - System.Reflection.ConstructorInfo
- uid: System.Reflection.Emit.ConstructorBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.ConstructorBuilder
  name: Attributes
  fullName: System.Reflection.Emit.ConstructorBuilder.Attributes
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 126
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Retrieves the attributes for this constructor.
  syntax:
    content: public override MethodAttributes Attributes { get; }
    content.vb: Public Overrides ReadOnly Property Attributes As MethodAttributes
    parameters: []
    return:
      type: System.Reflection.MethodAttributes
      description: Returns the attributes for this constructor.
- uid: System.Reflection.Emit.ConstructorBuilder.CallingConvention
  id: CallingConvention
  parent: System.Reflection.Emit.ConstructorBuilder
  name: CallingConvention
  fullName: System.Reflection.Emit.ConstructorBuilder.CallingConvention
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 250
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets a <xref href="System.Reflection.CallingConventions" data-throw-if-not-resolved="false"></xref> value that depends on whether the declaring type is generic.
  syntax:
    content: public override CallingConventions CallingConvention { get; }
    content.vb: Public Overrides ReadOnly Property CallingConvention As CallingConventions
    parameters: []
    return:
      type: System.Reflection.CallingConventions
      description: <xref href="System.Reflection.CallingConventions.HasThis" data-throw-if-not-resolved="false"></xref> if the declaring type is generic; otherwise, <xref href="System.Reflection.CallingConventions.Standard" data-throw-if-not-resolved="false"></xref>.
- uid: System.Reflection.Emit.ConstructorBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.ConstructorBuilder
  name: DeclaringType
  fullName: System.Reflection.Emit.ConstructorBuilder.DeclaringType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 101
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Retrieves a reference to the <xref href="System.Type" data-throw-if-not-resolved="false"></xref> object for the type that declares this member.
  syntax:
    content: public override Type DeclaringType { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
    parameters: []
    return:
      type: System.Type
      description: Returns the <xref href="System.Type" data-throw-if-not-resolved="false"></xref> object for the type that declares this member.
- uid: System.Reflection.Emit.ConstructorBuilder.InitLocals
  id: InitLocals
  parent: System.Reflection.Emit.ConstructorBuilder
  name: InitLocals
  fullName: System.Reflection.Emit.ConstructorBuilder.InitLocals
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 303
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets or sets whether the local variables in this constructor should be zero-initialized.
  syntax:
    content: public bool InitLocals { get; set; }
    content.vb: Public Property InitLocals As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Read/write. Gets or sets whether the local variables in this constructor should be zero-initialized.
- uid: System.Reflection.Emit.ConstructorBuilder.Name
  id: Name
  parent: System.Reflection.Emit.ConstructorBuilder
  name: Name
  fullName: System.Reflection.Emit.ConstructorBuilder.Name
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 106
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Retrieves the name of this constructor.
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: Returns the name of this constructor.
- uid: System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  id: DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  parent: System.Reflection.Emit.ConstructorBuilder
  name: DefineParameter(Int32, ParameterAttributes, String)
  fullName: System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32, System.Reflection.ParameterAttributes, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 175
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines a parameter of this constructor.
  syntax:
    content: public ParameterBuilder DefineParameter(int iSequence, ParameterAttributes attributes, string strParamName)
    content.vb: Public Function DefineParameter(iSequence As Integer, attributes As ParameterAttributes, strParamName As String) As ParameterBuilder
    parameters:
    - id: iSequence
      type: System.Int32
      description: The position of the parameter in the parameter list. Parameters are indexed beginning with the number 1 for the first parameter.
    - id: attributes
      type: System.Reflection.ParameterAttributes
      description: The attributes of the parameter.
    - id: strParamName
      type: System.String
      description: The name of the parameter. The name can be the null string.
    return:
      type: System.Reflection.Emit.ParameterBuilder
      description: Returns a ParameterBuilder object that represents the new parameter of this constructor.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*iSequence* is less than 0 (zero), or it is greater than the number of parameters of the constructor.'
  - type: System.InvalidOperationException
    description: The containing type has been created using <xref href="System.Reflection.Emit.TypeBuilder.CreateType" data-throw-if-not-resolved="false"></xref>.
- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator
  id: GetILGenerator
  parent: System.Reflection.Emit.ConstructorBuilder
  name: GetILGenerator()
  fullName: System.Reflection.Emit.ConstructorBuilder.GetILGenerator()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 191
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets an <xref href="System.Reflection.Emit.ILGenerator" data-throw-if-not-resolved="false"></xref> for this constructor.
  syntax:
    content: public ILGenerator GetILGenerator()
    content.vb: Public Function GetILGenerator As ILGenerator
    return:
      type: System.Reflection.Emit.ILGenerator
      description: Returns an <xref href="System.Reflection.Emit.ILGenerator" data-throw-if-not-resolved="false"></xref> object for this constructor.
  exceptions:
  - type: System.InvalidOperationException
    description: The constructor is a default constructor.-or-The constructor has <xref href="System.Reflection.MethodAttributes" data-throw-if-not-resolved="false"></xref> or <xref href="System.Reflection.MethodImplAttributes" data-throw-if-not-resolved="false"></xref> flags indicating that it should not have a method body.
- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  id: GetILGenerator(System.Int32)
  parent: System.Reflection.Emit.ConstructorBuilder
  name: GetILGenerator(Int32)
  fullName: System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 199
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets an <xref href="System.Reflection.Emit.ILGenerator" data-throw-if-not-resolved="false"></xref> object, with the specified MSIL stream size, that can be used to build a method body for this constructor.
  syntax:
    content: public ILGenerator GetILGenerator(int streamSize)
    content.vb: Public Function GetILGenerator(streamSize As Integer) As ILGenerator
    parameters:
    - id: streamSize
      type: System.Int32
      description: The size of the MSIL stream, in bytes.
    return:
      type: System.Reflection.Emit.ILGenerator
      description: An <xref href="System.Reflection.Emit.ILGenerator" data-throw-if-not-resolved="false"></xref> for this constructor.
  exceptions:
  - type: System.InvalidOperationException
    description: The constructor is a default constructor.-or-The constructor has <xref href="System.Reflection.MethodAttributes" data-throw-if-not-resolved="false"></xref> or <xref href="System.Reflection.MethodImplAttributes" data-throw-if-not-resolved="false"></xref> flags indicating that it should not have a method body.
- uid: System.Reflection.Emit.ConstructorBuilder.GetParameters
  id: GetParameters
  parent: System.Reflection.Emit.ConstructorBuilder
  name: GetParameters()
  fullName: System.Reflection.Emit.ConstructorBuilder.GetParameters()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 119
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the parameters of this constructor.
  syntax:
    content: public override ParameterInfo[] GetParameters()
    content.vb: Public Overrides Function GetParameters As ParameterInfo()
    return:
      type: System.Reflection.ParameterInfo[]
      description: Returns an array of <xref href="System.Reflection.ParameterInfo" data-throw-if-not-resolved="false"></xref> objects that represent the parameters of this constructor.
  exceptions:
  - type: System.InvalidOperationException
    description: <xref href="System.Reflection.Emit.TypeBuilder.CreateType" data-throw-if-not-resolved="false"></xref> has not been called on this constructor's type, in the .NET Framework versions 1.0 and 1.1.
  - type: System.NotSupportedException
    description: <xref href="System.Reflection.Emit.TypeBuilder.CreateType" data-throw-if-not-resolved="false"></xref> has not been called on this constructor's type, in the .NET Framework version 2.0.
- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.ConstructorBuilder
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  name.vb: SetCustomAttribute(ConstructorInfo, Byte())
  fullName: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])
  fullName.vb: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 285
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a specified custom attribute blob.
  syntax:
    content: public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)
    content.vb: Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: binaryAttribute
      type: System.Byte[]
      description: A byte blob representing the attributes.
  exceptions:
  - type: System.ArgumentNullException
    description: '*con* or *binaryAttribute* is null.'
- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ConstructorBuilder
  name: SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 293
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a custom attribute builder.
  syntax:
    content: public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    content.vb: Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: An instance of a helper class to define the custom attribute.
  exceptions:
  - type: System.ArgumentNullException
    description: '*customBuilder* is null.'
- uid: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  id: SetImplementationFlags(System.Reflection.MethodImplAttributes)
  parent: System.Reflection.Emit.ConstructorBuilder
  name: SetImplementationFlags(MethodImplAttributes)
  fullName: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 298
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Sets the method implementation flags for this constructor.
  syntax:
    content: public void SetImplementationFlags(MethodImplAttributes attributes)
    content.vb: Public Sub SetImplementationFlags(attributes As MethodImplAttributes)
    parameters:
    - id: attributes
      type: System.Reflection.MethodImplAttributes
      description: The method implementation flags.
  exceptions:
  - type: System.InvalidOperationException
    description: The containing type has been created using <xref href="System.Reflection.Emit.TypeBuilder.CreateType" data-throw-if-not-resolved="false"></xref>.
- uid: System.Reflection.Emit.ConstructorBuilder.ToString
  id: ToString
  parent: System.Reflection.Emit.ConstructorBuilder
  name: ToString()
  fullName: System.Reflection.Emit.ConstructorBuilder.ToString()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 78
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns this <xref href="System.Reflection.Emit.ConstructorBuilder" data-throw-if-not-resolved="false"></xref> instance as a <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the name, attributes, and exceptions of this constructor, followed by the current Microsoft intermediate language (MSIL) stream.
- uid: System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags
  id: MethodImplementationFlags
  parent: System.Reflection.Emit.ConstructorBuilder
  name: MethodImplementationFlags
  fullName: System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 114
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodImplAttributes MethodImplementationFlags { get; }
    content.vb: Public Overrides ReadOnly Property MethodImplementationFlags As MethodImplAttributes
    parameters: []
    return:
      type: MethodImplAttributes
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Reflection.ConstructorInfo
  isExternal: false
  name: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: ParameterBuilder
  fullName: System.Reflection.Emit.ParameterBuilder
- uid: System.Reflection.Emit.ILGenerator
  isExternal: false
  name: ILGenerator
  fullName: System.Reflection.Emit.ILGenerator
- uid: System.Reflection.ParameterInfo[]
  isExternal: false
  name: ParameterInfo[]
  name.vb: ParameterInfo()
  fullName: System.Reflection.ParameterInfo[]
  fullName.vb: System.Reflection.ParameterInfo()
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
  - name: ()
    fullName: ()
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: MethodImplAttributes
  isExternal: true
  name: MethodImplAttributes
  fullName: MethodImplAttributes
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
