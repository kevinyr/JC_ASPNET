items:
- uid: System.Reflection.Emit.ConstructorBuilder
  commentId: T:System.Reflection.Emit.ConstructorBuilder
  id: ConstructorBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.ConstructorBuilder.Attributes
  - System.Reflection.Emit.ConstructorBuilder.CallingConvention
  - System.Reflection.Emit.ConstructorBuilder.DeclaringType
  - System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  - System.Reflection.Emit.ConstructorBuilder.GetILGenerator
  - System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  - System.Reflection.Emit.ConstructorBuilder.GetParameters
  - System.Reflection.Emit.ConstructorBuilder.InitLocals
  - System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags
  - System.Reflection.Emit.ConstructorBuilder.Name
  - System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  - System.Reflection.Emit.ConstructorBuilder.ToString
  langs:
  - csharp
  - vb
  name: ConstructorBuilder
  nameWithType: ConstructorBuilder
  fullName: System.Reflection.Emit.ConstructorBuilder
  type: Class
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConstructorBuilder
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 115
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: 'public sealed class ConstructorBuilder : ConstructorInfo, ConstructorInfo'
    content.vb: >-
      Public NotInheritable Class ConstructorBuilder
          Inherits ConstructorInfo
          Implements ConstructorInfo
  inheritance:
  - System.Object
  implements:
  - System.Reflection.ConstructorInfo
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.Emit.ConstructorBuilder.Attributes
  commentId: P:System.Reflection.Emit.ConstructorBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ConstructorBuilder.Attributes
  fullName: System.Reflection.Emit.ConstructorBuilder.Attributes
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 37
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodAttributes Attributes { get; }
    content.vb: Public Overrides ReadOnly Property Attributes As MethodAttributes
    parameters: []
    return:
      type: System.Reflection.MethodAttributes
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.ConstructorBuilder.CallingConvention
  commentId: P:System.Reflection.Emit.ConstructorBuilder.CallingConvention
  id: CallingConvention
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: CallingConvention
  nameWithType: ConstructorBuilder.CallingConvention
  fullName: System.Reflection.Emit.ConstructorBuilder.CallingConvention
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CallingConvention
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 38
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override CallingConventions CallingConvention { get; }
    content.vb: Public Overrides ReadOnly Property CallingConvention As CallingConventions
    parameters: []
    return:
      type: System.Reflection.CallingConventions
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.ConstructorBuilder.DeclaringType
  commentId: P:System.Reflection.Emit.ConstructorBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: DeclaringType
  nameWithType: ConstructorBuilder.DeclaringType
  fullName: System.Reflection.Emit.ConstructorBuilder.DeclaringType
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeclaringType
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 39
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type DeclaringType { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.ConstructorBuilder.InitLocals
  commentId: P:System.Reflection.Emit.ConstructorBuilder.InitLocals
  id: InitLocals
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: InitLocals
  nameWithType: ConstructorBuilder.InitLocals
  fullName: System.Reflection.Emit.ConstructorBuilder.InitLocals
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InitLocals
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 40
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public bool InitLocals { get; set; }
    content.vb: Public Property InitLocals As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.ConstructorBuilder.Name
  commentId: P:System.Reflection.Emit.ConstructorBuilder.Name
  id: Name
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ConstructorBuilder.Name
  fullName: System.Reflection.Emit.ConstructorBuilder.Name
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 41
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  id: DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: DefineParameter(Int32, ParameterAttributes, String)
  nameWithType: ConstructorBuilder.DefineParameter(Int32, ParameterAttributes, String)
  fullName: System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32, System.Reflection.ParameterAttributes, System.String)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DefineParameter
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 42
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public ParameterBuilder DefineParameter(int iSequence, ParameterAttributes attributes, string strParamName)
    content.vb: Public Function DefineParameter(iSequence As Integer, attributes As ParameterAttributes, strParamName As String) As ParameterBuilder
    parameters:
    - id: iSequence
      type: System.Int32
    - id: attributes
      type: System.Reflection.ParameterAttributes
    - id: strParamName
      type: System.String
    return:
      type: System.Reflection.Emit.ParameterBuilder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator
  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetILGenerator
  id: GetILGenerator
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: GetILGenerator()
  nameWithType: ConstructorBuilder.GetILGenerator()
  fullName: System.Reflection.Emit.ConstructorBuilder.GetILGenerator()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetILGenerator
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 43
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public ILGenerator GetILGenerator()
    content.vb: Public Function GetILGenerator As ILGenerator
    return:
      type: System.Reflection.Emit.ILGenerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  id: GetILGenerator(System.Int32)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: GetILGenerator(Int32)
  nameWithType: ConstructorBuilder.GetILGenerator(Int32)
  fullName: System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetILGenerator
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 44
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public ILGenerator GetILGenerator(int streamSize)
    content.vb: Public Function GetILGenerator(streamSize As Integer) As ILGenerator
    parameters:
    - id: streamSize
      type: System.Int32
    return:
      type: System.Reflection.Emit.ILGenerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.ConstructorBuilder.GetParameters
  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetParameters
  id: GetParameters
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: GetParameters()
  nameWithType: ConstructorBuilder.GetParameters()
  fullName: System.Reflection.Emit.ConstructorBuilder.GetParameters()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetParameters
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 45
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override ParameterInfo[] GetParameters()
    content.vb: Public Overrides Function GetParameters As ParameterInfo()
    return:
      type: System.Reflection.ParameterInfo[]
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  nameWithType: ConstructorBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetCustomAttribute
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 46
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)
    content.vb: Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
    - id: binaryAttribute
      type: System.Byte[]
  nameWithType.vb: ConstructorBuilder.SetCustomAttribute(ConstructorInfo, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())
  name.vb: SetCustomAttribute(ConstructorInfo, Byte())
- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: ConstructorBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetCustomAttribute
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 47
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    content.vb: Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  id: SetImplementationFlags(System.Reflection.MethodImplAttributes)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: SetImplementationFlags(MethodImplAttributes)
  nameWithType: ConstructorBuilder.SetImplementationFlags(MethodImplAttributes)
  fullName: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetImplementationFlags
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 48
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public void SetImplementationFlags(MethodImplAttributes attributes)
    content.vb: Public Sub SetImplementationFlags(attributes As MethodImplAttributes)
    parameters:
    - id: attributes
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.ConstructorBuilder.ToString
  commentId: M:System.Reflection.Emit.ConstructorBuilder.ToString
  id: ToString
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ConstructorBuilder.ToString()
  fullName: System.Reflection.Emit.ConstructorBuilder.ToString()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 49
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags
  commentId: P:System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags
  id: MethodImplementationFlags
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  - vb
  name: MethodImplementationFlags
  nameWithType: ConstructorBuilder.MethodImplementationFlags
  fullName: System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MethodImplementationFlags
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 117
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodImplAttributes MethodImplementationFlags { get; }
    content.vb: Public Overrides ReadOnly Property MethodImplementationFlags As MethodImplAttributes
    parameters: []
    return:
      type: MethodImplAttributes
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.ConstructorInfo
  commentId: T:System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Reflection.MethodAttributes
  commentId: T:System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  commentId: T:System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.ParameterAttributes
  commentId: T:System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: ParameterAttributes
  nameWithType: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.Reflection.Emit.ParameterBuilder
  commentId: T:System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: ParameterBuilder
  nameWithType: ParameterBuilder
  fullName: System.Reflection.Emit.ParameterBuilder
- uid: System.Reflection.Emit.ILGenerator
  commentId: T:System.Reflection.Emit.ILGenerator
  isExternal: false
  name: ILGenerator
  nameWithType: ILGenerator
  fullName: System.Reflection.Emit.ILGenerator
- uid: System.Reflection.ParameterInfo[]
  name: ParameterInfo[]
  nameWithType: ParameterInfo[]
  fullName: System.Reflection.ParameterInfo[]
  nameWithType.vb: ParameterInfo()
  fullname.vb: System.Reflection.ParameterInfo()
  name.vb: ParameterInfo()
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.Emit.CustomAttributeBuilder
  commentId: T:System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.MethodImplAttributes
  commentId: T:System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: MethodImplAttributes
  isExternal: true
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: MethodImplAttributes
