items:
- uid: System.Reflection.Emit.GenericTypeParameterBuilder
  commentId: T:System.Reflection.Emit.GenericTypeParameterBuilder
  id: GenericTypeParameterBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.GenericTypeParameterBuilder.Assembly
  - System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName
  - System.Reflection.Emit.GenericTypeParameterBuilder.Attributes
  - System.Reflection.Emit.GenericTypeParameterBuilder.BaseType
  - System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters
  - System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod
  - System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType
  - System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)
  - System.Reflection.Emit.GenericTypeParameterBuilder.FullName
  - System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes
  - System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition
  - System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode
  - System.Reflection.Emit.GenericTypeParameterBuilder.GUID
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(Type)
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  - System.Reflection.Emit.GenericTypeParameterBuilder.Module
  - System.Reflection.Emit.GenericTypeParameterBuilder.Name
  - System.Reflection.Emit.GenericTypeParameterBuilder.Namespace
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.ToString
  langs:
  - csharp
  - vb
  name: GenericTypeParameterBuilder
  nameWithType: GenericTypeParameterBuilder
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder
  type: Class
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenericTypeParameterBuilder
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 75
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: 'public sealed class GenericTypeParameterBuilder : TypeInfo, TypeInfo'
    content.vb: >-
      Public NotInheritable Class GenericTypeParameterBuilder
          Inherits TypeInfo
          Implements TypeInfo
  inheritance:
  - System.Object
  implements:
  - System.Reflection.TypeInfo
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: AssemblyQualifiedName
  nameWithType: GenericTypeParameterBuilder.AssemblyQualifiedName
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AssemblyQualifiedName
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 94
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override string AssemblyQualifiedName { get; }
    content.vb: Public Overrides ReadOnly Property AssemblyQualifiedName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.FullName
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.FullName
  id: FullName
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: GenericTypeParameterBuilder.FullName
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.FullName
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FullName
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 95
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override string FullName { get; }
    content.vb: Public Overrides ReadOnly Property FullName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter
  id: IsGenericParameter
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsGenericParameter
  nameWithType: GenericTypeParameterBuilder.IsGenericParameter
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsGenericParameter
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 96
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsGenericParameter { get; }
    content.vb: Public Overrides ReadOnly Property IsGenericParameter As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Name
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Name
  id: Name
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GenericTypeParameterBuilder.Name
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.Name
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 97
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: GenericTypeParameterBuilder.Equals(Object)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 98
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool Equals(object o)
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition
  id: GetGenericTypeDefinition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GetGenericTypeDefinition()
  nameWithType: GenericTypeParameterBuilder.GetGenericTypeDefinition()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGenericTypeDefinition
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 99
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type GetGenericTypeDefinition()
    content.vb: Public Overrides Function GetGenericTypeDefinition As Type
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: GenericTypeParameterBuilder.GetHashCode()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 100
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  id: IsAssignableFrom(System.Reflection.TypeInfo)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsAssignableFrom(TypeInfo)
  nameWithType: GenericTypeParameterBuilder.IsAssignableFrom(TypeInfo)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsAssignableFrom
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 101
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsAssignableFrom(TypeInfo typeInfo)
    content.vb: Public Overrides Function IsAssignableFrom(typeInfo As TypeInfo) As Boolean
    parameters:
    - id: typeInfo
      type: System.Reflection.TypeInfo
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
  id: MakeArrayType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: MakeArrayType()
  nameWithType: GenericTypeParameterBuilder.MakeArrayType()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MakeArrayType
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 102
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type MakeArrayType()
    content.vb: Public Overrides Function MakeArrayType As Type
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)
  id: MakeArrayType(System.Int32)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: MakeArrayType(Int32)
  nameWithType: GenericTypeParameterBuilder.MakeArrayType(Int32)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MakeArrayType
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 103
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type MakeArrayType(int rank)
    content.vb: Public Overrides Function MakeArrayType(rank As Integer) As Type
    parameters:
    - id: rank
      type: System.Int32
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  id: MakeByRefType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: MakeByRefType()
  nameWithType: GenericTypeParameterBuilder.MakeByRefType()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MakeByRefType
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 104
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type MakeByRefType()
    content.vb: Public Overrides Function MakeByRefType As Type
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])
  id: MakeGenericType(System.Type[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: MakeGenericType(Type[])
  nameWithType: GenericTypeParameterBuilder.MakeGenericType(Type[])
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MakeGenericType
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 105
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type MakeGenericType(params Type[] typeArguments)
    content.vb: Public Overrides Function MakeGenericType(ParamArray typeArguments As Type()) As Type
    parameters:
    - id: typeArguments
      type: System.Type[]
    return:
      type: System.Type
  nameWithType.vb: GenericTypeParameterBuilder.MakeGenericType(Type())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type())
  name.vb: MakeGenericType(Type())
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  id: MakePointerType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: MakePointerType()
  nameWithType: GenericTypeParameterBuilder.MakePointerType()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MakePointerType
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 106
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type MakePointerType()
    content.vb: Public Overrides Function MakePointerType As Type
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)
  id: SetBaseTypeConstraint(System.Type)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: SetBaseTypeConstraint(Type)
  nameWithType: GenericTypeParameterBuilder.SetBaseTypeConstraint(Type)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetBaseTypeConstraint
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 107
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public void SetBaseTypeConstraint(Type baseTypeConstraint)
    content.vb: Public Sub SetBaseTypeConstraint(baseTypeConstraint As Type)
    parameters:
    - id: baseTypeConstraint
      type: System.Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  nameWithType: GenericTypeParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetCustomAttribute
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 108
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)
    content.vb: Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
    - id: binaryAttribute
      type: System.Byte[]
  nameWithType.vb: GenericTypeParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())
  name.vb: SetCustomAttribute(ConstructorInfo, Byte())
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: GenericTypeParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetCustomAttribute
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 109
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    content.vb: Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  id: SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: SetGenericParameterAttributes(GenericParameterAttributes)
  nameWithType: GenericTypeParameterBuilder.SetGenericParameterAttributes(GenericParameterAttributes)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetGenericParameterAttributes
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 110
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public void SetGenericParameterAttributes(GenericParameterAttributes genericParameterAttributes)
    content.vb: Public Sub SetGenericParameterAttributes(genericParameterAttributes As GenericParameterAttributes)
    parameters:
    - id: genericParameterAttributes
      type: System.Reflection.GenericParameterAttributes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])
  id: SetInterfaceConstraints(System.Type[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: SetInterfaceConstraints(Type[])
  nameWithType: GenericTypeParameterBuilder.SetInterfaceConstraints(Type[])
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetInterfaceConstraints
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 111
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public void SetInterfaceConstraints(params Type[] interfaceConstraints)
    content.vb: Public Sub SetInterfaceConstraints(ParamArray interfaceConstraints As Type())
    parameters:
    - id: interfaceConstraints
      type: System.Type[]
  nameWithType.vb: GenericTypeParameterBuilder.SetInterfaceConstraints(Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type())
  name.vb: SetInterfaceConstraints(Type())
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ToString
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.ToString
  id: ToString
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: GenericTypeParameterBuilder.ToString()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.ToString()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 112
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(Type)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(Type)
  id: IsSubclassOf(Type)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsSubclassOf(Type)
  nameWithType: GenericTypeParameterBuilder.IsSubclassOf(Type)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSubclassOf
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 78
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsSubclassOf(Type c)
    content.vb: Public Overrides Function IsSubclassOf(c As Type) As Boolean
    parameters:
    - id: c
      type: Type
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Attributes
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: GenericTypeParameterBuilder.Attributes
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.Attributes
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 80
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override TypeAttributes Attributes { get; }
    content.vb: Public Overrides ReadOnly Property Attributes As TypeAttributes
    parameters: []
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Assembly
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Assembly
  id: Assembly
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: Assembly
  nameWithType: GenericTypeParameterBuilder.Assembly
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.Assembly
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Assembly
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 81
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Assembly Assembly { get; }
    content.vb: Public Overrides ReadOnly Property Assembly As Assembly
    parameters: []
    return:
      type: Assembly
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.BaseType
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.BaseType
  id: BaseType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: BaseType
  nameWithType: GenericTypeParameterBuilder.BaseType
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.BaseType
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseType
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 82
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type BaseType { get; }
    content.vb: Public Overrides ReadOnly Property BaseType As Type
    parameters: []
    return:
      type: Type
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod
  id: DeclaringMethod
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: DeclaringMethod
  nameWithType: GenericTypeParameterBuilder.DeclaringMethod
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeclaringMethod
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 83
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodBase DeclaringMethod { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringMethod As MethodBase
    parameters: []
    return:
      type: MethodBase
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes
  id: GenericParameterAttributes
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GenericParameterAttributes
  nameWithType: GenericTypeParameterBuilder.GenericParameterAttributes
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenericParameterAttributes
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 84
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override GenericParameterAttributes GenericParameterAttributes { get; }
    content.vb: Public Overrides ReadOnly Property GenericParameterAttributes As GenericParameterAttributes
    parameters: []
    return:
      type: GenericParameterAttributes
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Module
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Module
  id: Module
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: Module
  nameWithType: GenericTypeParameterBuilder.Module
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.Module
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Module
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 85
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Module Module { get; }
    content.vb: 'Public Overrides ReadOnly Property Module As '
    parameters: []
    return:
      type: Module
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank
  id: GetArrayRank
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GetArrayRank()
  nameWithType: GenericTypeParameterBuilder.GetArrayRank()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetArrayRank
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 87
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override int GetArrayRank()
    content.vb: Public Overrides Function GetArrayRank As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType
  id: GetElementType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GetElementType()
  nameWithType: GenericTypeParameterBuilder.GetElementType()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetElementType
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 88
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type GetElementType()
    content.vb: Public Overrides Function GetElementType As Type
    return:
      type: Type
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints
  id: GetGenericParameterConstraints
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GetGenericParameterConstraints()
  nameWithType: GenericTypeParameterBuilder.GetGenericParameterConstraints()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGenericParameterConstraints
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 89
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type[] GetGenericParameterConstraints()
    content.vb: Public Overrides Function GetGenericParameterConstraints As Type()
    return:
      type: System.Type[]
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments
  id: GenericTypeArguments
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GenericTypeArguments
  nameWithType: GenericTypeParameterBuilder.GenericTypeArguments
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenericTypeArguments
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 90
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type[] GenericTypeArguments { get; }
    content.vb: Public Overrides ReadOnly Property GenericTypeArguments As Type()
    parameters: []
    return:
      type: System.Type[]
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters
  id: ContainsGenericParameters
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: ContainsGenericParameters
  nameWithType: GenericTypeParameterBuilder.ContainsGenericParameters
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContainsGenericParameters
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 91
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool ContainsGenericParameters { get; }
    content.vb: Public Overrides ReadOnly Property ContainsGenericParameters As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition
  id: GenericParameterPosition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GenericParameterPosition
  nameWithType: GenericTypeParameterBuilder.GenericParameterPosition
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenericParameterPosition
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 92
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override int GenericParameterPosition { get; }
    content.vb: Public Overrides ReadOnly Property GenericParameterPosition As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GUID
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.GUID
  id: GUID
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GUID
  nameWithType: GenericTypeParameterBuilder.GUID
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GUID
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GUID
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 93
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Guid GUID { get; }
    content.vb: Public Overrides ReadOnly Property GUID As Guid
    parameters: []
    return:
      type: Guid
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum
  id: IsEnum
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsEnum
  nameWithType: GenericTypeParameterBuilder.IsEnum
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEnum
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 94
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsEnum { get; }
    content.vb: Public Overrides ReadOnly Property IsEnum As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType
  id: IsGenericType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsGenericType
  nameWithType: GenericTypeParameterBuilder.IsGenericType
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsGenericType
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 95
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsGenericType { get; }
    content.vb: Public Overrides ReadOnly Property IsGenericType As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition
  id: IsGenericTypeDefinition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsGenericTypeDefinition
  nameWithType: GenericTypeParameterBuilder.IsGenericTypeDefinition
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsGenericTypeDefinition
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 96
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsGenericTypeDefinition { get; }
    content.vb: Public Overrides ReadOnly Property IsGenericTypeDefinition As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable
  id: IsSerializable
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsSerializable
  nameWithType: GenericTypeParameterBuilder.IsSerializable
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSerializable
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 97
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsSerializable { get; }
    content.vb: Public Overrides ReadOnly Property IsSerializable As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Namespace
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Namespace
  id: Namespace
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: GenericTypeParameterBuilder.Namespace
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.Namespace
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Namespace
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 98
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override string Namespace { get; }
    content.vb: Public Overrides ReadOnly Property Namespace As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: DeclaringType
  nameWithType: GenericTypeParameterBuilder.DeclaringType
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeclaringType
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 100
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type DeclaringType { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
    parameters: []
    return:
      type: Type
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.TypeInfo
  commentId: T:System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: false
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.ConstructorInfo
  commentId: T:System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.Emit.CustomAttributeBuilder
  commentId: T:System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.GenericParameterAttributes
  commentId: T:System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: System.Reflection.TypeAttributes
  commentId: T:System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: Assembly
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: Assembly
- uid: MethodBase
  isExternal: true
  name: MethodBase
  nameWithType: MethodBase
  fullName: MethodBase
- uid: GenericParameterAttributes
  isExternal: true
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: GenericParameterAttributes
- uid: Module
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: Module
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
