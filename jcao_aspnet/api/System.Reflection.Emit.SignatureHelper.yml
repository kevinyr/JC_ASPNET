items:
- uid: System.Reflection.Emit.SignatureHelper
  commentId: T:System.Reflection.Emit.SignatureHelper
  id: SignatureHelper
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)
  - System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)
  - System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])
  - System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.SignatureHelper.AddSentinel
  - System.Reflection.Emit.SignatureHelper.Equals(System.Object)
  - System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)
  - System.Reflection.Emit.SignatureHelper.GetHashCode
  - System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper
  - System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)
  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)
  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)
  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])
  - System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])
  - System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.SignatureHelper.GetSignature
  - System.Reflection.Emit.SignatureHelper.ToString
  langs:
  - csharp
  - vb
  name: SignatureHelper
  nameWithType: SignatureHelper
  fullName: System.Reflection.Emit.SignatureHelper
  type: Class
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignatureHelper
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 98
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: 'public sealed class SignatureHelper : object'
    content.vb: >-
      Public NotInheritable Class SignatureHelper
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)
  commentId: M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)
  id: AddArgument(System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: AddArgument(Type)
  nameWithType: SignatureHelper.AddArgument(Type)
  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddArgument
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 101
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public void AddArgument(Type clsArgument)
    content.vb: Public Sub AddArgument(clsArgument As Type)
    parameters:
    - id: clsArgument
      type: System.Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)
  commentId: M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)
  id: AddArgument(System.Type,System.Boolean)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: AddArgument(Type, Boolean)
  nameWithType: SignatureHelper.AddArgument(Type, Boolean)
  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddArgument
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 102
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public void AddArgument(Type argument, bool pinned)
    content.vb: Public Sub AddArgument(argument As Type, pinned As Boolean)
    parameters:
    - id: argument
      type: System.Type
    - id: pinned
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])
  commentId: M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])
  id: AddArgument(System.Type,System.Type[],System.Type[])
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: AddArgument(Type, Type[], Type[])
  nameWithType: SignatureHelper.AddArgument(Type, Type[], Type[])
  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type, System.Type[], System.Type[])
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddArgument
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 104
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public void AddArgument(Type argument, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers)
    content.vb: Public Sub AddArgument(argument As Type, requiredCustomModifiers As Type(), optionalCustomModifiers As Type())
    parameters:
    - id: argument
      type: System.Type
    - id: requiredCustomModifiers
      type: System.Type[]
    - id: optionalCustomModifiers
      type: System.Type[]
  nameWithType.vb: SignatureHelper.AddArgument(Type, Type(), Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type, System.Type(), System.Type())
  name.vb: AddArgument(Type, Type(), Type())
- uid: System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])
  commentId: M:System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])
  id: AddArguments(System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: AddArguments(Type[], Type[][], Type[][])
  nameWithType: SignatureHelper.AddArguments(Type[], Type[][], Type[][])
  fullName: System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[], System.Type[][], System.Type[][])
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddArguments
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 106
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public void AddArguments(Type[] arguments, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers)
    content.vb: Public Sub AddArguments(arguments As Type(), requiredCustomModifiers As Type()(), optionalCustomModifiers As Type()())
    parameters:
    - id: arguments
      type: System.Type[]
    - id: requiredCustomModifiers
      type: System.Type[][]
    - id: optionalCustomModifiers
      type: System.Type[][]
  nameWithType.vb: SignatureHelper.AddArguments(Type(), Type()(), Type()())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.SignatureHelper.AddArguments(System.Type(), System.Type()(), System.Type()())
  name.vb: AddArguments(Type(), Type()(), Type()())
- uid: System.Reflection.Emit.SignatureHelper.AddSentinel
  commentId: M:System.Reflection.Emit.SignatureHelper.AddSentinel
  id: AddSentinel
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: AddSentinel()
  nameWithType: SignatureHelper.AddSentinel()
  fullName: System.Reflection.Emit.SignatureHelper.AddSentinel()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddSentinel
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 107
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public void AddSentinel()
    content.vb: Public Sub AddSentinel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.SignatureHelper.Equals(System.Object)
  commentId: M:System.Reflection.Emit.SignatureHelper.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SignatureHelper.Equals(Object)
  fullName: System.Reflection.Emit.SignatureHelper.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 108
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)
  commentId: M:System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)
  id: GetFieldSigHelper(System.Reflection.Module)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: GetFieldSigHelper(Module)
  nameWithType: SignatureHelper.GetFieldSigHelper(Module)
  fullName: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFieldSigHelper
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 109
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public static SignatureHelper GetFieldSigHelper(Module mod)
    content.vb: Public Shared Function GetFieldSigHelper(mod As  Module) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
    return:
      type: System.Reflection.Emit.SignatureHelper
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.Emit.SignatureHelper.GetHashCode
  commentId: M:System.Reflection.Emit.SignatureHelper.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SignatureHelper.GetHashCode()
  fullName: System.Reflection.Emit.SignatureHelper.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 110
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper
  commentId: M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper
  id: GetLocalVarSigHelper
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: GetLocalVarSigHelper()
  nameWithType: SignatureHelper.GetLocalVarSigHelper()
  fullName: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetLocalVarSigHelper
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 111
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public static SignatureHelper GetLocalVarSigHelper()
    content.vb: Public Shared Function GetLocalVarSigHelper As SignatureHelper
    return:
      type: System.Reflection.Emit.SignatureHelper
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)
  commentId: M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)
  id: GetLocalVarSigHelper(System.Reflection.Module)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: GetLocalVarSigHelper(Module)
  nameWithType: SignatureHelper.GetLocalVarSigHelper(Module)
  fullName: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetLocalVarSigHelper
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 112
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public static SignatureHelper GetLocalVarSigHelper(Module mod)
    content.vb: Public Shared Function GetLocalVarSigHelper(mod As  Module) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
    return:
      type: System.Reflection.Emit.SignatureHelper
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)
  commentId: M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)
  id: GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: GetMethodSigHelper(CallingConventions, Type)
  nameWithType: SignatureHelper.GetMethodSigHelper(CallingConventions, Type)
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMethodSigHelper
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 113
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public static SignatureHelper GetMethodSigHelper(CallingConventions callingConvention, Type returnType)
    content.vb: Public Shared Function GetMethodSigHelper(callingConvention As CallingConventions, returnType As Type) As SignatureHelper
    parameters:
    - id: callingConvention
      type: System.Reflection.CallingConventions
    - id: returnType
      type: System.Type
    return:
      type: System.Reflection.Emit.SignatureHelper
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)
  commentId: M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)
  id: GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: GetMethodSigHelper(Module, CallingConventions, Type)
  nameWithType: SignatureHelper.GetMethodSigHelper(Module, CallingConventions, Type)
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module, System.Reflection.CallingConventions, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMethodSigHelper
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 114
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public static SignatureHelper GetMethodSigHelper(Module mod, CallingConventions callingConvention, Type returnType)
    content.vb: Public Shared Function GetMethodSigHelper(mod As  Module, callingConvention As CallingConventions, returnType As Type) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
    - id: callingConvention
      type: System.Reflection.CallingConventions
    - id: returnType
      type: System.Type
    return:
      type: System.Reflection.Emit.SignatureHelper
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])
  commentId: M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])
  id: GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: GetMethodSigHelper(Module, Type, Type[])
  nameWithType: SignatureHelper.GetMethodSigHelper(Module, Type, Type[])
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module, System.Type, System.Type[])
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMethodSigHelper
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 116
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public static SignatureHelper GetMethodSigHelper(Module mod, Type returnType, Type[] parameterTypes)
    content.vb: Public Shared Function GetMethodSigHelper(mod As  Module, returnType As Type, parameterTypes As Type()) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
    - id: returnType
      type: System.Type
    - id: parameterTypes
      type: System.Type[]
    return:
      type: System.Reflection.Emit.SignatureHelper
  nameWithType.vb: SignatureHelper.GetMethodSigHelper(Module, Type, Type())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module, System.Type, System.Type())
  name.vb: GetMethodSigHelper(Module, Type, Type())
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  commentId: M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: GetPropertySigHelper(Module, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])
  nameWithType: SignatureHelper.GetPropertySigHelper(Module, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])
  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPropertySigHelper
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 118
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public static SignatureHelper GetPropertySigHelper(Module mod, CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers)
    content.vb: Public Shared Function GetPropertySigHelper(mod As  Module, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
    - id: callingConvention
      type: System.Reflection.CallingConventions
    - id: returnType
      type: System.Type
    - id: requiredReturnTypeCustomModifiers
      type: System.Type[]
    - id: optionalReturnTypeCustomModifiers
      type: System.Type[]
    - id: parameterTypes
      type: System.Type[]
    - id: requiredParameterTypeCustomModifiers
      type: System.Type[][]
    - id: optionalParameterTypeCustomModifiers
      type: System.Type[][]
    return:
      type: System.Reflection.Emit.SignatureHelper
  nameWithType.vb: SignatureHelper.GetPropertySigHelper(Module, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module, System.Reflection.CallingConventions, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())
  name.vb: GetPropertySigHelper(Module, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()())
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])
  commentId: M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])
  id: GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: GetPropertySigHelper(Module, Type, Type[])
  nameWithType: SignatureHelper.GetPropertySigHelper(Module, Type, Type[])
  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module, System.Type, System.Type[])
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPropertySigHelper
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 120
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public static SignatureHelper GetPropertySigHelper(Module mod, Type returnType, Type[] parameterTypes)
    content.vb: Public Shared Function GetPropertySigHelper(mod As  Module, returnType As Type, parameterTypes As Type()) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
    - id: returnType
      type: System.Type
    - id: parameterTypes
      type: System.Type[]
    return:
      type: System.Reflection.Emit.SignatureHelper
  nameWithType.vb: SignatureHelper.GetPropertySigHelper(Module, Type, Type())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module, System.Type, System.Type())
  name.vb: GetPropertySigHelper(Module, Type, Type())
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  commentId: M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: GetPropertySigHelper(Module, Type, Type[], Type[], Type[], Type[][], Type[][])
  nameWithType: SignatureHelper.GetPropertySigHelper(Module, Type, Type[], Type[], Type[], Type[][], Type[][])
  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPropertySigHelper
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 121
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public static SignatureHelper GetPropertySigHelper(Module mod, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers)
    content.vb: Public Shared Function GetPropertySigHelper(mod As  Module, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
    - id: returnType
      type: System.Type
    - id: requiredReturnTypeCustomModifiers
      type: System.Type[]
    - id: optionalReturnTypeCustomModifiers
      type: System.Type[]
    - id: parameterTypes
      type: System.Type[]
    - id: requiredParameterTypeCustomModifiers
      type: System.Type[][]
    - id: optionalParameterTypeCustomModifiers
      type: System.Type[][]
    return:
      type: System.Reflection.Emit.SignatureHelper
  nameWithType.vb: SignatureHelper.GetPropertySigHelper(Module, Type, Type(), Type(), Type(), Type()(), Type()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())
  name.vb: GetPropertySigHelper(Module, Type, Type(), Type(), Type(), Type()(), Type()())
- uid: System.Reflection.Emit.SignatureHelper.GetSignature
  commentId: M:System.Reflection.Emit.SignatureHelper.GetSignature
  id: GetSignature
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: GetSignature()
  nameWithType: SignatureHelper.GetSignature()
  fullName: System.Reflection.Emit.SignatureHelper.GetSignature()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSignature
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 122
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public byte[] GetSignature()
    content.vb: Public Function GetSignature As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.SignatureHelper.ToString
  commentId: M:System.Reflection.Emit.SignatureHelper.ToString
  id: ToString
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SignatureHelper.ToString()
  fullName: System.Reflection.Emit.SignatureHelper.ToString()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 123
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Type[][]
  name: Type[][]
  nameWithType: Type[][]
  fullName: System.Type[][]
  nameWithType.vb: Type()()
  fullname.vb: System.Type()()
  name.vb: Type()()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.Module
  commentId: T:System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Emit.SignatureHelper
  commentId: T:System.Reflection.Emit.SignatureHelper
  parent: System.Reflection.Emit
  isExternal: false
  name: SignatureHelper
  nameWithType: SignatureHelper
  fullName: System.Reflection.Emit.SignatureHelper
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.CallingConventions
  commentId: T:System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
