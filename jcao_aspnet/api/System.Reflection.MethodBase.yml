items:
- uid: System.Reflection.MethodBase
  commentId: T:System.Reflection.MethodBase
  id: MethodBase
  parent: System.Reflection
  children:
  - System.Reflection.MethodBase.Attributes
  - System.Reflection.MethodBase.CallingConvention
  - System.Reflection.MethodBase.ContainsGenericParameters
  - System.Reflection.MethodBase.Equals(System.Object)
  - System.Reflection.MethodBase.GetGenericArguments
  - System.Reflection.MethodBase.GetHashCode
  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  - System.Reflection.MethodBase.GetParameters
  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  - System.Reflection.MethodBase.IsAbstract
  - System.Reflection.MethodBase.IsAssembly
  - System.Reflection.MethodBase.IsConstructor
  - System.Reflection.MethodBase.IsFamily
  - System.Reflection.MethodBase.IsFamilyAndAssembly
  - System.Reflection.MethodBase.IsFamilyOrAssembly
  - System.Reflection.MethodBase.IsFinal
  - System.Reflection.MethodBase.IsGenericMethod
  - System.Reflection.MethodBase.IsGenericMethodDefinition
  - System.Reflection.MethodBase.IsHideBySig
  - System.Reflection.MethodBase.IsPrivate
  - System.Reflection.MethodBase.IsPublic
  - System.Reflection.MethodBase.IsSpecialName
  - System.Reflection.MethodBase.IsStatic
  - System.Reflection.MethodBase.IsVirtual
  - System.Reflection.MethodBase.MethodImplementationFlags
  langs:
  - csharp
  - vb
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
  type: Class
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MethodBase
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 157
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: 'public abstract class MethodBase : MemberInfo'
    content.vb: >-
      Public MustInherit Class MethodBase
          Inherits MemberInfo
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  inheritedMembers:
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.DeclaringType
  - System.Reflection.MemberInfo.Module
  - System.Reflection.MemberInfo.Name
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Reflection.MethodBase.Attributes
  commentId: P:System.Reflection.MethodBase.Attributes
  id: Attributes
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: MethodBase.Attributes
  fullName: System.Reflection.MethodBase.Attributes
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 160
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public abstract MethodAttributes Attributes { get; }
    content.vb: Public MustOverride ReadOnly Property Attributes As MethodAttributes
    parameters: []
    return:
      type: System.Reflection.MethodAttributes
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Reflection.MethodBase.CallingConvention
  commentId: P:System.Reflection.MethodBase.CallingConvention
  id: CallingConvention
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: CallingConvention
  nameWithType: MethodBase.CallingConvention
  fullName: System.Reflection.MethodBase.CallingConvention
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CallingConvention
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 161
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual CallingConventions CallingConvention { get; }
    content.vb: Public Overridable ReadOnly Property CallingConvention As CallingConventions
    parameters: []
    return:
      type: System.Reflection.CallingConventions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.MethodBase.ContainsGenericParameters
  commentId: P:System.Reflection.MethodBase.ContainsGenericParameters
  id: ContainsGenericParameters
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: ContainsGenericParameters
  nameWithType: MethodBase.ContainsGenericParameters
  fullName: System.Reflection.MethodBase.ContainsGenericParameters
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContainsGenericParameters
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 162
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual bool ContainsGenericParameters { get; }
    content.vb: Public Overridable ReadOnly Property ContainsGenericParameters As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.MethodBase.IsAbstract
  commentId: P:System.Reflection.MethodBase.IsAbstract
  id: IsAbstract
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsAbstract
  nameWithType: MethodBase.IsAbstract
  fullName: System.Reflection.MethodBase.IsAbstract
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsAbstract
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 163
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsAbstract { get; }
    content.vb: Public ReadOnly Property IsAbstract As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.IsAssembly
  commentId: P:System.Reflection.MethodBase.IsAssembly
  id: IsAssembly
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsAssembly
  nameWithType: MethodBase.IsAssembly
  fullName: System.Reflection.MethodBase.IsAssembly
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsAssembly
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 164
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsAssembly { get; }
    content.vb: Public ReadOnly Property IsAssembly As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.IsConstructor
  commentId: P:System.Reflection.MethodBase.IsConstructor
  id: IsConstructor
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsConstructor
  nameWithType: MethodBase.IsConstructor
  fullName: System.Reflection.MethodBase.IsConstructor
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsConstructor
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 165
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsConstructor { get; }
    content.vb: Public ReadOnly Property IsConstructor As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.IsFamily
  commentId: P:System.Reflection.MethodBase.IsFamily
  id: IsFamily
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsFamily
  nameWithType: MethodBase.IsFamily
  fullName: System.Reflection.MethodBase.IsFamily
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsFamily
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 166
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsFamily { get; }
    content.vb: Public ReadOnly Property IsFamily As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.IsFamilyAndAssembly
  commentId: P:System.Reflection.MethodBase.IsFamilyAndAssembly
  id: IsFamilyAndAssembly
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsFamilyAndAssembly
  nameWithType: MethodBase.IsFamilyAndAssembly
  fullName: System.Reflection.MethodBase.IsFamilyAndAssembly
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsFamilyAndAssembly
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 167
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsFamilyAndAssembly { get; }
    content.vb: Public ReadOnly Property IsFamilyAndAssembly As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.IsFamilyOrAssembly
  commentId: P:System.Reflection.MethodBase.IsFamilyOrAssembly
  id: IsFamilyOrAssembly
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsFamilyOrAssembly
  nameWithType: MethodBase.IsFamilyOrAssembly
  fullName: System.Reflection.MethodBase.IsFamilyOrAssembly
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsFamilyOrAssembly
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 168
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsFamilyOrAssembly { get; }
    content.vb: Public ReadOnly Property IsFamilyOrAssembly As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.IsFinal
  commentId: P:System.Reflection.MethodBase.IsFinal
  id: IsFinal
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsFinal
  nameWithType: MethodBase.IsFinal
  fullName: System.Reflection.MethodBase.IsFinal
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsFinal
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 169
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsFinal { get; }
    content.vb: Public ReadOnly Property IsFinal As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.IsGenericMethod
  commentId: P:System.Reflection.MethodBase.IsGenericMethod
  id: IsGenericMethod
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsGenericMethod
  nameWithType: MethodBase.IsGenericMethod
  fullName: System.Reflection.MethodBase.IsGenericMethod
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsGenericMethod
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 170
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual bool IsGenericMethod { get; }
    content.vb: Public Overridable ReadOnly Property IsGenericMethod As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.MethodBase.IsGenericMethodDefinition
  commentId: P:System.Reflection.MethodBase.IsGenericMethodDefinition
  id: IsGenericMethodDefinition
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsGenericMethodDefinition
  nameWithType: MethodBase.IsGenericMethodDefinition
  fullName: System.Reflection.MethodBase.IsGenericMethodDefinition
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsGenericMethodDefinition
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 171
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual bool IsGenericMethodDefinition { get; }
    content.vb: Public Overridable ReadOnly Property IsGenericMethodDefinition As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.MethodBase.IsHideBySig
  commentId: P:System.Reflection.MethodBase.IsHideBySig
  id: IsHideBySig
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsHideBySig
  nameWithType: MethodBase.IsHideBySig
  fullName: System.Reflection.MethodBase.IsHideBySig
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsHideBySig
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 172
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsHideBySig { get; }
    content.vb: Public ReadOnly Property IsHideBySig As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.IsPrivate
  commentId: P:System.Reflection.MethodBase.IsPrivate
  id: IsPrivate
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsPrivate
  nameWithType: MethodBase.IsPrivate
  fullName: System.Reflection.MethodBase.IsPrivate
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsPrivate
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 173
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsPrivate { get; }
    content.vb: Public ReadOnly Property IsPrivate As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.IsPublic
  commentId: P:System.Reflection.MethodBase.IsPublic
  id: IsPublic
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsPublic
  nameWithType: MethodBase.IsPublic
  fullName: System.Reflection.MethodBase.IsPublic
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsPublic
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 174
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsPublic { get; }
    content.vb: Public ReadOnly Property IsPublic As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.IsSpecialName
  commentId: P:System.Reflection.MethodBase.IsSpecialName
  id: IsSpecialName
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsSpecialName
  nameWithType: MethodBase.IsSpecialName
  fullName: System.Reflection.MethodBase.IsSpecialName
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSpecialName
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 175
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsSpecialName { get; }
    content.vb: Public ReadOnly Property IsSpecialName As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.IsStatic
  commentId: P:System.Reflection.MethodBase.IsStatic
  id: IsStatic
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsStatic
  nameWithType: MethodBase.IsStatic
  fullName: System.Reflection.MethodBase.IsStatic
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsStatic
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 176
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsStatic { get; }
    content.vb: Public ReadOnly Property IsStatic As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.IsVirtual
  commentId: P:System.Reflection.MethodBase.IsVirtual
  id: IsVirtual
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: IsVirtual
  nameWithType: MethodBase.IsVirtual
  fullName: System.Reflection.MethodBase.IsVirtual
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsVirtual
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 177
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsVirtual { get; }
    content.vb: Public ReadOnly Property IsVirtual As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.MethodBase.MethodImplementationFlags
  commentId: P:System.Reflection.MethodBase.MethodImplementationFlags
  id: MethodImplementationFlags
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: MethodImplementationFlags
  nameWithType: MethodBase.MethodImplementationFlags
  fullName: System.Reflection.MethodBase.MethodImplementationFlags
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MethodImplementationFlags
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 178
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public abstract MethodImplAttributes MethodImplementationFlags { get; }
    content.vb: Public MustOverride ReadOnly Property MethodImplementationFlags As MethodImplAttributes
    parameters: []
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Reflection.MethodBase.Equals(System.Object)
  commentId: M:System.Reflection.MethodBase.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: MethodBase.Equals(Object)
  fullName: System.Reflection.MethodBase.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 179
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Reflection.MemberInfo.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.MethodBase.GetGenericArguments
  commentId: M:System.Reflection.MethodBase.GetGenericArguments
  id: GetGenericArguments
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: GetGenericArguments()
  nameWithType: MethodBase.GetGenericArguments()
  fullName: System.Reflection.MethodBase.GetGenericArguments()
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGenericArguments
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 180
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual Type[] GetGenericArguments()
    content.vb: Public Overridable Function GetGenericArguments As Type()
    return:
      type: System.Type[]
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Reflection.MethodBase.GetHashCode
  commentId: M:System.Reflection.MethodBase.GetHashCode
  id: GetHashCode
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MethodBase.GetHashCode()
  fullName: System.Reflection.MethodBase.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 181
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Reflection.MemberInfo.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  commentId: M:System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  id: GetMethodFromHandle(System.RuntimeMethodHandle)
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: GetMethodFromHandle(RuntimeMethodHandle)
  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)
  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMethodFromHandle
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 182
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public static MethodBase GetMethodFromHandle(RuntimeMethodHandle handle)
    content.vb: Public Shared Function GetMethodFromHandle(handle As RuntimeMethodHandle) As MethodBase
    parameters:
    - id: handle
      type: System.RuntimeMethodHandle
    return:
      type: System.Reflection.MethodBase
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  commentId: M:System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  id: GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)
  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)
  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle, System.RuntimeTypeHandle)
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMethodFromHandle
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 183
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public static MethodBase GetMethodFromHandle(RuntimeMethodHandle handle, RuntimeTypeHandle declaringType)
    content.vb: Public Shared Function GetMethodFromHandle(handle As RuntimeMethodHandle, declaringType As RuntimeTypeHandle) As MethodBase
    parameters:
    - id: handle
      type: System.RuntimeMethodHandle
    - id: declaringType
      type: System.RuntimeTypeHandle
    return:
      type: System.Reflection.MethodBase
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.MethodBase.GetParameters
  commentId: M:System.Reflection.MethodBase.GetParameters
  id: GetParameters
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: GetParameters()
  nameWithType: MethodBase.GetParameters()
  fullName: System.Reflection.MethodBase.GetParameters()
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetParameters
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 184
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public abstract ParameterInfo[] GetParameters()
    content.vb: Public MustOverride Function GetParameters As ParameterInfo()
    return:
      type: System.Reflection.ParameterInfo[]
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  commentId: M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  id: Invoke(System.Object,System.Object[])
  parent: System.Reflection.MethodBase
  langs:
  - csharp
  - vb
  name: Invoke(Object, Object[])
  nameWithType: MethodBase.Invoke(Object, Object[])
  fullName: System.Reflection.MethodBase.Invoke(System.Object, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Invoke
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 185
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual object Invoke(object obj, object[] parameters)
    content.vb: Public Overridable Function Invoke(obj As Object, parameters As Object()) As Object
    parameters:
    - id: obj
      type: System.Object
    - id: parameters
      type: System.Object[]
    return:
      type: System.Object
  nameWithType.vb: MethodBase.Invoke(Object, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Reflection.MethodBase.Invoke(System.Object, System.Object())
  name.vb: Invoke(Object, Object())
references:
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.MemberInfo.CustomAttributes
  commentId: P:System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: CustomAttributes
  nameWithType: MemberInfo.CustomAttributes
  fullName: System.Reflection.MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.DeclaringType
  commentId: P:System.Reflection.MemberInfo.DeclaringType
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: DeclaringType
  nameWithType: MemberInfo.DeclaringType
  fullName: System.Reflection.MemberInfo.DeclaringType
- uid: System.Reflection.MemberInfo.Module
  commentId: P:System.Reflection.MemberInfo.Module
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: Module
  nameWithType: MemberInfo.Module
  fullName: System.Reflection.MemberInfo.Module
- uid: System.Reflection.MemberInfo.Name
  commentId: P:System.Reflection.MemberInfo.Name
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: Name
  nameWithType: MemberInfo.Name
  fullName: System.Reflection.MemberInfo.Name
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection.MethodAttributes
  commentId: T:System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  commentId: T:System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodImplAttributes
  commentId: T:System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Reflection.MemberInfo.Equals(System.Object)
  commentId: M:System.Reflection.MemberInfo.Equals(System.Object)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: Equals(Object)
  nameWithType: MemberInfo.Equals(Object)
  fullName: System.Reflection.MemberInfo.Equals(System.Object)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.Equals(System.Object)
    name: Equals
    nameWithType: MemberInfo.Equals
    fullName: System.Reflection.MemberInfo.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.Equals(System.Object)
    name: Equals
    nameWithType: MemberInfo.Equals
    fullName: System.Reflection.MemberInfo.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.MemberInfo.GetHashCode
  commentId: M:System.Reflection.MemberInfo.GetHashCode
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: MemberInfo.GetHashCode()
  fullName: System.Reflection.MemberInfo.GetHashCode()
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetHashCode
    name: GetHashCode
    nameWithType: MemberInfo.GetHashCode
    fullName: System.Reflection.MemberInfo.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetHashCode
    name: GetHashCode
    nameWithType: MemberInfo.GetHashCode
    fullName: System.Reflection.MemberInfo.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.RuntimeMethodHandle
  commentId: T:System.RuntimeMethodHandle
  parent: System
  isExternal: false
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
- uid: System.Reflection.MethodBase
  commentId: T:System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.RuntimeTypeHandle
  commentId: T:System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Reflection.ParameterInfo[]
  name: ParameterInfo[]
  nameWithType: ParameterInfo[]
  fullName: System.Reflection.ParameterInfo[]
  nameWithType.vb: ParameterInfo()
  fullname.vb: System.Reflection.ParameterInfo()
  name.vb: ParameterInfo()
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ()
    nameWithType: ()
    fullName: ()
