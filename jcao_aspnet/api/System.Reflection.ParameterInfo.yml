items:
- uid: System.Reflection.ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
  id: ParameterInfo
  parent: System.Reflection
  children:
  - System.Reflection.ParameterInfo.Attributes
  - System.Reflection.ParameterInfo.CustomAttributes
  - System.Reflection.ParameterInfo.DefaultValue
  - System.Reflection.ParameterInfo.HasDefaultValue
  - System.Reflection.ParameterInfo.IsIn
  - System.Reflection.ParameterInfo.IsOptional
  - System.Reflection.ParameterInfo.IsOut
  - System.Reflection.ParameterInfo.IsRetval
  - System.Reflection.ParameterInfo.Member
  - System.Reflection.ParameterInfo.Name
  - System.Reflection.ParameterInfo.ParameterType
  - System.Reflection.ParameterInfo.Position
  langs:
  - csharp
  - vb
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
  type: Class
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParameterInfo
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 212
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: 'public class ParameterInfo : object'
    content.vb: >-
      Public Class ParameterInfo
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Reflection.ParameterInfo.Attributes
  commentId: P:System.Reflection.ParameterInfo.Attributes
  id: Attributes
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ParameterInfo.Attributes
  fullName: System.Reflection.ParameterInfo.Attributes
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 215
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual ParameterAttributes Attributes { get; }
    content.vb: Public Overridable ReadOnly Property Attributes As ParameterAttributes
    parameters: []
    return:
      type: System.Reflection.ParameterAttributes
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.ParameterInfo.CustomAttributes
  commentId: P:System.Reflection.ParameterInfo.CustomAttributes
  id: CustomAttributes
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: CustomAttributes
  nameWithType: ParameterInfo.CustomAttributes
  fullName: System.Reflection.ParameterInfo.CustomAttributes
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CustomAttributes
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 216
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual Collections.Generic.IEnumerable<CustomAttributeData> CustomAttributes { get; }
    content.vb: Public Overridable ReadOnly Property CustomAttributes As Collections.Generic.IEnumerable(Of CustomAttributeData)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.ParameterInfo.DefaultValue
  commentId: P:System.Reflection.ParameterInfo.DefaultValue
  id: DefaultValue
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: ParameterInfo.DefaultValue
  fullName: System.Reflection.ParameterInfo.DefaultValue
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DefaultValue
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 217
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual object DefaultValue { get; }
    content.vb: Public Overridable ReadOnly Property DefaultValue As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.ParameterInfo.HasDefaultValue
  commentId: P:System.Reflection.ParameterInfo.HasDefaultValue
  id: HasDefaultValue
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: HasDefaultValue
  nameWithType: ParameterInfo.HasDefaultValue
  fullName: System.Reflection.ParameterInfo.HasDefaultValue
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasDefaultValue
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 218
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual bool HasDefaultValue { get; }
    content.vb: Public Overridable ReadOnly Property HasDefaultValue As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.ParameterInfo.IsIn
  commentId: P:System.Reflection.ParameterInfo.IsIn
  id: IsIn
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: IsIn
  nameWithType: ParameterInfo.IsIn
  fullName: System.Reflection.ParameterInfo.IsIn
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsIn
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 219
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsIn { get; }
    content.vb: Public ReadOnly Property IsIn As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.ParameterInfo.IsOptional
  commentId: P:System.Reflection.ParameterInfo.IsOptional
  id: IsOptional
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: IsOptional
  nameWithType: ParameterInfo.IsOptional
  fullName: System.Reflection.ParameterInfo.IsOptional
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsOptional
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 220
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsOptional { get; }
    content.vb: Public ReadOnly Property IsOptional As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.ParameterInfo.IsOut
  commentId: P:System.Reflection.ParameterInfo.IsOut
  id: IsOut
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: IsOut
  nameWithType: ParameterInfo.IsOut
  fullName: System.Reflection.ParameterInfo.IsOut
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsOut
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 221
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsOut { get; }
    content.vb: Public ReadOnly Property IsOut As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.ParameterInfo.IsRetval
  commentId: P:System.Reflection.ParameterInfo.IsRetval
  id: IsRetval
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: IsRetval
  nameWithType: ParameterInfo.IsRetval
  fullName: System.Reflection.ParameterInfo.IsRetval
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsRetval
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 222
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsRetval { get; }
    content.vb: Public ReadOnly Property IsRetval As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.ParameterInfo.Member
  commentId: P:System.Reflection.ParameterInfo.Member
  id: Member
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: Member
  nameWithType: ParameterInfo.Member
  fullName: System.Reflection.ParameterInfo.Member
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Member
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 223
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual MemberInfo Member { get; }
    content.vb: Public Overridable ReadOnly Property Member As MemberInfo
    parameters: []
    return:
      type: System.Reflection.MemberInfo
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.ParameterInfo.Name
  commentId: P:System.Reflection.ParameterInfo.Name
  id: Name
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ParameterInfo.Name
  fullName: System.Reflection.ParameterInfo.Name
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 224
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual string Name { get; }
    content.vb: Public Overridable ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.ParameterInfo.ParameterType
  commentId: P:System.Reflection.ParameterInfo.ParameterType
  id: ParameterType
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: ParameterType
  nameWithType: ParameterInfo.ParameterType
  fullName: System.Reflection.ParameterInfo.ParameterType
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParameterType
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 225
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual Type ParameterType { get; }
    content.vb: Public Overridable ReadOnly Property ParameterType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.ParameterInfo.Position
  commentId: P:System.Reflection.ParameterInfo.Position
  id: Position
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ParameterInfo.Position
  fullName: System.Reflection.ParameterInfo.Position
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Position
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 226
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual int Position { get; }
    content.vb: Public Overridable ReadOnly Property Position As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection.ParameterAttributes
  commentId: T:System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: ParameterAttributes
  nameWithType: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
  commentId: '!:System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}'
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<CustomAttributeData>
  nameWithType: Collections.Generic.IEnumerable<CustomAttributeData>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData>
  nameWithType.vb: Collections.Generic.IEnumerable(Of CustomAttributeData)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.CustomAttributeData)
  name.vb: Collections.Generic.IEnumerable(Of CustomAttributeData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    nameWithType: CustomAttributeData
    fullName: System.Reflection.CustomAttributeData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    nameWithType: CustomAttributeData
    fullName: System.Reflection.CustomAttributeData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  nameWithType: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: Collections.Generic.IEnumerable(Of )
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    nameWithType: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
