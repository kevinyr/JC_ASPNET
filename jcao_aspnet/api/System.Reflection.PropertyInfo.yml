items:
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  id: PropertyInfo
  parent: System.Reflection
  children:
  - System.Reflection.PropertyInfo.Attributes
  - System.Reflection.PropertyInfo.CanRead
  - System.Reflection.PropertyInfo.CanWrite
  - System.Reflection.PropertyInfo.Equals(System.Object)
  - System.Reflection.PropertyInfo.GetConstantValue
  - System.Reflection.PropertyInfo.GetHashCode
  - System.Reflection.PropertyInfo.GetIndexParameters
  - System.Reflection.PropertyInfo.GetMethod
  - System.Reflection.PropertyInfo.GetValue(System.Object)
  - System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])
  - System.Reflection.PropertyInfo.IsSpecialName
  - System.Reflection.PropertyInfo.PropertyType
  - System.Reflection.PropertyInfo.SetMethod
  - System.Reflection.PropertyInfo.SetValue(System.Object,System.Object)
  - System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  langs:
  - csharp
  - vb
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
  type: Class
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PropertyInfo
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 228
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: 'public abstract class PropertyInfo : MemberInfo'
    content.vb: >-
      Public MustInherit Class PropertyInfo
          Inherits MemberInfo
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  inheritedMembers:
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.DeclaringType
  - System.Reflection.MemberInfo.Module
  - System.Reflection.MemberInfo.Name
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Reflection.PropertyInfo.Attributes
  commentId: P:System.Reflection.PropertyInfo.Attributes
  id: Attributes
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: PropertyInfo.Attributes
  fullName: System.Reflection.PropertyInfo.Attributes
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 231
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public abstract PropertyAttributes Attributes { get; }
    content.vb: Public MustOverride ReadOnly Property Attributes As PropertyAttributes
    parameters: []
    return:
      type: System.Reflection.PropertyAttributes
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Reflection.PropertyInfo.CanRead
  commentId: P:System.Reflection.PropertyInfo.CanRead
  id: CanRead
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: PropertyInfo.CanRead
  fullName: System.Reflection.PropertyInfo.CanRead
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanRead
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 232
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public abstract bool CanRead { get; }
    content.vb: Public MustOverride ReadOnly Property CanRead As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Reflection.PropertyInfo.CanWrite
  commentId: P:System.Reflection.PropertyInfo.CanWrite
  id: CanWrite
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: PropertyInfo.CanWrite
  fullName: System.Reflection.PropertyInfo.CanWrite
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanWrite
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 233
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public abstract bool CanWrite { get; }
    content.vb: Public MustOverride ReadOnly Property CanWrite As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Reflection.PropertyInfo.GetMethod
  commentId: P:System.Reflection.PropertyInfo.GetMethod
  id: GetMethod
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: GetMethod
  nameWithType: PropertyInfo.GetMethod
  fullName: System.Reflection.PropertyInfo.GetMethod
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMethod
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 234
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual MethodInfo GetMethod { get; }
    content.vb: Public Overridable ReadOnly Property GetMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.PropertyInfo.IsSpecialName
  commentId: P:System.Reflection.PropertyInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: IsSpecialName
  nameWithType: PropertyInfo.IsSpecialName
  fullName: System.Reflection.PropertyInfo.IsSpecialName
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSpecialName
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 235
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public bool IsSpecialName { get; }
    content.vb: Public ReadOnly Property IsSpecialName As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.PropertyInfo.PropertyType
  commentId: P:System.Reflection.PropertyInfo.PropertyType
  id: PropertyType
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: PropertyType
  nameWithType: PropertyInfo.PropertyType
  fullName: System.Reflection.PropertyInfo.PropertyType
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PropertyType
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 236
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public abstract Type PropertyType { get; }
    content.vb: Public MustOverride ReadOnly Property PropertyType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Reflection.PropertyInfo.SetMethod
  commentId: P:System.Reflection.PropertyInfo.SetMethod
  id: SetMethod
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: SetMethod
  nameWithType: PropertyInfo.SetMethod
  fullName: System.Reflection.PropertyInfo.SetMethod
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetMethod
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 237
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual MethodInfo SetMethod { get; }
    content.vb: Public Overridable ReadOnly Property SetMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.PropertyInfo.Equals(System.Object)
  commentId: M:System.Reflection.PropertyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: PropertyInfo.Equals(Object)
  fullName: System.Reflection.PropertyInfo.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 238
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Reflection.MemberInfo.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.PropertyInfo.GetConstantValue
  commentId: M:System.Reflection.PropertyInfo.GetConstantValue
  id: GetConstantValue
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: GetConstantValue()
  nameWithType: PropertyInfo.GetConstantValue()
  fullName: System.Reflection.PropertyInfo.GetConstantValue()
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetConstantValue
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 239
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual object GetConstantValue()
    content.vb: Public Overridable Function GetConstantValue As Object
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Reflection.PropertyInfo.GetHashCode
  commentId: M:System.Reflection.PropertyInfo.GetHashCode
  id: GetHashCode
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PropertyInfo.GetHashCode()
  fullName: System.Reflection.PropertyInfo.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 240
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Reflection.MemberInfo.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.PropertyInfo.GetIndexParameters
  commentId: M:System.Reflection.PropertyInfo.GetIndexParameters
  id: GetIndexParameters
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: GetIndexParameters()
  nameWithType: PropertyInfo.GetIndexParameters()
  fullName: System.Reflection.PropertyInfo.GetIndexParameters()
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetIndexParameters
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 241
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public abstract ParameterInfo[] GetIndexParameters()
    content.vb: Public MustOverride Function GetIndexParameters As ParameterInfo()
    return:
      type: System.Reflection.ParameterInfo[]
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Reflection.PropertyInfo.GetValue(System.Object)
  commentId: M:System.Reflection.PropertyInfo.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: GetValue(Object)
  nameWithType: PropertyInfo.GetValue(Object)
  fullName: System.Reflection.PropertyInfo.GetValue(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValue
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 242
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public object GetValue(object obj)
    content.vb: Public Function GetValue(obj As Object) As Object
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])
  commentId: M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])
  id: GetValue(System.Object,System.Object[])
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: GetValue(Object, Object[])
  nameWithType: PropertyInfo.GetValue(Object, Object[])
  fullName: System.Reflection.PropertyInfo.GetValue(System.Object, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValue
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 243
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual object GetValue(object obj, object[] index)
    content.vb: Public Overridable Function GetValue(obj As Object, index As Object()) As Object
    parameters:
    - id: obj
      type: System.Object
    - id: index
      type: System.Object[]
    return:
      type: System.Object
  nameWithType.vb: PropertyInfo.GetValue(Object, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Reflection.PropertyInfo.GetValue(System.Object, System.Object())
  name.vb: GetValue(Object, Object())
- uid: System.Reflection.PropertyInfo.SetValue(System.Object,System.Object)
  commentId: M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: SetValue(Object, Object)
  nameWithType: PropertyInfo.SetValue(Object, Object)
  fullName: System.Reflection.PropertyInfo.SetValue(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetValue
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 244
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public void SetValue(object obj, object value)
    content.vb: Public Sub SetValue(obj As Object, value As Object)
    parameters:
    - id: obj
      type: System.Object
    - id: value
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  commentId: M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  id: SetValue(System.Object,System.Object,System.Object[])
  parent: System.Reflection.PropertyInfo
  langs:
  - csharp
  - vb
  name: SetValue(Object, Object, Object[])
  nameWithType: PropertyInfo.SetValue(Object, Object, Object[])
  fullName: System.Reflection.PropertyInfo.SetValue(System.Object, System.Object, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetValue
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 245
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public virtual void SetValue(object obj, object value, object[] index)
    content.vb: Public Overridable Sub SetValue(obj As Object, value As Object, index As Object())
    parameters:
    - id: obj
      type: System.Object
    - id: value
      type: System.Object
    - id: index
      type: System.Object[]
  nameWithType.vb: PropertyInfo.SetValue(Object, Object, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Reflection.PropertyInfo.SetValue(System.Object, System.Object, System.Object())
  name.vb: SetValue(Object, Object, Object())
references:
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.MemberInfo.CustomAttributes
  commentId: P:System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: CustomAttributes
  nameWithType: MemberInfo.CustomAttributes
  fullName: System.Reflection.MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.DeclaringType
  commentId: P:System.Reflection.MemberInfo.DeclaringType
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: DeclaringType
  nameWithType: MemberInfo.DeclaringType
  fullName: System.Reflection.MemberInfo.DeclaringType
- uid: System.Reflection.MemberInfo.Module
  commentId: P:System.Reflection.MemberInfo.Module
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: Module
  nameWithType: MemberInfo.Module
  fullName: System.Reflection.MemberInfo.Module
- uid: System.Reflection.MemberInfo.Name
  commentId: P:System.Reflection.MemberInfo.Name
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: Name
  nameWithType: MemberInfo.Name
  fullName: System.Reflection.MemberInfo.Name
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection.PropertyAttributes
  commentId: T:System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: false
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.MemberInfo.Equals(System.Object)
  commentId: M:System.Reflection.MemberInfo.Equals(System.Object)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: Equals(Object)
  nameWithType: MemberInfo.Equals(Object)
  fullName: System.Reflection.MemberInfo.Equals(System.Object)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.Equals(System.Object)
    name: Equals
    nameWithType: MemberInfo.Equals
    fullName: System.Reflection.MemberInfo.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.Equals(System.Object)
    name: Equals
    nameWithType: MemberInfo.Equals
    fullName: System.Reflection.MemberInfo.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.MemberInfo.GetHashCode
  commentId: M:System.Reflection.MemberInfo.GetHashCode
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: MemberInfo.GetHashCode()
  fullName: System.Reflection.MemberInfo.GetHashCode()
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetHashCode
    name: GetHashCode
    nameWithType: MemberInfo.GetHashCode
    fullName: System.Reflection.MemberInfo.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetHashCode
    name: GetHashCode
    nameWithType: MemberInfo.GetHashCode
    fullName: System.Reflection.MemberInfo.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.ParameterInfo[]
  name: ParameterInfo[]
  nameWithType: ParameterInfo[]
  fullName: System.Reflection.ParameterInfo[]
  nameWithType.vb: ParameterInfo()
  fullname.vb: System.Reflection.ParameterInfo()
  name.vb: ParameterInfo()
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ()
    nameWithType: ()
    fullName: ()
