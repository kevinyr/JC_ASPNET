items:
- uid: System.Reflection.ReflectionTypeLoadException
  commentId: T:System.Reflection.ReflectionTypeLoadException
  id: ReflectionTypeLoadException
  parent: System.Reflection
  children:
  - System.Reflection.ReflectionTypeLoadException.#ctor(System.Type[],System.Exception[])
  - System.Reflection.ReflectionTypeLoadException.#ctor(System.Type[],System.Exception[],System.String)
  - System.Reflection.ReflectionTypeLoadException.LoaderExceptions
  - System.Reflection.ReflectionTypeLoadException.Types
  langs:
  - csharp
  - vb
  name: ReflectionTypeLoadException
  nameWithType: ReflectionTypeLoadException
  fullName: System.Reflection.ReflectionTypeLoadException
  type: Class
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReflectionTypeLoadException
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 254
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: 'public sealed class ReflectionTypeLoadException : Exception'
    content.vb: >-
      Public NotInheritable Class ReflectionTypeLoadException
          Inherits Exception
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.ReflectionTypeLoadException.#ctor(System.Type[],System.Exception[])
  commentId: M:System.Reflection.ReflectionTypeLoadException.#ctor(System.Type[],System.Exception[])
  id: '#ctor(System.Type[],System.Exception[])'
  parent: System.Reflection.ReflectionTypeLoadException
  langs:
  - csharp
  - vb
  name: ReflectionTypeLoadException(Type[], Exception[])
  nameWithType: ReflectionTypeLoadException.ReflectionTypeLoadException(Type[], Exception[])
  fullName: System.Reflection.ReflectionTypeLoadException.ReflectionTypeLoadException(System.Type[], System.Exception[])
  type: Constructor
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 256
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public ReflectionTypeLoadException(Type[] classes, Exception[] exceptions)
    content.vb: Public Sub New(classes As Type(), exceptions As Exception())
    parameters:
    - id: classes
      type: System.Type[]
    - id: exceptions
      type: System.Exception[]
  nameWithType.vb: ReflectionTypeLoadException.ReflectionTypeLoadException(Type(), Exception())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.ReflectionTypeLoadException.ReflectionTypeLoadException(System.Type(), System.Exception())
  name.vb: ReflectionTypeLoadException(Type(), Exception())
- uid: System.Reflection.ReflectionTypeLoadException.#ctor(System.Type[],System.Exception[],System.String)
  commentId: M:System.Reflection.ReflectionTypeLoadException.#ctor(System.Type[],System.Exception[],System.String)
  id: '#ctor(System.Type[],System.Exception[],System.String)'
  parent: System.Reflection.ReflectionTypeLoadException
  langs:
  - csharp
  - vb
  name: ReflectionTypeLoadException(Type[], Exception[], String)
  nameWithType: ReflectionTypeLoadException.ReflectionTypeLoadException(Type[], Exception[], String)
  fullName: System.Reflection.ReflectionTypeLoadException.ReflectionTypeLoadException(System.Type[], System.Exception[], System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 257
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public ReflectionTypeLoadException(Type[] classes, Exception[] exceptions, string message)
    content.vb: Public Sub New(classes As Type(), exceptions As Exception(), message As String)
    parameters:
    - id: classes
      type: System.Type[]
    - id: exceptions
      type: System.Exception[]
    - id: message
      type: System.String
  nameWithType.vb: ReflectionTypeLoadException.ReflectionTypeLoadException(Type(), Exception(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.ReflectionTypeLoadException.ReflectionTypeLoadException(System.Type(), System.Exception(), System.String)
  name.vb: ReflectionTypeLoadException(Type(), Exception(), String)
- uid: System.Reflection.ReflectionTypeLoadException.LoaderExceptions
  commentId: P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions
  id: LoaderExceptions
  parent: System.Reflection.ReflectionTypeLoadException
  langs:
  - csharp
  - vb
  name: LoaderExceptions
  nameWithType: ReflectionTypeLoadException.LoaderExceptions
  fullName: System.Reflection.ReflectionTypeLoadException.LoaderExceptions
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LoaderExceptions
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 258
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public Exception[] LoaderExceptions { get; }
    content.vb: Public ReadOnly Property LoaderExceptions As Exception()
    parameters: []
    return:
      type: System.Exception[]
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.ReflectionTypeLoadException.Types
  commentId: P:System.Reflection.ReflectionTypeLoadException.Types
  id: Types
  parent: System.Reflection.ReflectionTypeLoadException
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: ReflectionTypeLoadException.Types
  fullName: System.Reflection.ReflectionTypeLoadException.Types
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Types
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 259
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: public Type[] Types { get; }
    content.vb: Public ReadOnly Property Types As Type()
    parameters: []
    return:
      type: System.Type[]
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Exception[]
  name: Exception[]
  nameWithType: Exception[]
  fullName: System.Exception[]
  nameWithType.vb: Exception()
  fullname.vb: System.Exception()
  name.vb: Exception()
  spec.csharp:
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
