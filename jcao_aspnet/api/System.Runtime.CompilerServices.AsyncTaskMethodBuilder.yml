items:
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  commentId: T:System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  id: AsyncTaskMethodBuilder
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted``2(``0@,``1@)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start``1(``0@)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task
  langs:
  - csharp
  - vb
  name: AsyncTaskMethodBuilder
  nameWithType: AsyncTaskMethodBuilder
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  type: Struct
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsyncTaskMethodBuilder
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 38
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public struct AsyncTaskMethodBuilder
    content.vb: Public Structure AsyncTaskMethodBuilder
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task
  commentId: P:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task
  id: Task
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: Task
  nameWithType: AsyncTaskMethodBuilder.Task
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task
  type: Property
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Task
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 41
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public Task Task { get; }
    content.vb: Public ReadOnly Property Task As Task
    parameters: []
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted``2(``0@,``1@)
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted``2(``0@,``1@)
  id: AwaitOnCompleted``2(``0@,``1@)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)
  nameWithType: AsyncTaskMethodBuilder.AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)
  type: Method
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AwaitOnCompleted
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 42
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public void AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter awaiter, ref TStateMachine stateMachine)where TAwaiter : INotifyCompletion where TStateMachine : IAsyncStateMachine'
    content.vb: Public Sub AwaitOnCompleted(Of TAwaiter As INotifyCompletion, TStateMachine As IAsyncStateMachine)(ByRef awaiter As TAwaiter, ByRef stateMachine As TStateMachine)
    parameters:
    - id: awaiter
      type: '{TAwaiter}'
    - id: stateMachine
      type: '{TStateMachine}'
    typeParameters:
    - id: TAwaiter
    - id: TStateMachine
  nameWithType.vb: AsyncTaskMethodBuilder.AwaitOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)
  name.vb: AwaitOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)
  id: AwaitUnsafeOnCompleted``2(``0@,``1@)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)
  nameWithType: AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)
  type: Method
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AwaitUnsafeOnCompleted
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 43
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public void AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter awaiter, ref TStateMachine stateMachine)where TAwaiter : ICriticalNotifyCompletion where TStateMachine : IAsyncStateMachine'
    content.vb: Public Sub AwaitUnsafeOnCompleted(Of TAwaiter As ICriticalNotifyCompletion, TStateMachine As IAsyncStateMachine)(ByRef awaiter As TAwaiter, ByRef stateMachine As TStateMachine)
    parameters:
    - id: awaiter
      type: '{TAwaiter}'
    - id: stateMachine
      type: '{TStateMachine}'
    typeParameters:
    - id: TAwaiter
    - id: TStateMachine
  nameWithType.vb: AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)
  name.vb: AwaitUnsafeOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create
  id: Create
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: AsyncTaskMethodBuilder.Create()
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create()
  type: Method
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 44
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static AsyncTaskMethodBuilder Create()
    content.vb: Public Shared Function Create As AsyncTaskMethodBuilder
    return:
      type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)
  id: SetException(System.Exception)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: SetException(Exception)
  nameWithType: AsyncTaskMethodBuilder.SetException(Exception)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)
  type: Method
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetException
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 45
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public void SetException(Exception exception)
    content.vb: Public Sub SetException(exception As Exception)
    parameters:
    - id: exception
      type: System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult
  id: SetResult
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: SetResult()
  nameWithType: AsyncTaskMethodBuilder.SetResult()
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()
  type: Method
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetResult
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 46
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public void SetResult()
    content.vb: Public Sub SetResult
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  id: SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: SetStateMachine(IAsyncStateMachine)
  nameWithType: AsyncTaskMethodBuilder.SetStateMachine(IAsyncStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  type: Method
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetStateMachine
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 47
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public void SetStateMachine(IAsyncStateMachine stateMachine)
    content.vb: Public Sub SetStateMachine(stateMachine As IAsyncStateMachine)
    parameters:
    - id: stateMachine
      type: System.Runtime.CompilerServices.IAsyncStateMachine
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start``1(``0@)
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start``1(``0@)
  id: Start``1(``0@)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: Start<TStateMachine>(ref TStateMachine)
  nameWithType: AsyncTaskMethodBuilder.Start<TStateMachine>(ref TStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<TStateMachine>(ref TStateMachine)
  type: Method
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Start
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 48
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public void Start<TStateMachine>(ref TStateMachine stateMachine)where TStateMachine : IAsyncStateMachine'
    content.vb: Public Sub Start(Of TStateMachine As IAsyncStateMachine)(ByRef stateMachine As TStateMachine)
    parameters:
    - id: stateMachine
      type: '{TStateMachine}'
    typeParameters:
    - id: TStateMachine
  nameWithType.vb: AsyncTaskMethodBuilder.Start(Of TStateMachine)(ByRef TStateMachine)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start(Of TStateMachine)(ByRef TStateMachine)
  name.vb: Start(Of TStateMachine)(ByRef TStateMachine)
references:
- uid: System.Runtime.CompilerServices
  commentId: N:System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  nameWithType: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task
  nameWithType: Threading.Tasks.Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: '{TAwaiter}'
  commentId: '!:TAwaiter'
  definition: TAwaiter
  name: TAwaiter
  nameWithType: TAwaiter
  fullName: TAwaiter
- uid: '{TStateMachine}'
  commentId: '!:TStateMachine'
  definition: TStateMachine
  name: TStateMachine
  nameWithType: TStateMachine
  fullName: TStateMachine
- uid: TAwaiter
  isExternal: false
  name: TAwaiter
  nameWithType: TAwaiter
  fullName: TAwaiter
- uid: TStateMachine
  isExternal: false
  name: TStateMachine
  nameWithType: TStateMachine
  fullName: TStateMachine
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  commentId: T:System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: AsyncTaskMethodBuilder
  nameWithType: AsyncTaskMethodBuilder
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.CompilerServices.IAsyncStateMachine
  commentId: T:System.Runtime.CompilerServices.IAsyncStateMachine
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: IAsyncStateMachine
  nameWithType: IAsyncStateMachine
  fullName: System.Runtime.CompilerServices.IAsyncStateMachine
