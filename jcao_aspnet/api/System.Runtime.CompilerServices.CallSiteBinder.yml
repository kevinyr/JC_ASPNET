items:
- uid: System.Runtime.CompilerServices.CallSiteBinder
  commentId: T:System.Runtime.CompilerServices.CallSiteBinder
  id: CallSiteBinder
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.CallSiteBinder.#ctor
  - System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)
  - System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])
  - System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)
  - System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel
  langs:
  - csharp
  - vb
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
  type: Class
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CallSiteBinder
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 279
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public abstract class CallSiteBinder : object'
    content.vb: >-
      Public MustInherit Class CallSiteBinder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Runtime.CompilerServices.CallSiteBinder.#ctor
  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.#ctor
  id: '#ctor'
  parent: System.Runtime.CompilerServices.CallSiteBinder
  langs:
  - csharp
  - vb
  name: CallSiteBinder()
  nameWithType: CallSiteBinder.CallSiteBinder()
  fullName: System.Runtime.CompilerServices.CallSiteBinder.CallSiteBinder()
  type: Constructor
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 281
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  syntax:
    content: protected CallSiteBinder()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel
  commentId: P:System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel
  id: UpdateLabel
  parent: System.Runtime.CompilerServices.CallSiteBinder
  langs:
  - csharp
  - vb
  name: UpdateLabel
  nameWithType: CallSiteBinder.UpdateLabel
  fullName: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel
  type: Property
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UpdateLabel
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 282
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static LabelTarget UpdateLabel { get; }
    content.vb: Public Shared ReadOnly Property UpdateLabel As LabelTarget
    parameters: []
    return:
      type: System.Linq.Expressions.LabelTarget
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)
  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)
  id: Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)
  parent: System.Runtime.CompilerServices.CallSiteBinder
  langs:
  - csharp
  - vb
  name: Bind(Object[], Collections.ObjectModel.ReadOnlyCollection<ParameterExpression>, LabelTarget)
  nameWithType: CallSiteBinder.Bind(Object[], Collections.ObjectModel.ReadOnlyCollection<ParameterExpression>, LabelTarget)
  fullName: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.LabelTarget)
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Bind
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 283
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public abstract Expression Bind(object[] args, Collections.ObjectModel.ReadOnlyCollection<ParameterExpression> parameters, LabelTarget returnLabel)
    content.vb: Public MustOverride Function Bind(args As Object(), parameters As Collections.ObjectModel.ReadOnlyCollection(Of ParameterExpression), returnLabel As LabelTarget) As Expression
    parameters:
    - id: args
      type: System.Object[]
    - id: parameters
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}
    - id: returnLabel
      type: System.Linq.Expressions.LabelTarget
    return:
      type: System.Linq.Expressions.Expression
  nameWithType.vb: CallSiteBinder.Bind(Object(), Collections.ObjectModel.ReadOnlyCollection(Of ParameterExpression), LabelTarget)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object(), System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.LabelTarget)
  name.vb: Bind(Object(), Collections.ObjectModel.ReadOnlyCollection(Of ParameterExpression), LabelTarget)
- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])
  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])
  id: BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])
  parent: System.Runtime.CompilerServices.CallSiteBinder
  langs:
  - csharp
  - vb
  name: BindDelegate<T>(CallSite<T>, Object[])
  nameWithType: CallSiteBinder.BindDelegate<T>(CallSite<T>, Object[])
  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BindDelegate
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 284
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public virtual T BindDelegate<T>(CallSite<T> site, object[] args)where T : class'
    content.vb: Public Overridable Function BindDelegate(Of T As Class)(site As CallSite(Of T), args As Object()) As T
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite{{T}}
    - id: args
      type: System.Object[]
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: CallSiteBinder.BindDelegate(Of T)(CallSite(Of T), Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())
  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())
- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)
  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)
  id: CacheTarget``1(``0)
  parent: System.Runtime.CompilerServices.CallSiteBinder
  langs:
  - csharp
  - vb
  name: CacheTarget<T>(T)
  nameWithType: CallSiteBinder.CacheTarget<T>(T)
  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CacheTarget
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 285
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'protected void CacheTarget<T>(T target)where T : class'
    content.vb: Protected Sub CacheTarget(Of T As Class)(target As T)
    parameters:
    - id: target
      type: '{T}'
    typeParameters:
    - id: T
  nameWithType.vb: CallSiteBinder.CacheTarget(Of T)(T)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)
  name.vb: CacheTarget(Of T)(T)
references:
- uid: System.Runtime.CompilerServices
  commentId: N:System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  nameWithType: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Linq.Expressions.LabelTarget
  commentId: T:System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: Collections.ObjectModel.ReadOnlyCollection<ParameterExpression>
  nameWithType: Collections.ObjectModel.ReadOnlyCollection<ParameterExpression>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>
  nameWithType.vb: Collections.ObjectModel.ReadOnlyCollection(Of ParameterExpression)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression)
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of ParameterExpression)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expressions.Expression
  nameWithType: Expressions.Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: false
  name: Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType: Collections.ObjectModel.ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    nameWithType: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.CompilerServices.CallSite{{T}}
  commentId: T:System.Runtime.CompilerServices.CallSite{``0}
  parent: System.Runtime.CompilerServices
  definition: System.Runtime.CompilerServices.CallSite`1
  name: CallSite<T>
  nameWithType: CallSite<T>
  fullName: System.Runtime.CompilerServices.CallSite<T>
  nameWithType.vb: CallSite(Of T)
  fullname.vb: System.Runtime.CompilerServices.CallSite(Of T)
  name.vb: CallSite(Of T)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    nameWithType: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    nameWithType: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Runtime.CompilerServices.CallSite`1
  commentId: T:System.Runtime.CompilerServices.CallSite`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSite<T>
  nameWithType: CallSite<T>
  fullName: System.Runtime.CompilerServices.CallSite<T>
  nameWithType.vb: CallSite(Of T)
  fullname.vb: System.Runtime.CompilerServices.CallSite(Of T)
  name.vb: CallSite(Of T)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    nameWithType: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    nameWithType: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
