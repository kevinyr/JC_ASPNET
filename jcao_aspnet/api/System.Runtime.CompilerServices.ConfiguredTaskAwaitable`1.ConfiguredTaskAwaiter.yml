items:
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter
  id: ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult
  - System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.IsCompleted
  - System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.OnCompleted(System.Action)
  - System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.UnsafeOnCompleted(System.Action)
  name: ConfiguredTaskAwaitable<TResult>.ConfiguredTaskAwaiter
  name.vb: ConfiguredTaskAwaitable(Of TResult).ConfiguredTaskAwaiter
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult>.ConfiguredTaskAwaiter
  fullName.vb: System.Runtime.CompilerServices.ConfiguredTaskAwaitable(Of TResult).ConfiguredTaskAwaiter
  type: Struct
  source:
    remote: &o0
      path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
    startLine: 468
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Provides an awaiter for an awaitable object(<xref href="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1" data-throw-if-not-resolved="false"></xref>).
  syntax:
    content: 'public struct ConfiguredTaskAwaiter : ICriticalNotifyCompletion, INotifyCompletion'
    content.vb: Public Structure ConfiguredTaskAwaiter Implements ICriticalNotifyCompletion, INotifyCompletion
  implements:
  - System.Runtime.CompilerServices.ICriticalNotifyCompletion
  - System.Runtime.CompilerServices.INotifyCompletion
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.IsCompleted
  id: IsCompleted
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter
  name: IsCompleted
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult>.ConfiguredTaskAwaiter.IsCompleted
  fullName.vb: System.Runtime.CompilerServices.ConfiguredTaskAwaitable(Of TResult).ConfiguredTaskAwaiter.IsCompleted
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
    startLine: 491
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Gets a value that specifies whether the task being awaited has been completed.
  syntax:
    content: public bool IsCompleted { get; }
    content.vb: Public ReadOnly Property IsCompleted As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the task being awaited has been completed; otherwise, false.
  exceptions:
  - type: System.NullReferenceException
    description: The awaiter was not properly initialized.
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult
  id: GetResult
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter
  name: GetResult()
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult>.ConfiguredTaskAwaiter.GetResult()
  fullName.vb: System.Runtime.CompilerServices.ConfiguredTaskAwaitable(Of TResult).ConfiguredTaskAwaiter.GetResult()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
    startLine: 523
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Ends the await on the completed task.
  syntax:
    content: public TResult GetResult()
    content.vb: Public Function GetResult As TResult
    return:
      type: '{TResult}'
      description: The result of the completed task.
  exceptions:
  - type: System.NullReferenceException
    description: The awaiter was not properly initialized.
  - type: System.Threading.Tasks.TaskCanceledException
    description: The task was canceled.
  - type: System.Exception
    description: The task completed in a faulted state.
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.OnCompleted(System.Action)
  id: OnCompleted(System.Action)
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter
  name: OnCompleted(Action)
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult>.ConfiguredTaskAwaiter.OnCompleted(System.Action)
  fullName.vb: System.Runtime.CompilerServices.ConfiguredTaskAwaitable(Of TResult).ConfiguredTaskAwaiter.OnCompleted(System.Action)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
    startLine: 501
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Schedules the continuation action for the task associated with this awaiter.
  syntax:
    content: public void OnCompleted(Action continuation)
    content.vb: Public Sub OnCompleted(continuation As Action)
    parameters:
    - id: continuation
      type: System.Action
      description: The action to invoke when the await operation completes.
  exceptions:
  - type: System.ArgumentNullException
    description: The *continuation* argument is null.
  - type: System.NullReferenceException
    description: The awaiter was not properly initialized.
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.UnsafeOnCompleted(System.Action)
  id: UnsafeOnCompleted(System.Action)
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter
  name: UnsafeOnCompleted(Action)
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult>.ConfiguredTaskAwaiter.UnsafeOnCompleted(System.Action)
  fullName.vb: System.Runtime.CompilerServices.ConfiguredTaskAwaitable(Of TResult).ConfiguredTaskAwaiter.UnsafeOnCompleted(System.Action)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
    startLine: 512
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Schedules the continuation action for the task associated with this awaiter.
  syntax:
    content: public void UnsafeOnCompleted(Action continuation)
    content.vb: Public Sub UnsafeOnCompleted(continuation As Action)
    parameters:
    - id: continuation
      type: System.Action
      description: The action to invoke when the await operation completes.
  exceptions:
  - type: System.ArgumentNullException
    description: The *continuation* argument is null.
  - type: System.NullReferenceException
    description: The awaiter was not properly initialized.
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Runtime.CompilerServices.ICriticalNotifyCompletion
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: ICriticalNotifyCompletion
  fullName: System.Runtime.CompilerServices.ICriticalNotifyCompletion
- uid: System.Runtime.CompilerServices.INotifyCompletion
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: INotifyCompletion
  fullName: System.Runtime.CompilerServices.INotifyCompletion
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: '{TResult}'
  isExternal: false
  name: TResult
  fullName: TResult
- uid: System.Action
  isExternal: false
  name: Action
  fullName: System.Action
- uid: System.NullReferenceException
  isExternal: false
  name: NullReferenceException
  fullName: System.NullReferenceException
- uid: System.Threading.Tasks.TaskCanceledException
  isExternal: false
  name: TaskCanceledException
  fullName: System.Threading.Tasks.TaskCanceledException
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
