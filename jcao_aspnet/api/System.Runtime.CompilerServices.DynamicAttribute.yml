items:
- uid: System.Runtime.CompilerServices.DynamicAttribute
  commentId: T:System.Runtime.CompilerServices.DynamicAttribute
  id: DynamicAttribute
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.DynamicAttribute.#ctor
  - System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])
  - System.Runtime.CompilerServices.DynamicAttribute.TransformFlags
  langs:
  - csharp
  - vb
  name: DynamicAttribute
  nameWithType: DynamicAttribute
  fullName: System.Runtime.CompilerServices.DynamicAttribute
  type: Class
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DynamicAttribute
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 291
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public sealed class DynamicAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class DynamicAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.CompilerServices.DynamicAttribute.#ctor
  commentId: M:System.Runtime.CompilerServices.DynamicAttribute.#ctor
  id: '#ctor'
  parent: System.Runtime.CompilerServices.DynamicAttribute
  langs:
  - csharp
  - vb
  name: DynamicAttribute()
  nameWithType: DynamicAttribute.DynamicAttribute()
  fullName: System.Runtime.CompilerServices.DynamicAttribute.DynamicAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 294
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public DynamicAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])
  commentId: M:System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])
  id: '#ctor(System.Boolean[])'
  parent: System.Runtime.CompilerServices.DynamicAttribute
  langs:
  - csharp
  - vb
  name: DynamicAttribute(Boolean[])
  nameWithType: DynamicAttribute.DynamicAttribute(Boolean[])
  fullName: System.Runtime.CompilerServices.DynamicAttribute.DynamicAttribute(System.Boolean[])
  type: Constructor
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 295
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public DynamicAttribute(bool[] transformFlags)
    content.vb: Public Sub New(transformFlags As Boolean())
    parameters:
    - id: transformFlags
      type: System.Boolean[]
  nameWithType.vb: DynamicAttribute.DynamicAttribute(Boolean())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.CompilerServices.DynamicAttribute.DynamicAttribute(System.Boolean())
  name.vb: DynamicAttribute(Boolean())
- uid: System.Runtime.CompilerServices.DynamicAttribute.TransformFlags
  commentId: P:System.Runtime.CompilerServices.DynamicAttribute.TransformFlags
  id: TransformFlags
  parent: System.Runtime.CompilerServices.DynamicAttribute
  langs:
  - csharp
  - vb
  name: TransformFlags
  nameWithType: DynamicAttribute.TransformFlags
  fullName: System.Runtime.CompilerServices.DynamicAttribute.TransformFlags
  type: Property
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TransformFlags
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 296
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public Collections.Generic.IList<bool> TransformFlags { get; }
    content.vb: Public ReadOnly Property TransformFlags As Collections.Generic.IList(Of Boolean)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Boolean}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.CompilerServices
  commentId: N:System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  nameWithType: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean[]
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullname.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IList{System.Boolean}
  commentId: '!:System.Collections.Generic.IList{System.Boolean}'
  definition: System.Collections.Generic.IList`1
  name: Collections.Generic.IList<Boolean>
  nameWithType: Collections.Generic.IList<Boolean>
  fullName: System.Collections.Generic.IList<System.Boolean>
  nameWithType.vb: Collections.Generic.IList(Of Boolean)
  fullname.vb: System.Collections.Generic.IList(Of System.Boolean)
  name.vb: Collections.Generic.IList(Of Boolean)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    nameWithType: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    nameWithType: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: false
  name: Collections.Generic.IList<>
  nameWithType: Collections.Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: Collections.Generic.IList(Of )
  fullname.vb: System.Collections.Generic.IList(Of )
  name.vb: Collections.Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    nameWithType: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    nameWithType: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
