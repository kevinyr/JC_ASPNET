items:
- uid: System.Runtime.InteropServices.GCHandleType
  id: GCHandleType
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.GCHandleType.Normal
  - System.Runtime.InteropServices.GCHandleType.Pinned
  - System.Runtime.InteropServices.GCHandleType.Weak
  - System.Runtime.InteropServices.GCHandleType.WeakTrackResurrection
  name: GCHandleType
  fullName: System.Runtime.InteropServices.GCHandleType
  type: Enum
  source:
    remote: &o0
      path: src/mscorlib/src/System/Runtime/InteropServices/GcHandle.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Runtime/InteropServices/GcHandle.cs
    startLine: 17
  assemblies:
  - System.Runtime
  namespace: System.Runtime.InteropServices
  summary: Represents the types of handles the <xref href="System.Runtime.InteropServices.GCHandle" data-throw-if-not-resolved="false"></xref> class can allocate.
  syntax:
    content: public enum GCHandleType
    content.vb: Public Enum GCHandleType
- uid: System.Runtime.InteropServices.GCHandleType.Normal
  id: Normal
  parent: System.Runtime.InteropServices.GCHandleType
  name: Normal
  fullName: System.Runtime.InteropServices.GCHandleType.Normal
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/GcHandle.cs
    startLine: 23
  assemblies:
  - System.Runtime
  namespace: System.Runtime.InteropServices
  summary: This handle type represents an opaque handle, meaning you cannot resolve the address of the pinned object through the handle. You can use this type to track an object and prevent its collection by the garbage collector. This enumeration member is useful when an unmanaged client holds the only reference, which is undetectable from the garbage collector, to a managed object.
  syntax:
    content: Normal = 2
- uid: System.Runtime.InteropServices.GCHandleType.Pinned
  id: Pinned
  parent: System.Runtime.InteropServices.GCHandleType
  name: Pinned
  fullName: System.Runtime.InteropServices.GCHandleType.Pinned
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/GcHandle.cs
    startLine: 24
  assemblies:
  - System.Runtime
  namespace: System.Runtime.InteropServices
  summary: This handle type is similar to <xref href="System.Runtime.InteropServices.GCHandleType.Normal" data-throw-if-not-resolved="false"></xref>, but allows the address of the pinned object to be taken. This prevents the garbage collector from moving the object and hence undermines the efficiency of the garbage collector. Use the <xref href="System.Runtime.InteropServices.GCHandle.Free" data-throw-if-not-resolved="false"></xref> method to free the allocated handle as soon as possible.
  syntax:
    content: Pinned = 3
- uid: System.Runtime.InteropServices.GCHandleType.Weak
  id: Weak
  parent: System.Runtime.InteropServices.GCHandleType
  name: Weak
  fullName: System.Runtime.InteropServices.GCHandleType.Weak
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/GcHandle.cs
    startLine: 21
  assemblies:
  - System.Runtime
  namespace: System.Runtime.InteropServices
  summary: This handle type is used to track an object, but allow it to be collected. When an object is collected, the contents of the <xref href="System.Runtime.InteropServices.GCHandle" data-throw-if-not-resolved="false"></xref> are zeroed. Weak references are zeroed before the finalizer runs, so even if the finalizer resurrects the object, the Weak reference is still zeroed.
  syntax:
    content: Weak = 0
- uid: System.Runtime.InteropServices.GCHandleType.WeakTrackResurrection
  id: WeakTrackResurrection
  parent: System.Runtime.InteropServices.GCHandleType
  name: WeakTrackResurrection
  fullName: System.Runtime.InteropServices.GCHandleType.WeakTrackResurrection
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/GcHandle.cs
    startLine: 22
  assemblies:
  - System.Runtime
  namespace: System.Runtime.InteropServices
  summary: This handle type is similar to <xref href="System.Runtime.InteropServices.GCHandleType.Weak" data-throw-if-not-resolved="false"></xref>, but the handle is not zeroed if the object is resurrected during finalization.
  syntax:
    content: WeakTrackResurrection = 1
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
