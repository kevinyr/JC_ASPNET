items:
- uid: System.Runtime.InteropServices.SafeBuffer
  commentId: T:System.Runtime.InteropServices.SafeBuffer
  id: SafeBuffer
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)
  - System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)
  - System.Runtime.InteropServices.SafeBuffer.ByteLength
  - System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)
  - System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)
  - System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)
  - System.Runtime.InteropServices.SafeBuffer.IsInvalid
  - System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)
  - System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  - System.Runtime.InteropServices.SafeBuffer.ReleasePointer
  - System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)
  - System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: SafeBuffer
  nameWithType: SafeBuffer
  fullName: System.Runtime.InteropServices.SafeBuffer
  type: Class
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SafeBuffer
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 699
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: 'public abstract class SafeBuffer : SafeHandle'
    content.vb: >-
      Public MustInherit Class SafeBuffer
          Inherits SafeHandle
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)
  commentId: M:System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Runtime.InteropServices.SafeBuffer
  langs:
  - csharp
  - vb
  name: SafeBuffer(Boolean)
  nameWithType: SafeBuffer.SafeBuffer(Boolean)
  fullName: System.Runtime.InteropServices.SafeBuffer.SafeBuffer(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 702
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: protected SafeBuffer(bool ownsHandle)
    content.vb: Protected Sub New(ownsHandle As Boolean)
    parameters:
    - id: ownsHandle
      type: System.Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Runtime.InteropServices.SafeBuffer.IsInvalid
  commentId: P:System.Runtime.InteropServices.SafeBuffer.IsInvalid
  id: IsInvalid
  parent: System.Runtime.InteropServices.SafeBuffer
  langs:
  - csharp
  - vb
  name: IsInvalid
  nameWithType: SafeBuffer.IsInvalid
  fullName: System.Runtime.InteropServices.SafeBuffer.IsInvalid
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsInvalid
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 704
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: public override bool IsInvalid { get; }
    content.vb: Public Overrides ReadOnly Property IsInvalid As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Runtime.InteropServices.SafeBuffer.ByteLength
  commentId: P:System.Runtime.InteropServices.SafeBuffer.ByteLength
  id: ByteLength
  parent: System.Runtime.InteropServices.SafeBuffer
  langs:
  - csharp
  - vb
  name: ByteLength
  nameWithType: SafeBuffer.ByteLength
  fullName: System.Runtime.InteropServices.SafeBuffer.ByteLength
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ByteLength
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 705
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: public ulong ByteLength { get; }
    content.vb: Public ReadOnly Property ByteLength As ULong
    parameters: []
    return:
      type: System.UInt64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)
  commentId: M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)
  id: AcquirePointer(System.Byte*@)
  parent: System.Runtime.InteropServices.SafeBuffer
  langs:
  - csharp
  - vb
  name: AcquirePointer(ref Byte*)
  nameWithType: SafeBuffer.AcquirePointer(ref Byte*)
  fullName: System.Runtime.InteropServices.SafeBuffer.AcquirePointer(ref System.Byte*)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AcquirePointer
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 707
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: public void AcquirePointer(ref byte *pointer)
    content.vb: Public Sub AcquirePointer(ByRef pointer As Byte *)
    parameters:
    - id: pointer
      type: System.Byte*
  nameWithType.vb: SafeBuffer.AcquirePointer(ByRef Byte*)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.InteropServices.SafeBuffer.AcquirePointer(ByRef System.Byte*)
  name.vb: AcquirePointer(ByRef Byte*)
- uid: System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)
  commentId: M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)
  id: Initialize(System.UInt32,System.UInt32)
  parent: System.Runtime.InteropServices.SafeBuffer
  langs:
  - csharp
  - vb
  name: Initialize(UInt32, UInt32)
  nameWithType: SafeBuffer.Initialize(UInt32, UInt32)
  fullName: System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32, System.UInt32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Initialize
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 709
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: public void Initialize(uint numElements, uint sizeOfEachElement)
    content.vb: Public Sub Initialize(numElements As UInteger, sizeOfEachElement As UInteger)
    parameters:
    - id: numElements
      type: System.UInt32
    - id: sizeOfEachElement
      type: System.UInt32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)
  commentId: M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)
  id: Initialize(System.UInt64)
  parent: System.Runtime.InteropServices.SafeBuffer
  langs:
  - csharp
  - vb
  name: Initialize(UInt64)
  nameWithType: SafeBuffer.Initialize(UInt64)
  fullName: System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Initialize
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 711
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: public void Initialize(ulong numBytes)
    content.vb: Public Sub Initialize(numBytes As ULong)
    parameters:
    - id: numBytes
      type: System.UInt64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)
  commentId: M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)
  id: Initialize``1(System.UInt32)
  parent: System.Runtime.InteropServices.SafeBuffer
  langs:
  - csharp
  - vb
  name: Initialize<T>(UInt32)
  nameWithType: SafeBuffer.Initialize<T>(UInt32)
  fullName: System.Runtime.InteropServices.SafeBuffer.Initialize<T>(System.UInt32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Initialize
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 713
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: 'public void Initialize<T>(uint numElements)where T : struct'
    content.vb: Public Sub Initialize(Of T As Structure)(numElements As UInteger)
    parameters:
    - id: numElements
      type: System.UInt32
    typeParameters:
    - id: T
  nameWithType.vb: SafeBuffer.Initialize(Of T)(UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.InteropServices.SafeBuffer.Initialize(Of T)(System.UInt32)
  name.vb: Initialize(Of T)(UInt32)
- uid: System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)
  commentId: M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)
  id: Read``1(System.UInt64)
  parent: System.Runtime.InteropServices.SafeBuffer
  langs:
  - csharp
  - vb
  name: Read<T>(UInt64)
  nameWithType: SafeBuffer.Read<T>(UInt64)
  fullName: System.Runtime.InteropServices.SafeBuffer.Read<T>(System.UInt64)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 715
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: 'public T Read<T>(ulong byteOffset)where T : struct'
    content.vb: Public Function Read(Of T As Structure)(byteOffset As ULong) As T
    parameters:
    - id: byteOffset
      type: System.UInt64
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: SafeBuffer.Read(Of T)(UInt64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.InteropServices.SafeBuffer.Read(Of T)(System.UInt64)
  name.vb: Read(Of T)(UInt64)
- uid: System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  commentId: M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  id: ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  parent: System.Runtime.InteropServices.SafeBuffer
  langs:
  - csharp
  - vb
  name: ReadArray<T>(UInt64, T[], Int32, Int32)
  nameWithType: SafeBuffer.ReadArray<T>(UInt64, T[], Int32, Int32)
  fullName: System.Runtime.InteropServices.SafeBuffer.ReadArray<T>(System.UInt64, T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 717
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: 'public void ReadArray<T>(ulong byteOffset, T[] array, int index, int count)where T : struct'
    content.vb: Public Sub ReadArray(Of T As Structure)(byteOffset As ULong, array As T(), index As Integer, count As Integer)
    parameters:
    - id: byteOffset
      type: System.UInt64
    - id: array
      type: '{T}[]'
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    typeParameters:
    - id: T
  nameWithType.vb: SafeBuffer.ReadArray(Of T)(UInt64, T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.InteropServices.SafeBuffer.ReadArray(Of T)(System.UInt64, T(), System.Int32, System.Int32)
  name.vb: ReadArray(Of T)(UInt64, T(), Int32, Int32)
- uid: System.Runtime.InteropServices.SafeBuffer.ReleasePointer
  commentId: M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer
  id: ReleasePointer
  parent: System.Runtime.InteropServices.SafeBuffer
  langs:
  - csharp
  - vb
  name: ReleasePointer()
  nameWithType: SafeBuffer.ReleasePointer()
  fullName: System.Runtime.InteropServices.SafeBuffer.ReleasePointer()
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReleasePointer
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 719
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: public void ReleasePointer()
    content.vb: Public Sub ReleasePointer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)
  commentId: M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)
  id: Write``1(System.UInt64,``0)
  parent: System.Runtime.InteropServices.SafeBuffer
  langs:
  - csharp
  - vb
  name: Write<T>(UInt64, T)
  nameWithType: SafeBuffer.Write<T>(UInt64, T)
  fullName: System.Runtime.InteropServices.SafeBuffer.Write<T>(System.UInt64, T)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 720
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: 'public void Write<T>(ulong byteOffset, T value)where T : struct'
    content.vb: Public Sub Write(Of T As Structure)(byteOffset As ULong, value As T)
    parameters:
    - id: byteOffset
      type: System.UInt64
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
  nameWithType.vb: SafeBuffer.Write(Of T)(UInt64, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.InteropServices.SafeBuffer.Write(Of T)(System.UInt64, T)
  name.vb: Write(Of T)(UInt64, T)
- uid: System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  commentId: M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  id: WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  parent: System.Runtime.InteropServices.SafeBuffer
  langs:
  - csharp
  - vb
  name: WriteArray<T>(UInt64, T[], Int32, Int32)
  nameWithType: SafeBuffer.WriteArray<T>(UInt64, T[], Int32, Int32)
  fullName: System.Runtime.InteropServices.SafeBuffer.WriteArray<T>(System.UInt64, T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteArray
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 722
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  syntax:
    content: 'public void WriteArray<T>(ulong byteOffset, T[] array, int index, int count)where T : struct'
    content.vb: Public Sub WriteArray(Of T As Structure)(byteOffset As ULong, array As T(), index As Integer, count As Integer)
    parameters:
    - id: byteOffset
      type: System.UInt64
    - id: array
      type: '{T}[]'
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    typeParameters:
    - id: T
  nameWithType.vb: SafeBuffer.WriteArray(Of T)(UInt64, T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.InteropServices.SafeBuffer.WriteArray(Of T)(System.UInt64, T(), System.Int32, System.Int32)
  name.vb: WriteArray(Of T)(UInt64, T(), Int32, Int32)
references:
- uid: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Byte*
  name: Byte*
  nameWithType: Byte*
  fullName: System.Byte*
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: '{T}[]'
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullname.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
