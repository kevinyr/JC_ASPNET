items:
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  commentId: T:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  id: WindowsRuntimeMarshal
  parent: System.Runtime.InteropServices.WindowsRuntime
  children:
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  langs:
  - csharp
  - vb
  name: WindowsRuntimeMarshal
  nameWithType: WindowsRuntimeMarshal
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  type: Class
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WindowsRuntimeMarshal
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 58
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: 'public class WindowsRuntimeMarshal : object'
    content.vb: >-
      Public Class WindowsRuntimeMarshal
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  id: AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: AddEventHandler<T>(Func<T, EventRegistrationToken>, Action<EventRegistrationToken>, T)
  nameWithType: WindowsRuntimeMarshal.AddEventHandler<T>(Func<T, EventRegistrationToken>, Action<EventRegistrationToken>, T)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler<T>(System.Func<T, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>, System.Action<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>, T)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddEventHandler
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 60
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: public static void AddEventHandler<T>(Func<T, EventRegistrationToken> addMethod, Action<EventRegistrationToken> removeMethod, T handler)
    content.vb: Public Shared Sub AddEventHandler(Of T)(addMethod As Func(Of T, EventRegistrationToken), removeMethod As Action(Of EventRegistrationToken), handler As T)
    parameters:
    - id: addMethod
      type: System.Func{{T},System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
    - id: removeMethod
      type: System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
    - id: handler
      type: '{T}'
    typeParameters:
    - id: T
  nameWithType.vb: WindowsRuntimeMarshal.AddEventHandler(Of T)(Func(Of T, EventRegistrationToken), Action(Of EventRegistrationToken), T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler(Of T)(System.Func(Of T, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken), System.Action(Of System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken), T)
  name.vb: AddEventHandler(Of T)(Func(Of T, EventRegistrationToken), Action(Of EventRegistrationToken), T)
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  id: FreeHString(System.IntPtr)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: FreeHString(IntPtr)
  nameWithType: WindowsRuntimeMarshal.FreeHString(IntPtr)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FreeHString
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 62
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: public static void FreeHString(IntPtr ptr)
    content.vb: Public Shared Sub FreeHString(ptr As IntPtr)
    parameters:
    - id: ptr
      type: System.IntPtr
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)
  id: GetActivationFactory(System.Type)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: GetActivationFactory(Type)
  nameWithType: WindowsRuntimeMarshal.GetActivationFactory(Type)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetActivationFactory
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 64
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: public static IActivationFactory GetActivationFactory(Type type)
    content.vb: Public Shared Function GetActivationFactory(type As Type) As IActivationFactory
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)
  id: PtrToStringHString(System.IntPtr)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: PtrToStringHString(IntPtr)
  nameWithType: WindowsRuntimeMarshal.PtrToStringHString(IntPtr)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PtrToStringHString
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 66
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: public static string PtrToStringHString(IntPtr ptr)
    content.vb: Public Shared Function PtrToStringHString(ptr As IntPtr) As String
    parameters:
    - id: ptr
      type: System.IntPtr
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})
  id: RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: RemoveAllEventHandlers(Action<EventRegistrationToken>)
  nameWithType: WindowsRuntimeMarshal.RemoveAllEventHandlers(Action<EventRegistrationToken>)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAllEventHandlers
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 68
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: public static void RemoveAllEventHandlers(Action<EventRegistrationToken> removeMethod)
    content.vb: Public Shared Sub RemoveAllEventHandlers(removeMethod As Action(Of EventRegistrationToken))
    parameters:
    - id: removeMethod
      type: System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
  nameWithType.vb: WindowsRuntimeMarshal.RemoveAllEventHandlers(Action(Of EventRegistrationToken))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action(Of System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken))
  name.vb: RemoveAllEventHandlers(Action(Of EventRegistrationToken))
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  id: RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: RemoveEventHandler<T>(Action<EventRegistrationToken>, T)
  nameWithType: WindowsRuntimeMarshal.RemoveEventHandler<T>(Action<EventRegistrationToken>, T)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler<T>(System.Action<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>, T)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveEventHandler
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 70
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: public static void RemoveEventHandler<T>(Action<EventRegistrationToken> removeMethod, T handler)
    content.vb: Public Shared Sub RemoveEventHandler(Of T)(removeMethod As Action(Of EventRegistrationToken), handler As T)
    parameters:
    - id: removeMethod
      type: System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
    - id: handler
      type: '{T}'
    typeParameters:
    - id: T
  nameWithType.vb: WindowsRuntimeMarshal.RemoveEventHandler(Of T)(Action(Of EventRegistrationToken), T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler(Of T)(System.Action(Of System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken), T)
  name.vb: RemoveEventHandler(Of T)(Action(Of EventRegistrationToken), T)
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  id: StringToHString(System.String)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: StringToHString(String)
  nameWithType: WindowsRuntimeMarshal.StringToHString(String)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StringToHString
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 72
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: public static IntPtr StringToHString(string s)
    content.vb: Public Shared Function StringToHString(s As String) As IntPtr
    parameters:
    - id: s
      type: System.String
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Runtime.InteropServices.WindowsRuntime
  commentId: N:System.Runtime.InteropServices.WindowsRuntime
  isExternal: false
  name: System.Runtime.InteropServices.WindowsRuntime
  nameWithType: System.Runtime.InteropServices.WindowsRuntime
  fullName: System.Runtime.InteropServices.WindowsRuntime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func{{T},System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
  commentId: '!:System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}'
  definition: System.Func`2
  name: Func<T, EventRegistrationToken>
  nameWithType: Func<T, EventRegistrationToken>
  fullName: System.Func<T, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>
  nameWithType.vb: Func(Of T, EventRegistrationToken)
  fullname.vb: System.Func(Of T, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  name.vb: Func(Of T, EventRegistrationToken)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    name: EventRegistrationToken
    nameWithType: EventRegistrationToken
    fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    name: EventRegistrationToken
    nameWithType: EventRegistrationToken
    fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
  commentId: '!:System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}'
  definition: System.Action`1
  name: Action<EventRegistrationToken>
  nameWithType: Action<EventRegistrationToken>
  fullName: System.Action<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>
  nameWithType.vb: Action(Of EventRegistrationToken)
  fullname.vb: System.Action(Of System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  name.vb: Action(Of EventRegistrationToken)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    name: EventRegistrationToken
    nameWithType: EventRegistrationToken
    fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    name: EventRegistrationToken
    nameWithType: EventRegistrationToken
    fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: false
  name: Func<, >
  nameWithType: Func<, >
  fullName: System.Func<, >
  nameWithType.vb: Func(Of , )
  fullname.vb: System.Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: false
  name: Action<>
  nameWithType: Action<>
  fullName: System.Action<>
  nameWithType.vb: Action(Of )
  fullname.vb: System.Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
  commentId: T:System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
  parent: System.Runtime.InteropServices.WindowsRuntime
  isExternal: false
  name: IActivationFactory
  nameWithType: IActivationFactory
  fullName: System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
