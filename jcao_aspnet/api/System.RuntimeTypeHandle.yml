items:
- uid: System.RuntimeTypeHandle
  commentId: T:System.RuntimeTypeHandle
  id: RuntimeTypeHandle
  parent: System
  children:
  - System.RuntimeTypeHandle.Equals(System.Object)
  - System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle)
  - System.RuntimeTypeHandle.GetHashCode
  - System.RuntimeTypeHandle.op_Equality(System.Object,System.RuntimeTypeHandle)
  - System.RuntimeTypeHandle.op_Equality(System.RuntimeTypeHandle,System.Object)
  - System.RuntimeTypeHandle.op_Inequality(System.Object,System.RuntimeTypeHandle)
  - System.RuntimeTypeHandle.op_Inequality(System.RuntimeTypeHandle,System.Object)
  langs:
  - csharp
  - vb
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
  type: Struct
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RuntimeTypeHandle
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1385
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct RuntimeTypeHandle
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure RuntimeTypeHandle
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.RuntimeTypeHandle.Equals(System.Object)
  commentId: M:System.RuntimeTypeHandle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: RuntimeTypeHandle.Equals(Object)
  fullName: System.RuntimeTypeHandle.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1388
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle)
  commentId: M:System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle)
  id: Equals(System.RuntimeTypeHandle)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  - vb
  name: Equals(RuntimeTypeHandle)
  nameWithType: RuntimeTypeHandle.Equals(RuntimeTypeHandle)
  fullName: System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1389
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool Equals(RuntimeTypeHandle handle)
    content.vb: Public Function Equals(handle As RuntimeTypeHandle) As Boolean
    parameters:
    - id: handle
      type: System.RuntimeTypeHandle
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.RuntimeTypeHandle.GetHashCode
  commentId: M:System.RuntimeTypeHandle.GetHashCode
  id: GetHashCode
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RuntimeTypeHandle.GetHashCode()
  fullName: System.RuntimeTypeHandle.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1390
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.RuntimeTypeHandle.op_Equality(System.Object,System.RuntimeTypeHandle)
  commentId: M:System.RuntimeTypeHandle.op_Equality(System.Object,System.RuntimeTypeHandle)
  id: op_Equality(System.Object,System.RuntimeTypeHandle)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  - vb
  name: Equality(Object, RuntimeTypeHandle)
  nameWithType: RuntimeTypeHandle.Equality(Object, RuntimeTypeHandle)
  fullName: System.RuntimeTypeHandle.Equality(System.Object, System.RuntimeTypeHandle)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1391
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool operator ==(object left, RuntimeTypeHandle right)
    content.vb: Public Shared Operator =(left As Object, right As RuntimeTypeHandle) As Boolean
    parameters:
    - id: left
      type: System.Object
    - id: right
      type: System.RuntimeTypeHandle
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.RuntimeTypeHandle.op_Equality(System.RuntimeTypeHandle,System.Object)
  commentId: M:System.RuntimeTypeHandle.op_Equality(System.RuntimeTypeHandle,System.Object)
  id: op_Equality(System.RuntimeTypeHandle,System.Object)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  - vb
  name: Equality(RuntimeTypeHandle, Object)
  nameWithType: RuntimeTypeHandle.Equality(RuntimeTypeHandle, Object)
  fullName: System.RuntimeTypeHandle.Equality(System.RuntimeTypeHandle, System.Object)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1392
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool operator ==(RuntimeTypeHandle left, object right)
    content.vb: Public Shared Operator =(left As RuntimeTypeHandle, right As Object) As Boolean
    parameters:
    - id: left
      type: System.RuntimeTypeHandle
    - id: right
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.RuntimeTypeHandle.op_Inequality(System.Object,System.RuntimeTypeHandle)
  commentId: M:System.RuntimeTypeHandle.op_Inequality(System.Object,System.RuntimeTypeHandle)
  id: op_Inequality(System.Object,System.RuntimeTypeHandle)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  - vb
  name: Inequality(Object, RuntimeTypeHandle)
  nameWithType: RuntimeTypeHandle.Inequality(Object, RuntimeTypeHandle)
  fullName: System.RuntimeTypeHandle.Inequality(System.Object, System.RuntimeTypeHandle)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1393
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool operator !=(object left, RuntimeTypeHandle right)
    content.vb: Public Shared Operator <>(left As Object, right As RuntimeTypeHandle) As Boolean
    parameters:
    - id: left
      type: System.Object
    - id: right
      type: System.RuntimeTypeHandle
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.RuntimeTypeHandle.op_Inequality(System.RuntimeTypeHandle,System.Object)
  commentId: M:System.RuntimeTypeHandle.op_Inequality(System.RuntimeTypeHandle,System.Object)
  id: op_Inequality(System.RuntimeTypeHandle,System.Object)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  - vb
  name: Inequality(RuntimeTypeHandle, Object)
  nameWithType: RuntimeTypeHandle.Inequality(RuntimeTypeHandle, Object)
  fullName: System.RuntimeTypeHandle.Inequality(System.RuntimeTypeHandle, System.Object)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1394
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool operator !=(RuntimeTypeHandle left, object right)
    content.vb: Public Shared Operator <>(left As RuntimeTypeHandle, right As Object) As Boolean
    parameters:
    - id: left
      type: System.RuntimeTypeHandle
    - id: right
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.RuntimeTypeHandle
  commentId: T:System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
