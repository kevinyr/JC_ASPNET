items:
- uid: System.Security.AccessControl.DiscretionaryAcl
  commentId: T:System.Security.AccessControl.DiscretionaryAcl
  id: DiscretionaryAcl
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)
  - System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)
  - System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)
  - System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  langs:
  - csharp
  - vb
  name: DiscretionaryAcl
  nameWithType: DiscretionaryAcl
  fullName: System.Security.AccessControl.DiscretionaryAcl
  type: Class
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DiscretionaryAcl
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 244
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: 'public sealed class DiscretionaryAcl : CommonAcl, Collections.IEnumerable'
    content.vb: >-
      Public NotInheritable Class DiscretionaryAcl
          Inherits CommonAcl
          Implements Collections.IEnumerable
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAcl
  - System.Security.AccessControl.CommonAcl
  implements:
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Security.AccessControl.CommonAcl.BinaryLength
  - System.Security.AccessControl.CommonAcl.Count
  - System.Security.AccessControl.CommonAcl.IsCanonical
  - System.Security.AccessControl.CommonAcl.IsContainer
  - System.Security.AccessControl.CommonAcl.IsDS
  - System.Security.AccessControl.CommonAcl.Item(System.Int32)
  - System.Security.AccessControl.CommonAcl.Revision
  - System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - System.Security.AccessControl.GenericAcl.AclRevision
  - System.Security.AccessControl.GenericAcl.AclRevisionDS
  - System.Security.AccessControl.GenericAcl.MaxBinaryLength
  - System.Security.AccessControl.GenericAcl.IsSynchronized
  - System.Security.AccessControl.GenericAcl.SyncRoot
  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  - System.Security.AccessControl.GenericAcl.GetEnumerator
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)'
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: DiscretionaryAcl(Boolean, Boolean, Byte, Int32)
  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, Byte, Int32)
  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(System.Boolean, System.Boolean, System.Byte, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 246
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public DiscretionaryAcl(bool isContainer, bool isDS, byte revision, int capacity)
    content.vb: Public Sub New(isContainer As Boolean, isDS As Boolean, revision As Byte, capacity As Integer)
    parameters:
    - id: isContainer
      type: System.Boolean
    - id: isDS
      type: System.Boolean
    - id: revision
      type: System.Byte
    - id: capacity
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Int32)'
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: DiscretionaryAcl(Boolean, Boolean, Int32)
  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, Int32)
  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(System.Boolean, System.Boolean, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 247
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public DiscretionaryAcl(bool isContainer, bool isDS, int capacity)
    content.vb: Public Sub New(isContainer As Boolean, isDS As Boolean, capacity As Integer)
    parameters:
    - id: isContainer
      type: System.Boolean
    - id: isDS
      type: System.Boolean
    - id: capacity
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)
  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)'
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: DiscretionaryAcl(Boolean, Boolean, RawAcl)
  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, RawAcl)
  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(System.Boolean, System.Boolean, System.Security.AccessControl.RawAcl)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 248
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public DiscretionaryAcl(bool isContainer, bool isDS, RawAcl rawAcl)
    content.vb: Public Sub New(isContainer As Boolean, isDS As Boolean, rawAcl As RawAcl)
    parameters:
    - id: isContainer
      type: System.Boolean
    - id: isDS
      type: System.Boolean
    - id: rawAcl
      type: System.Security.AccessControl.RawAcl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: AddAccess(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAccess
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 249
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public void AddAccess(AccessControlType accessType, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Public Sub AddAccess(accessType As AccessControlType, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    - id: accessMask
      type: System.Int32
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: AddAccess(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAccess
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 250
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public void AddAccess(AccessControlType accessType, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Sub AddAccess(accessType As AccessControlType, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid)
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    - id: accessMask
      type: System.Int32
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
    - id: objectType
      type: System.Guid
    - id: inheritedObjectType
      type: System.Guid
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  id: AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: AddAccess(AccessControlType, Principal.SecurityIdentifier, ObjectAccessRule)
  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType, Principal.SecurityIdentifier, ObjectAccessRule)
  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAccessRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAccess
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 251
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public void AddAccess(AccessControlType accessType, Principal.SecurityIdentifier sid, ObjectAccessRule rule)
    content.vb: Public Sub AddAccess(accessType As AccessControlType, sid As Principal.SecurityIdentifier, rule As ObjectAccessRule)
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: RemoveAccess(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccess
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 252
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public bool RemoveAccess(AccessControlType accessType, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Public Function RemoveAccess(accessType As AccessControlType, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags) As Boolean
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    - id: accessMask
      type: System.Int32
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: RemoveAccess(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccess
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 253
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public bool RemoveAccess(AccessControlType accessType, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Function RemoveAccess(accessType As AccessControlType, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid) As Boolean
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    - id: accessMask
      type: System.Int32
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
    - id: objectType
      type: System.Guid
    - id: inheritedObjectType
      type: System.Guid
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  id: RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: RemoveAccess(AccessControlType, Principal.SecurityIdentifier, ObjectAccessRule)
  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType, Principal.SecurityIdentifier, ObjectAccessRule)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAccessRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccess
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 254
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public bool RemoveAccess(AccessControlType accessType, Principal.SecurityIdentifier sid, ObjectAccessRule rule)
    content.vb: Public Function RemoveAccess(accessType As AccessControlType, sid As Principal.SecurityIdentifier, rule As ObjectAccessRule) As Boolean
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: RemoveAccessSpecific(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 255
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public void RemoveAccessSpecific(AccessControlType accessType, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Public Sub RemoveAccessSpecific(accessType As AccessControlType, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    - id: accessMask
      type: System.Int32
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: RemoveAccessSpecific(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 256
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public void RemoveAccessSpecific(AccessControlType accessType, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Sub RemoveAccessSpecific(accessType As AccessControlType, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid)
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    - id: accessMask
      type: System.Int32
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
    - id: objectType
      type: System.Guid
    - id: inheritedObjectType
      type: System.Guid
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  id: RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: RemoveAccessSpecific(AccessControlType, Principal.SecurityIdentifier, ObjectAccessRule)
  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, Principal.SecurityIdentifier, ObjectAccessRule)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAccessRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 257
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public void RemoveAccessSpecific(AccessControlType accessType, Principal.SecurityIdentifier sid, ObjectAccessRule rule)
    content.vb: Public Sub RemoveAccessSpecific(accessType As AccessControlType, sid As Principal.SecurityIdentifier, rule As ObjectAccessRule)
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: SetAccess(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAccess
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 258
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public void SetAccess(AccessControlType accessType, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Public Sub SetAccess(accessType As AccessControlType, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    - id: accessMask
      type: System.Int32
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: SetAccess(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAccess
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 259
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public void SetAccess(AccessControlType accessType, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Sub SetAccess(accessType As AccessControlType, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid)
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    - id: accessMask
      type: System.Int32
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
    - id: objectType
      type: System.Guid
    - id: inheritedObjectType
      type: System.Guid
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  commentId: M:System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  id: SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  - vb
  name: SetAccess(AccessControlType, Principal.SecurityIdentifier, ObjectAccessRule)
  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType, Principal.SecurityIdentifier, ObjectAccessRule)
  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAccessRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAccess
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 260
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public void SetAccess(AccessControlType accessType, Principal.SecurityIdentifier sid, ObjectAccessRule rule)
    content.vb: Public Sub SetAccess(accessType As AccessControlType, sid As Principal.SecurityIdentifier, rule As ObjectAccessRule)
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.AccessControl
  commentId: N:System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  nameWithType: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.AccessControl.GenericAcl
  commentId: T:System.Security.AccessControl.GenericAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: GenericAcl
  nameWithType: GenericAcl
  fullName: System.Security.AccessControl.GenericAcl
- uid: System.Security.AccessControl.CommonAcl
  commentId: T:System.Security.AccessControl.CommonAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: CommonAcl
  nameWithType: CommonAcl
  fullName: System.Security.AccessControl.CommonAcl
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  nameWithType: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  commentId: P:System.Security.AccessControl.CommonAcl.BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
- uid: System.Security.AccessControl.CommonAcl.Count
  commentId: P:System.Security.AccessControl.CommonAcl.Count
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  nameWithType: CommonAcl.Count
  fullName: System.Security.AccessControl.CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  commentId: P:System.Security.AccessControl.CommonAcl.IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  commentId: P:System.Security.AccessControl.CommonAcl.IsContainer
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS
  commentId: P:System.Security.AccessControl.CommonAcl.IsDS
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  nameWithType: CommonAcl.IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  commentId: P:System.Security.AccessControl.CommonAcl.Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: true
  name: Item[Int32]
  nameWithType: CommonAcl.Item[Int32]
  fullName: System.Security.AccessControl.CommonAcl.Item[System.Int32]
  nameWithType.vb: CommonAcl.Item(Int32)
  fullname.vb: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
    name: Item
    nameWithType: CommonAcl.Item
    fullName: System.Security.AccessControl.CommonAcl.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
    name: Item
    nameWithType: CommonAcl.Item
    fullName: System.Security.AccessControl.CommonAcl.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.CommonAcl.Revision
  commentId: P:System.Security.AccessControl.CommonAcl.Revision
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  nameWithType: CommonAcl.Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  commentId: M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: true
  name: GetBinaryForm(Byte[], Int32)
  nameWithType: CommonAcl.GetBinaryForm(Byte[], Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[], System.Int32)
  nameWithType.vb: CommonAcl.GetBinaryForm(Byte(), Int32)
  fullname.vb: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte(), System.Int32)
  name.vb: GetBinaryForm(Byte(), Int32)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
    name: GetBinaryForm
    nameWithType: CommonAcl.GetBinaryForm
    fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
    name: GetBinaryForm
    nameWithType: CommonAcl.GetBinaryForm
    fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  commentId: M:System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: true
  name: Purge(Principal.SecurityIdentifier)
  nameWithType: CommonAcl.Purge(Principal.SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
    name: Purge
    nameWithType: CommonAcl.Purge
    fullName: System.Security.AccessControl.CommonAcl.Purge
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.SecurityIdentifier
    name: Principal.SecurityIdentifier
    nameWithType: Principal.SecurityIdentifier
    fullName: System.Security.Principal.SecurityIdentifier
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
    name: Purge
    nameWithType: CommonAcl.Purge
    fullName: System.Security.AccessControl.CommonAcl.Purge
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.SecurityIdentifier
    name: Principal.SecurityIdentifier
    nameWithType: Principal.SecurityIdentifier
    fullName: System.Security.Principal.SecurityIdentifier
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  commentId: M:System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces()
  nameWithType: CommonAcl.RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
  spec.csharp:
  - uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
    name: RemoveInheritedAces
    nameWithType: CommonAcl.RemoveInheritedAces
    fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
    name: RemoveInheritedAces
    nameWithType: CommonAcl.RemoveInheritedAces
    fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.GenericAcl.AclRevision
  commentId: F:System.Security.AccessControl.GenericAcl.AclRevision
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: AclRevision
  nameWithType: GenericAcl.AclRevision
  fullName: System.Security.AccessControl.GenericAcl.AclRevision
- uid: System.Security.AccessControl.GenericAcl.AclRevisionDS
  commentId: F:System.Security.AccessControl.GenericAcl.AclRevisionDS
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: AclRevisionDS
  nameWithType: GenericAcl.AclRevisionDS
  fullName: System.Security.AccessControl.GenericAcl.AclRevisionDS
- uid: System.Security.AccessControl.GenericAcl.MaxBinaryLength
  commentId: F:System.Security.AccessControl.GenericAcl.MaxBinaryLength
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: MaxBinaryLength
  nameWithType: GenericAcl.MaxBinaryLength
  fullName: System.Security.AccessControl.GenericAcl.MaxBinaryLength
- uid: System.Security.AccessControl.GenericAcl.IsSynchronized
  commentId: P:System.Security.AccessControl.GenericAcl.IsSynchronized
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: IsSynchronized
  nameWithType: GenericAcl.IsSynchronized
  fullName: System.Security.AccessControl.GenericAcl.IsSynchronized
- uid: System.Security.AccessControl.GenericAcl.SyncRoot
  commentId: P:System.Security.AccessControl.GenericAcl.SyncRoot
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: SyncRoot
  nameWithType: GenericAcl.SyncRoot
  fullName: System.Security.AccessControl.GenericAcl.SyncRoot
- uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  commentId: M:System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  parent: System.Security.AccessControl.GenericAcl
  isExternal: true
  name: CopyTo(GenericAce[], Int32)
  nameWithType: GenericAcl.CopyTo(GenericAce[], Int32)
  fullName: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[], System.Int32)
  nameWithType.vb: GenericAcl.CopyTo(GenericAce(), Int32)
  fullname.vb: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce(), System.Int32)
  name.vb: CopyTo(GenericAce(), Int32)
  spec.csharp:
  - uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
    name: CopyTo
    nameWithType: GenericAcl.CopyTo
    fullName: System.Security.AccessControl.GenericAcl.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.GenericAce
    name: GenericAce
    nameWithType: GenericAce
    fullName: System.Security.AccessControl.GenericAce
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
    name: CopyTo
    nameWithType: GenericAcl.CopyTo
    fullName: System.Security.AccessControl.GenericAcl.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.GenericAce
    name: GenericAce
    nameWithType: GenericAce
    fullName: System.Security.AccessControl.GenericAce
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.GenericAcl.GetEnumerator
  commentId: M:System.Security.AccessControl.GenericAcl.GetEnumerator
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: GetEnumerator()
  nameWithType: GenericAcl.GetEnumerator()
  fullName: System.Security.AccessControl.GenericAcl.GetEnumerator()
  spec.csharp:
  - uid: System.Security.AccessControl.GenericAcl.GetEnumerator
    name: GetEnumerator
    nameWithType: GenericAcl.GetEnumerator
    fullName: System.Security.AccessControl.GenericAcl.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.GenericAcl.GetEnumerator
    name: GetEnumerator
    nameWithType: GenericAcl.GetEnumerator
    fullName: System.Security.AccessControl.GenericAcl.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.RawAcl
  commentId: T:System.Security.AccessControl.RawAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: RawAcl
  nameWithType: RawAcl
  fullName: System.Security.AccessControl.RawAcl
- uid: System.Security.AccessControl.AccessControlType
  commentId: T:System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.Principal.SecurityIdentifier
  commentId: T:System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.InheritanceFlags
  commentId: T:System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  commentId: T:System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.Principal
  commentId: N:System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  nameWithType: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.AccessControl.ObjectAceFlags
  commentId: T:System.Security.AccessControl.ObjectAceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAceFlags
  nameWithType: ObjectAceFlags
  fullName: System.Security.AccessControl.ObjectAceFlags
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.AccessControl.ObjectAccessRule
  commentId: T:System.Security.AccessControl.ObjectAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAccessRule
  nameWithType: ObjectAccessRule
  fullName: System.Security.AccessControl.ObjectAccessRule
