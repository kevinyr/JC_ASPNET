items:
- uid: System.Security.AccessControl.EventWaitHandleAccessRule
  id: EventWaitHandleAccessRule
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights
  langs:
  - csharp
  - vb
  name: EventWaitHandleAccessRule
  fullName: System.Security.AccessControl.EventWaitHandleAccessRule
  type: Class
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 7
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.
  syntax:
    content: 'public sealed class EventWaitHandleAccessRule : AccessRule'
    content.vb: Public NotInheritable Class EventWaitHandleAccessRule Inherits AccessRule
  inheritance:
  - System.Object
- uid: System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.EventWaitHandleAccessRule
  langs:
  - csharp
  - vb
  name: EventWaitHandleAccessRule(Principal.IdentityReference, EventWaitHandleRights, AccessControlType)
  fullName: System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleAccessRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.EventWaitHandleRights, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 10
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.EventWaitHandleAccessRule" data-throw-if-not-resolved="false"></xref> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.
  syntax:
    content: public EventWaitHandleAccessRule(Principal.IdentityReference identity, EventWaitHandleRights eventRights, AccessControlType type)
    content.vb: Public Sub New(identity As Principal.IdentityReference, eventRights As EventWaitHandleRights, type As AccessControlType)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The user or group the rule applies to. Must be of type <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref> or a type such as <xref href="System.Security.Principal.NTAccount" data-throw-if-not-resolved="false"></xref> that can be converted to type <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref>.
    - id: eventRights
      type: System.Security.AccessControl.EventWaitHandleRights
      description: A bitwise combination of <xref href="System.Security.AccessControl.EventWaitHandleRights" data-throw-if-not-resolved="false"></xref> values specifying the rights allowed or denied.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> values specifying whether the rights are allowed or denied.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*eventRights* specifies an invalid value.-or-*type* specifies an invalid value.'
  - type: System.ArgumentNullException
    description: '*identity* is null.-or-*eventRights* is zero.'
  - type: System.ArgumentException
    description: '*identity* is neither of type <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref> nor of a type such as <xref href="System.Security.Principal.NTAccount" data-throw-if-not-resolved="false"></xref> that can be converted to type <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref>.'
- uid: System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.EventWaitHandleAccessRule
  langs:
  - csharp
  - vb
  name: EventWaitHandleAccessRule(String, EventWaitHandleRights, AccessControlType)
  fullName: System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleAccessRule(System.String, System.Security.AccessControl.EventWaitHandleRights, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 11
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.EventWaitHandleAccessRule" data-throw-if-not-resolved="false"></xref> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.
  syntax:
    content: public EventWaitHandleAccessRule(string identity, EventWaitHandleRights eventRights, AccessControlType type)
    content.vb: Public Sub New(identity As String, eventRights As EventWaitHandleRights, type As AccessControlType)
    parameters:
    - id: identity
      type: System.String
      description: The name of the user or group the rule applies to.
    - id: eventRights
      type: System.Security.AccessControl.EventWaitHandleRights
      description: A bitwise combination of <xref href="System.Security.AccessControl.EventWaitHandleRights" data-throw-if-not-resolved="false"></xref> values specifying the rights allowed or denied.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> values specifying whether the rights are allowed or denied.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*eventRights* specifies an invalid value.-or-*type* specifies an invalid value.'
  - type: System.ArgumentNullException
    description: '*eventRights* is zero.'
  - type: System.ArgumentException
    description: '*identity* is null.-or-*identity* is a zero-length string.-or-*identity* is longer than 512 characters.'
- uid: System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights
  id: EventWaitHandleRights
  parent: System.Security.AccessControl.EventWaitHandleAccessRule
  langs:
  - csharp
  - vb
  name: EventWaitHandleRights
  fullName: System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights
  type: Property
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 12
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the rights allowed or denied by the access rule.
  syntax:
    content: public EventWaitHandleRights EventWaitHandleRights { get; }
    content.vb: Public ReadOnly Property EventWaitHandleRights As EventWaitHandleRights
    parameters: []
    return:
      type: System.Security.AccessControl.EventWaitHandleRights
      description: A bitwise combination of <xref href="System.Security.AccessControl.EventWaitHandleRights" data-throw-if-not-resolved="false"></xref> values indicating the rights allowed or denied by the access rule.
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: Principal.IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.EventWaitHandleRights
  parent: System.Security.AccessControl
  isExternal: false
  name: EventWaitHandleRights
  fullName: System.Security.AccessControl.EventWaitHandleRights
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
