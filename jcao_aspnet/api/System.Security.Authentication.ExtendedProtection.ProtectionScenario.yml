items:
- uid: System.Security.Authentication.ExtendedProtection.ProtectionScenario
  id: ProtectionScenario
  parent: System.Security.Authentication.ExtendedProtection
  children:
  - System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected
  - System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy
  name: ProtectionScenario
  fullName: System.Security.Authentication.ExtendedProtection.ProtectionScenario
  type: Enum
  source:
    remote: &o0
      path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ProtectionScenario.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ProtectionScenario.cs
    startLine: 6
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: The <xref href="System.Security.Authentication.ExtendedProtection.ProtectionScenario" data-throw-if-not-resolved="false"></xref> enumeration specifies the protection scenario enforced by the policy.
  syntax:
    content: 'public enum ProtectionScenario : int'
    content.vb: Public Enum ProtectionScenario As Integer
- uid: System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected
  id: TransportSelected
  parent: System.Security.Authentication.ExtendedProtection.ProtectionScenario
  name: TransportSelected
  fullName: System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected
  type: Field
  source:
    remote: *o0
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ProtectionScenario.cs
    startLine: 8
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: The transport will select between a secure and standard protection scenario depending on the type of channel used. For secure protection, integrated Windows authentication is wrapped in a secure channel and has an exactly matching channel binding token with no Service Provider Name (SPN) validation. For standard protection, integrated Windows authentication is optionally wrapped in a secure channel with an optional channel binding token and SPN validation is required. So if the request comes through a secure channel, the channel binding token (CBT) is checked, otherwise the SPN is checked.
  syntax:
    content: TransportSelected = null
    content.vb: TransportSelected = Nothing
- uid: System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy
  id: TrustedProxy
  parent: System.Security.Authentication.ExtendedProtection.ProtectionScenario
  name: TrustedProxy
  fullName: System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy
  type: Field
  source:
    remote: *o0
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ProtectionScenario.cs
    startLine: 9
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: Integrated Windows authentication is wrapped in a secure channel terminated by a trusted proxy and has a channel binding token with SPN validation required. This requires the presence of a CBT, but the CBT is not checked while the SPN is checked.
  syntax:
    content: TrustedProxy = null
    content.vb: TrustedProxy = Nothing
references:
- uid: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: System.Security.Authentication.ExtendedProtection
  fullName: System.Security.Authentication.ExtendedProtection
