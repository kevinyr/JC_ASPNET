items:
- uid: System.Security.Cryptography.CngAlgorithmGroup
  commentId: T:System.Security.Cryptography.CngAlgorithmGroup
  id: CngAlgorithmGroup
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  - System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  - System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  - System.Security.Cryptography.CngAlgorithmGroup.Dsa
  - System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  - System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  - System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.Rsa
  - System.Security.Cryptography.CngAlgorithmGroup.ToString
  langs:
  - csharp
  - vb
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CngAlgorithmGroup
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 58
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: 'public sealed class CngAlgorithmGroup : IEquatable<CngAlgorithmGroup>'
    content.vb: >-
      Public NotInheritable Class CngAlgorithmGroup
          Inherits IEquatable(Of CngAlgorithmGroup)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: CngAlgorithmGroup(String)
  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.CngAlgorithmGroup(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 60
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public CngAlgorithmGroup(string algorithmGroup)
    content.vb: Public Sub New(algorithmGroup As String)
    parameters:
    - id: algorithmGroup
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  id: AlgorithmGroup
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: AlgorithmGroup
  nameWithType: CngAlgorithmGroup.AlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AlgorithmGroup
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 61
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public string AlgorithmGroup { get; }
    content.vb: Public ReadOnly Property AlgorithmGroup As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  id: DiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: DiffieHellman
  nameWithType: CngAlgorithmGroup.DiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DiffieHellman
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 62
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngAlgorithmGroup DiffieHellman { get; }
    content.vb: Public Shared ReadOnly Property DiffieHellman As CngAlgorithmGroup
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.Dsa
  id: Dsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: Dsa
  nameWithType: CngAlgorithmGroup.Dsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dsa
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 63
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngAlgorithmGroup Dsa { get; }
    content.vb: Public Shared ReadOnly Property Dsa As CngAlgorithmGroup
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  id: ECDiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: ECDiffieHellman
  nameWithType: CngAlgorithmGroup.ECDiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ECDiffieHellman
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 64
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngAlgorithmGroup ECDiffieHellman { get; }
    content.vb: Public Shared ReadOnly Property ECDiffieHellman As CngAlgorithmGroup
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  id: ECDsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: ECDsa
  nameWithType: CngAlgorithmGroup.ECDsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ECDsa
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 65
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngAlgorithmGroup ECDsa { get; }
    content.vb: Public Shared ReadOnly Property ECDsa As CngAlgorithmGroup
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.Rsa
  id: Rsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: Rsa
  nameWithType: CngAlgorithmGroup.Rsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Rsa
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 66
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngAlgorithmGroup Rsa { get; }
    content.vb: Public Shared ReadOnly Property Rsa As CngAlgorithmGroup
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: CngAlgorithmGroup.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 67
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  id: Equals(System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: Equals(CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 68
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public bool Equals(CngAlgorithmGroup other)
    content.vb: Public Function Equals(other As CngAlgorithmGroup) As Boolean
    parameters:
    - id: other
      type: System.Security.Cryptography.CngAlgorithmGroup
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CngAlgorithmGroup.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 69
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  id: op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: Equality(CngAlgorithmGroup, CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.Equality(CngAlgorithmGroup, CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equality(System.Security.Cryptography.CngAlgorithmGroup, System.Security.Cryptography.CngAlgorithmGroup)
  type: Operator
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 70
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static bool operator ==(CngAlgorithmGroup left, CngAlgorithmGroup right)
    content.vb: Public Shared Operator =(left As CngAlgorithmGroup, right As CngAlgorithmGroup) As Boolean
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithmGroup
    - id: right
      type: System.Security.Cryptography.CngAlgorithmGroup
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  id: op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: Inequality(CngAlgorithmGroup, CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.Inequality(CngAlgorithmGroup, CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Inequality(System.Security.Cryptography.CngAlgorithmGroup, System.Security.Cryptography.CngAlgorithmGroup)
  type: Operator
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 71
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static bool operator !=(CngAlgorithmGroup left, CngAlgorithmGroup right)
    content.vb: Public Shared Operator <>(left As CngAlgorithmGroup, right As CngAlgorithmGroup) As Boolean
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithmGroup
    - id: right
      type: System.Security.Cryptography.CngAlgorithmGroup
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.ToString
  id: ToString
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CngAlgorithmGroup.ToString()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ToString()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 72
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngAlgorithmGroup
  commentId: T:System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
