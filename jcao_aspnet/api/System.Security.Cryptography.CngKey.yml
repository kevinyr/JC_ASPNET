items:
- uid: System.Security.Cryptography.CngKey
  commentId: T:System.Security.Cryptography.CngKey
  id: CngKey
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.CngKey.Algorithm
  - System.Security.Cryptography.CngKey.AlgorithmGroup
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  - System.Security.Cryptography.CngKey.Delete
  - System.Security.Cryptography.CngKey.Dispose
  - System.Security.Cryptography.CngKey.Exists(System.String)
  - System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKey.ExportPolicy
  - System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngKey.Handle
  - System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.IsEphemeral
  - System.Security.Cryptography.CngKey.IsMachineKey
  - System.Security.Cryptography.CngKey.KeyName
  - System.Security.Cryptography.CngKey.KeySize
  - System.Security.Cryptography.CngKey.KeyUsage
  - System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  - System.Security.Cryptography.CngKey.Open(System.String)
  - System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.CngKey.ParentWindowHandle
  - System.Security.Cryptography.CngKey.Provider
  - System.Security.Cryptography.CngKey.ProviderHandle
  - System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngKey.UIPolicy
  - System.Security.Cryptography.CngKey.UniqueName
  langs:
  - csharp
  - vb
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CngKey
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 83
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: 'public sealed class CngKey : IDisposable'
    content.vb: >-
      Public NotInheritable Class CngKey
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.CngKey.Algorithm
  commentId: P:System.Security.Cryptography.CngKey.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Algorithm
  nameWithType: CngKey.Algorithm
  fullName: System.Security.Cryptography.CngKey.Algorithm
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Algorithm
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 86
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public CngAlgorithm Algorithm { get; }
    content.vb: Public ReadOnly Property Algorithm As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.AlgorithmGroup
  commentId: P:System.Security.Cryptography.CngKey.AlgorithmGroup
  id: AlgorithmGroup
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: AlgorithmGroup
  nameWithType: CngKey.AlgorithmGroup
  fullName: System.Security.Cryptography.CngKey.AlgorithmGroup
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AlgorithmGroup
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 87
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public CngAlgorithmGroup AlgorithmGroup { get; }
    content.vb: Public ReadOnly Property AlgorithmGroup As CngAlgorithmGroup
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.ExportPolicy
  commentId: P:System.Security.Cryptography.CngKey.ExportPolicy
  id: ExportPolicy
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: ExportPolicy
  nameWithType: CngKey.ExportPolicy
  fullName: System.Security.Cryptography.CngKey.ExportPolicy
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExportPolicy
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 88
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public CngExportPolicies ExportPolicy { get; }
    content.vb: Public ReadOnly Property ExportPolicy As CngExportPolicies
    parameters: []
    return:
      type: System.Security.Cryptography.CngExportPolicies
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.Handle
  commentId: P:System.Security.Cryptography.CngKey.Handle
  id: Handle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: CngKey.Handle
  fullName: System.Security.Cryptography.CngKey.Handle
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Handle
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 89
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public SafeNCryptKeyHandle Handle { get; }
    content.vb: Public ReadOnly Property Handle As SafeNCryptKeyHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.IsEphemeral
  commentId: P:System.Security.Cryptography.CngKey.IsEphemeral
  id: IsEphemeral
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: IsEphemeral
  nameWithType: CngKey.IsEphemeral
  fullName: System.Security.Cryptography.CngKey.IsEphemeral
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEphemeral
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 90
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public bool IsEphemeral { get; }
    content.vb: Public ReadOnly Property IsEphemeral As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.IsMachineKey
  commentId: P:System.Security.Cryptography.CngKey.IsMachineKey
  id: IsMachineKey
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: IsMachineKey
  nameWithType: CngKey.IsMachineKey
  fullName: System.Security.Cryptography.CngKey.IsMachineKey
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsMachineKey
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 91
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public bool IsMachineKey { get; }
    content.vb: Public ReadOnly Property IsMachineKey As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.KeyName
  commentId: P:System.Security.Cryptography.CngKey.KeyName
  id: KeyName
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: KeyName
  nameWithType: CngKey.KeyName
  fullName: System.Security.Cryptography.CngKey.KeyName
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeyName
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 92
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public string KeyName { get; }
    content.vb: Public ReadOnly Property KeyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.KeySize
  commentId: P:System.Security.Cryptography.CngKey.KeySize
  id: KeySize
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: KeySize
  nameWithType: CngKey.KeySize
  fullName: System.Security.Cryptography.CngKey.KeySize
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeySize
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 93
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public int KeySize { get; }
    content.vb: Public ReadOnly Property KeySize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.KeyUsage
  commentId: P:System.Security.Cryptography.CngKey.KeyUsage
  id: KeyUsage
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: KeyUsage
  nameWithType: CngKey.KeyUsage
  fullName: System.Security.Cryptography.CngKey.KeyUsage
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeyUsage
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 94
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public CngKeyUsages KeyUsage { get; }
    content.vb: Public ReadOnly Property KeyUsage As CngKeyUsages
    parameters: []
    return:
      type: System.Security.Cryptography.CngKeyUsages
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.ParentWindowHandle
  commentId: P:System.Security.Cryptography.CngKey.ParentWindowHandle
  id: ParentWindowHandle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: ParentWindowHandle
  nameWithType: CngKey.ParentWindowHandle
  fullName: System.Security.Cryptography.CngKey.ParentWindowHandle
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParentWindowHandle
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 95
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public IntPtr ParentWindowHandle { get; set; }
    content.vb: Public Property ParentWindowHandle As IntPtr
    parameters: []
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngKey.Provider
  commentId: P:System.Security.Cryptography.CngKey.Provider
  id: Provider
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: CngKey.Provider
  fullName: System.Security.Cryptography.CngKey.Provider
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Provider
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 96
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public CngProvider Provider { get; }
    content.vb: Public ReadOnly Property Provider As CngProvider
    parameters: []
    return:
      type: System.Security.Cryptography.CngProvider
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.ProviderHandle
  commentId: P:System.Security.Cryptography.CngKey.ProviderHandle
  id: ProviderHandle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: ProviderHandle
  nameWithType: CngKey.ProviderHandle
  fullName: System.Security.Cryptography.CngKey.ProviderHandle
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProviderHandle
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 97
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public SafeNCryptProviderHandle ProviderHandle { get; }
    content.vb: Public ReadOnly Property ProviderHandle As SafeNCryptProviderHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.UIPolicy
  commentId: P:System.Security.Cryptography.CngKey.UIPolicy
  id: UIPolicy
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: UIPolicy
  nameWithType: CngKey.UIPolicy
  fullName: System.Security.Cryptography.CngKey.UIPolicy
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UIPolicy
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 98
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public CngUIPolicy UIPolicy { get; }
    content.vb: Public ReadOnly Property UIPolicy As CngUIPolicy
    parameters: []
    return:
      type: System.Security.Cryptography.CngUIPolicy
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.UniqueName
  commentId: P:System.Security.Cryptography.CngKey.UniqueName
  id: UniqueName
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: UniqueName
  nameWithType: CngKey.UniqueName
  fullName: System.Security.Cryptography.CngKey.UniqueName
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UniqueName
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 99
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public string UniqueName { get; }
    content.vb: Public ReadOnly Property UniqueName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  commentId: M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  id: Create(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Create(CngAlgorithm)
  nameWithType: CngKey.Create(CngAlgorithm)
  fullName: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 100
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngKey Create(CngAlgorithm algorithm)
    content.vb: Public Shared Function Create(algorithm As CngAlgorithm) As CngKey
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
    return:
      type: System.Security.Cryptography.CngKey
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  commentId: M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  id: Create(System.Security.Cryptography.CngAlgorithm,System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Create(CngAlgorithm, String)
  nameWithType: CngKey.Create(CngAlgorithm, String)
  fullName: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm, System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 101
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngKey Create(CngAlgorithm algorithm, string keyName)
    content.vb: Public Shared Function Create(algorithm As CngAlgorithm, keyName As String) As CngKey
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
    - id: keyName
      type: System.String
    return:
      type: System.Security.Cryptography.CngKey
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  commentId: M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  id: Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Create(CngAlgorithm, String, CngKeyCreationParameters)
  nameWithType: CngKey.Create(CngAlgorithm, String, CngKeyCreationParameters)
  fullName: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm, System.String, System.Security.Cryptography.CngKeyCreationParameters)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 102
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngKey Create(CngAlgorithm algorithm, string keyName, CngKeyCreationParameters creationParameters)
    content.vb: Public Shared Function Create(algorithm As CngAlgorithm, keyName As String, creationParameters As CngKeyCreationParameters) As CngKey
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
    - id: keyName
      type: System.String
    - id: creationParameters
      type: System.Security.Cryptography.CngKeyCreationParameters
    return:
      type: System.Security.Cryptography.CngKey
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Delete
  commentId: M:System.Security.Cryptography.CngKey.Delete
  id: Delete
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: CngKey.Delete()
  fullName: System.Security.Cryptography.CngKey.Delete()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Delete
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 103
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public void Delete()
    content.vb: Public Sub Delete
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngKey.Dispose
  commentId: M:System.Security.Cryptography.CngKey.Dispose
  id: Dispose
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: CngKey.Dispose()
  fullName: System.Security.Cryptography.CngKey.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 104
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngKey.Exists(System.String)
  commentId: M:System.Security.Cryptography.CngKey.Exists(System.String)
  id: Exists(System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Exists(String)
  nameWithType: CngKey.Exists(String)
  fullName: System.Security.Cryptography.CngKey.Exists(System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exists
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 105
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static bool Exists(string keyName)
    content.vb: Public Shared Function Exists(keyName As String) As Boolean
    parameters:
    - id: keyName
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  commentId: M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  id: Exists(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Exists(String, CngProvider)
  nameWithType: CngKey.Exists(String, CngProvider)
  fullName: System.Security.Cryptography.CngKey.Exists(System.String, System.Security.Cryptography.CngProvider)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exists
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 106
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static bool Exists(string keyName, CngProvider provider)
    content.vb: Public Shared Function Exists(keyName As String, provider As CngProvider) As Boolean
    parameters:
    - id: keyName
      type: System.String
    - id: provider
      type: System.Security.Cryptography.CngProvider
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  commentId: M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Exists(String, CngProvider, CngKeyOpenOptions)
  nameWithType: CngKey.Exists(String, CngProvider, CngKeyOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Exists(System.String, System.Security.Cryptography.CngProvider, System.Security.Cryptography.CngKeyOpenOptions)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exists
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 107
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static bool Exists(string keyName, CngProvider provider, CngKeyOpenOptions options)
    content.vb: Public Shared Function Exists(keyName As String, provider As CngProvider, options As CngKeyOpenOptions) As Boolean
    parameters:
    - id: keyName
      type: System.String
    - id: provider
      type: System.Security.Cryptography.CngProvider
    - id: options
      type: System.Security.Cryptography.CngKeyOpenOptions
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  commentId: M:System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  id: Export(System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Export(CngKeyBlobFormat)
  nameWithType: CngKey.Export(CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Export
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 108
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] Export(CngKeyBlobFormat format)
    content.vb: Public Function Export(format As CngKeyBlobFormat) As Byte()
    parameters:
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  commentId: M:System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  id: GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: GetProperty(String, CngPropertyOptions)
  nameWithType: CngKey.GetProperty(String, CngPropertyOptions)
  fullName: System.Security.Cryptography.CngKey.GetProperty(System.String, System.Security.Cryptography.CngPropertyOptions)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperty
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 109
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public CngProperty GetProperty(string name, CngPropertyOptions options)
    content.vb: Public Function GetProperty(name As String, options As CngPropertyOptions) As CngProperty
    parameters:
    - id: name
      type: System.String
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
    return:
      type: System.Security.Cryptography.CngProperty
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  commentId: M:System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  id: HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: HasProperty(String, CngPropertyOptions)
  nameWithType: CngKey.HasProperty(String, CngPropertyOptions)
  fullName: System.Security.Cryptography.CngKey.HasProperty(System.String, System.Security.Cryptography.CngPropertyOptions)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasProperty
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 110
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public bool HasProperty(string name, CngPropertyOptions options)
    content.vb: Public Function HasProperty(name As String, options As CngPropertyOptions) As Boolean
    parameters:
    - id: name
      type: System.String
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  commentId: M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  id: Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Import(Byte[], CngKeyBlobFormat)
  nameWithType: CngKey.Import(Byte[], CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKey.Import(System.Byte[], System.Security.Cryptography.CngKeyBlobFormat)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Import
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 111
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngKey Import(byte[] keyBlob, CngKeyBlobFormat format)
    content.vb: Public Shared Function Import(keyBlob As Byte(), format As CngKeyBlobFormat) As CngKey
    parameters:
    - id: keyBlob
      type: System.Byte[]
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
    return:
      type: System.Security.Cryptography.CngKey
  nameWithType.vb: CngKey.Import(Byte(), CngKeyBlobFormat)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Security.Cryptography.CngKey.Import(System.Byte(), System.Security.Cryptography.CngKeyBlobFormat)
  name.vb: Import(Byte(), CngKeyBlobFormat)
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  commentId: M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  id: Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Import(Byte[], CngKeyBlobFormat, CngProvider)
  nameWithType: CngKey.Import(Byte[], CngKeyBlobFormat, CngProvider)
  fullName: System.Security.Cryptography.CngKey.Import(System.Byte[], System.Security.Cryptography.CngKeyBlobFormat, System.Security.Cryptography.CngProvider)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Import
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 112
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngKey Import(byte[] keyBlob, CngKeyBlobFormat format, CngProvider provider)
    content.vb: Public Shared Function Import(keyBlob As Byte(), format As CngKeyBlobFormat, provider As CngProvider) As CngKey
    parameters:
    - id: keyBlob
      type: System.Byte[]
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
    - id: provider
      type: System.Security.Cryptography.CngProvider
    return:
      type: System.Security.Cryptography.CngKey
  nameWithType.vb: CngKey.Import(Byte(), CngKeyBlobFormat, CngProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Security.Cryptography.CngKey.Import(System.Byte(), System.Security.Cryptography.CngKeyBlobFormat, System.Security.Cryptography.CngProvider)
  name.vb: Import(Byte(), CngKeyBlobFormat, CngProvider)
- uid: System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  commentId: M:System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  id: Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Open(SafeNCryptKeyHandle, CngKeyHandleOpenOptions)
  nameWithType: CngKey.Open(SafeNCryptKeyHandle, CngKeyHandleOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle, System.Security.Cryptography.CngKeyHandleOpenOptions)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 113
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngKey Open(SafeNCryptKeyHandle keyHandle, CngKeyHandleOpenOptions keyHandleOpenOptions)
    content.vb: Public Shared Function Open(keyHandle As SafeNCryptKeyHandle, keyHandleOpenOptions As CngKeyHandleOpenOptions) As CngKey
    parameters:
    - id: keyHandle
      type: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
    - id: keyHandleOpenOptions
      type: System.Security.Cryptography.CngKeyHandleOpenOptions
    return:
      type: System.Security.Cryptography.CngKey
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Open(System.String)
  commentId: M:System.Security.Cryptography.CngKey.Open(System.String)
  id: Open(System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Open(String)
  nameWithType: CngKey.Open(String)
  fullName: System.Security.Cryptography.CngKey.Open(System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 114
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngKey Open(string keyName)
    content.vb: Public Shared Function Open(keyName As String) As CngKey
    parameters:
    - id: keyName
      type: System.String
    return:
      type: System.Security.Cryptography.CngKey
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  commentId: M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  id: Open(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Open(String, CngProvider)
  nameWithType: CngKey.Open(String, CngProvider)
  fullName: System.Security.Cryptography.CngKey.Open(System.String, System.Security.Cryptography.CngProvider)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 115
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngKey Open(string keyName, CngProvider provider)
    content.vb: Public Shared Function Open(keyName As String, provider As CngProvider) As CngKey
    parameters:
    - id: keyName
      type: System.String
    - id: provider
      type: System.Security.Cryptography.CngProvider
    return:
      type: System.Security.Cryptography.CngKey
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  commentId: M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Open(String, CngProvider, CngKeyOpenOptions)
  nameWithType: CngKey.Open(String, CngProvider, CngKeyOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Open(System.String, System.Security.Cryptography.CngProvider, System.Security.Cryptography.CngKeyOpenOptions)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 116
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static CngKey Open(string keyName, CngProvider provider, CngKeyOpenOptions openOptions)
    content.vb: Public Shared Function Open(keyName As String, provider As CngProvider, openOptions As CngKeyOpenOptions) As CngKey
    parameters:
    - id: keyName
      type: System.String
    - id: provider
      type: System.Security.Cryptography.CngProvider
    - id: openOptions
      type: System.Security.Cryptography.CngKeyOpenOptions
    return:
      type: System.Security.Cryptography.CngKey
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  commentId: M:System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  id: SetProperty(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: SetProperty(CngProperty)
  nameWithType: CngKey.SetProperty(CngProperty)
  fullName: System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetProperty
    path: src/System.Security.Cryptography.Cng/ref/4.0/System.Security.Cryptography.Cng.cs
    startLine: 117
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public void SetProperty(CngProperty property)
    content.vb: Public Sub SetProperty(property As CngProperty)
    parameters:
    - id: property
      type: System.Security.Cryptography.CngProperty
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Cryptography.CngAlgorithm
  commentId: T:System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.CngAlgorithmGroup
  commentId: T:System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngExportPolicies
  commentId: T:System.Security.Cryptography.CngExportPolicies
  parent: System.Security.Cryptography
  isExternal: false
  name: CngExportPolicies
  nameWithType: CngExportPolicies
  fullName: System.Security.Cryptography.CngExportPolicies
- uid: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
  commentId: T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptKeyHandle
  nameWithType: SafeNCryptKeyHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
- uid: Microsoft.Win32.SafeHandles
  commentId: N:Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  nameWithType: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngKeyUsages
  commentId: T:System.Security.Cryptography.CngKeyUsages
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyUsages
  nameWithType: CngKeyUsages
  fullName: System.Security.Cryptography.CngKeyUsages
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.CngProvider
  commentId: T:System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  commentId: T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptProviderHandle
  nameWithType: SafeNCryptProviderHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
- uid: System.Security.Cryptography.CngUIPolicy
  commentId: T:System.Security.Cryptography.CngUIPolicy
  parent: System.Security.Cryptography
  isExternal: false
  name: CngUIPolicy
  nameWithType: CngUIPolicy
  fullName: System.Security.Cryptography.CngUIPolicy
- uid: System.Security.Cryptography.CngKey
  commentId: T:System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.CngKeyCreationParameters
  commentId: T:System.Security.Cryptography.CngKeyCreationParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyCreationParameters
  nameWithType: CngKeyCreationParameters
  fullName: System.Security.Cryptography.CngKeyCreationParameters
- uid: System.Security.Cryptography.CngKeyOpenOptions
  commentId: T:System.Security.Cryptography.CngKeyOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyOpenOptions
  nameWithType: CngKeyOpenOptions
  fullName: System.Security.Cryptography.CngKeyOpenOptions
- uid: System.Security.Cryptography.CngKeyBlobFormat
  commentId: T:System.Security.Cryptography.CngKeyBlobFormat
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyBlobFormat
  nameWithType: CngKeyBlobFormat
  fullName: System.Security.Cryptography.CngKeyBlobFormat
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Security.Cryptography.CngPropertyOptions
  commentId: T:System.Security.Cryptography.CngPropertyOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngPropertyOptions
  nameWithType: CngPropertyOptions
  fullName: System.Security.Cryptography.CngPropertyOptions
- uid: System.Security.Cryptography.CngProperty
  commentId: T:System.Security.Cryptography.CngProperty
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
- uid: System.Security.Cryptography.CngKeyHandleOpenOptions
  commentId: T:System.Security.Cryptography.CngKeyHandleOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyHandleOpenOptions
  nameWithType: CngKeyHandleOpenOptions
  fullName: System.Security.Cryptography.CngKeyHandleOpenOptions
