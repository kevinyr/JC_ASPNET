items:
- uid: System.Security.Cryptography.HMAC
  commentId: T:System.Security.Cryptography.HMAC
  id: HMAC
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.HMAC.#ctor
  - System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  - System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.HashFinal
  - System.Security.Cryptography.HMAC.HashName
  - System.Security.Cryptography.HMAC.Initialize
  - System.Security.Cryptography.HMAC.Key
  langs:
  - csharp
  - vb
  name: HMAC
  nameWithType: HMAC
  fullName: System.Security.Cryptography.HMAC
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HMAC
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 89
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: 'public abstract class HMAC : KeyedHashAlgorithm'
    content.vb: >-
      Public MustInherit Class HMAC
          Inherits KeyedHashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.KeyedHashAlgorithm
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Security.Cryptography.HMAC.#ctor
  commentId: M:System.Security.Cryptography.HMAC.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  - vb
  name: HMAC()
  nameWithType: HMAC.HMAC()
  fullName: System.Security.Cryptography.HMAC.HMAC()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 91
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected HMAC()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.Cryptography.HMAC.HashName
  commentId: P:System.Security.Cryptography.HMAC.HashName
  id: HashName
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  - vb
  name: HashName
  nameWithType: HMAC.HashName
  fullName: System.Security.Cryptography.HMAC.HashName
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HashName
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 92
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public string HashName { get; set; }
    content.vb: Public Property HashName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.HMAC.Key
  commentId: P:System.Security.Cryptography.HMAC.Key
  id: Key
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: HMAC.Key
  fullName: System.Security.Cryptography.HMAC.Key
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Key
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 93
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public override byte[] Key { get; set; }
    content.vb: Public Overrides Property Key As Byte()
    parameters: []
    return:
      type: System.Byte[]
  overridden: System.Security.Cryptography.KeyedHashAlgorithm.Key
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: HMAC.Dispose(Boolean)
  fullName: System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 94
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  overridden: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  - vb
  name: HashCore(Byte[], Int32, Int32)
  nameWithType: HMAC.HashCore(Byte[], Int32, Int32)
  fullName: System.Security.Cryptography.HMAC.HashCore(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HashCore
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 95
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void HashCore(byte[] rgb, int ib, int cb)
    content.vb: Protected Overrides Sub HashCore(rgb As Byte(), ib As Integer, cb As Integer)
    parameters:
    - id: rgb
      type: System.Byte[]
    - id: ib
      type: System.Int32
    - id: cb
      type: System.Int32
  overridden: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: HMAC.HashCore(Byte(), Int32, Int32)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Security.Cryptography.HMAC.HashCore(System.Byte(), System.Int32, System.Int32)
  name.vb: HashCore(Byte(), Int32, Int32)
- uid: System.Security.Cryptography.HMAC.HashFinal
  commentId: M:System.Security.Cryptography.HMAC.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  - vb
  name: HashFinal()
  nameWithType: HMAC.HashFinal()
  fullName: System.Security.Cryptography.HMAC.HashFinal()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HashFinal
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 96
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashFinal()
    content.vb: Protected Overrides Function HashFinal As Byte()
    return:
      type: System.Byte[]
  overridden: System.Security.Cryptography.HashAlgorithm.HashFinal
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Security.Cryptography.HMAC.Initialize
  commentId: M:System.Security.Cryptography.HMAC.Initialize
  id: Initialize
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: HMAC.Initialize()
  fullName: System.Security.Cryptography.HMAC.Initialize()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Initialize
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 97
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public override void Initialize()
    content.vb: Public Overrides Sub Initialize
  overridden: System.Security.Cryptography.HashAlgorithm.Initialize
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.HashAlgorithm
  commentId: T:System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  commentId: T:System.Security.Cryptography.KeyedHashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.Security.Cryptography.HashAlgorithm.HashSize
  commentId: P:System.Security.Cryptography.HashAlgorithm.HashSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashSize
  nameWithType: HashAlgorithm.HashSize
  fullName: System.Security.Cryptography.HashAlgorithm.HashSize
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  commentId: M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: true
  name: ComputeHash(Byte[])
  nameWithType: HashAlgorithm.ComputeHash(Byte[])
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  nameWithType.vb: HashAlgorithm.ComputeHash(Byte())
  fullname.vb: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte())
  name.vb: ComputeHash(Byte())
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
    name: ComputeHash
    nameWithType: HashAlgorithm.ComputeHash
    fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
    name: ComputeHash
    nameWithType: HashAlgorithm.ComputeHash
    fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: true
  name: ComputeHash(Byte[], Int32, Int32)
  nameWithType: HashAlgorithm.ComputeHash(Byte[], Int32, Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: HashAlgorithm.ComputeHash(Byte(), Int32, Int32)
  fullname.vb: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte(), System.Int32, System.Int32)
  name.vb: ComputeHash(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
    name: ComputeHash
    nameWithType: HashAlgorithm.ComputeHash
    fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
    name: ComputeHash
    nameWithType: HashAlgorithm.ComputeHash
    fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  commentId: M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: true
  name: ComputeHash(IO.Stream)
  nameWithType: HashAlgorithm.ComputeHash(IO.Stream)
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
    name: ComputeHash
    nameWithType: HashAlgorithm.ComputeHash
    fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: IO.Stream
    nameWithType: IO.Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
    name: ComputeHash
    nameWithType: HashAlgorithm.ComputeHash
    fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: IO.Stream
    nameWithType: IO.Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.HashAlgorithm.Dispose
  commentId: M:System.Security.Cryptography.HashAlgorithm.Dispose
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Dispose()
  nameWithType: HashAlgorithm.Dispose()
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose()
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.Dispose
    name: Dispose
    nameWithType: HashAlgorithm.Dispose
    fullName: System.Security.Cryptography.HashAlgorithm.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.Dispose
    name: Dispose
    nameWithType: HashAlgorithm.Dispose
    fullName: System.Security.Cryptography.HashAlgorithm.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Key
  commentId: P:System.Security.Cryptography.KeyedHashAlgorithm.Key
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Key
  nameWithType: KeyedHashAlgorithm.Key
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Key
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: KeyedHashAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
    name: Dispose
    nameWithType: KeyedHashAlgorithm.Dispose
    fullName: System.Security.Cryptography.KeyedHashAlgorithm.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
    name: Dispose
    nameWithType: KeyedHashAlgorithm.Dispose
    fullName: System.Security.Cryptography.KeyedHashAlgorithm.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: true
  name: HashCore(Byte[], Int32, Int32)
  nameWithType: HashAlgorithm.HashCore(Byte[], Int32, Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: HashAlgorithm.HashCore(Byte(), Int32, Int32)
  fullname.vb: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte(), System.Int32, System.Int32)
  name.vb: HashCore(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
    name: HashCore
    nameWithType: HashAlgorithm.HashCore
    fullName: System.Security.Cryptography.HashAlgorithm.HashCore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
    name: HashCore
    nameWithType: HashAlgorithm.HashCore
    fullName: System.Security.Cryptography.HashAlgorithm.HashCore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithm.HashFinal
  commentId: M:System.Security.Cryptography.HashAlgorithm.HashFinal
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashFinal()
  nameWithType: HashAlgorithm.HashFinal()
  fullName: System.Security.Cryptography.HashAlgorithm.HashFinal()
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.HashFinal
    name: HashFinal
    nameWithType: HashAlgorithm.HashFinal
    fullName: System.Security.Cryptography.HashAlgorithm.HashFinal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.HashFinal
    name: HashFinal
    nameWithType: HashAlgorithm.HashFinal
    fullName: System.Security.Cryptography.HashAlgorithm.HashFinal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.HashAlgorithm.Initialize
  commentId: M:System.Security.Cryptography.HashAlgorithm.Initialize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Initialize()
  nameWithType: HashAlgorithm.Initialize()
  fullName: System.Security.Cryptography.HashAlgorithm.Initialize()
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.Initialize
    name: Initialize
    nameWithType: HashAlgorithm.Initialize
    fullName: System.Security.Cryptography.HashAlgorithm.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.Initialize
    name: Initialize
    nameWithType: HashAlgorithm.Initialize
    fullName: System.Security.Cryptography.HashAlgorithm.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
