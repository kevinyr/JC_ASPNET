items:
- uid: System.Security.Cryptography.ICryptoTransform
  commentId: T:System.Security.Cryptography.ICryptoTransform
  id: ICryptoTransform
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.ICryptoTransform.CanReuseTransform
  - System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks
  - System.Security.Cryptography.ICryptoTransform.InputBlockSize
  - System.Security.Cryptography.ICryptoTransform.OutputBlockSize
  - System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
  type: Interface
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ICryptoTransform
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 99
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: 'public interface ICryptoTransform : IDisposable'
    content.vb: >-
      Public Interface ICryptoTransform
          Inherits IDisposable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Security.Cryptography.ICryptoTransform.CanReuseTransform
  commentId: P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform
  id: CanReuseTransform
  parent: System.Security.Cryptography.ICryptoTransform
  langs:
  - csharp
  - vb
  name: CanReuseTransform
  nameWithType: ICryptoTransform.CanReuseTransform
  fullName: System.Security.Cryptography.ICryptoTransform.CanReuseTransform
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanReuseTransform
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 101
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: bool CanReuseTransform { get; }
    content.vb: ReadOnly Property CanReuseTransform As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks
  commentId: P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks
  id: CanTransformMultipleBlocks
  parent: System.Security.Cryptography.ICryptoTransform
  langs:
  - csharp
  - vb
  name: CanTransformMultipleBlocks
  nameWithType: ICryptoTransform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanTransformMultipleBlocks
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 102
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: bool CanTransformMultipleBlocks { get; }
    content.vb: ReadOnly Property CanTransformMultipleBlocks As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Security.Cryptography.ICryptoTransform.InputBlockSize
  commentId: P:System.Security.Cryptography.ICryptoTransform.InputBlockSize
  id: InputBlockSize
  parent: System.Security.Cryptography.ICryptoTransform
  langs:
  - csharp
  - vb
  name: InputBlockSize
  nameWithType: ICryptoTransform.InputBlockSize
  fullName: System.Security.Cryptography.ICryptoTransform.InputBlockSize
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InputBlockSize
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 103
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: int InputBlockSize { get; }
    content.vb: ReadOnly Property InputBlockSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Security.Cryptography.ICryptoTransform.OutputBlockSize
  commentId: P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize
  id: OutputBlockSize
  parent: System.Security.Cryptography.ICryptoTransform
  langs:
  - csharp
  - vb
  name: OutputBlockSize
  nameWithType: ICryptoTransform.OutputBlockSize
  fullName: System.Security.Cryptography.ICryptoTransform.OutputBlockSize
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OutputBlockSize
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 104
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: int OutputBlockSize { get; }
    content.vb: ReadOnly Property OutputBlockSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.ICryptoTransform
  langs:
  - csharp
  - vb
  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)
  nameWithType: ICryptoTransform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)
  fullName: System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TransformBlock
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 105
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: int TransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset)
    content.vb: Function TransformBlock(inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer
    parameters:
    - id: inputBuffer
      type: System.Byte[]
    - id: inputOffset
      type: System.Int32
    - id: inputCount
      type: System.Int32
    - id: outputBuffer
      type: System.Byte[]
    - id: outputOffset
      type: System.Int32
    return:
      type: System.Int32
  nameWithType.vb: ICryptoTransform.TransformBlock(Byte(), Int32, Int32, Byte(), Int32)
  fullName.vb: System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: TransformBlock(Byte(), Int32, Int32, Byte(), Int32)
- uid: System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.ICryptoTransform
  langs:
  - csharp
  - vb
  name: TransformFinalBlock(Byte[], Int32, Int32)
  nameWithType: ICryptoTransform.TransformFinalBlock(Byte[], Int32, Int32)
  fullName: System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TransformFinalBlock
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 106
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: byte[] TransformFinalBlock(byte[] inputBuffer, int inputOffset, int inputCount)
    content.vb: Function TransformFinalBlock(inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()
    parameters:
    - id: inputBuffer
      type: System.Byte[]
    - id: inputOffset
      type: System.Int32
    - id: inputCount
      type: System.Int32
    return:
      type: System.Byte[]
  nameWithType.vb: ICryptoTransform.TransformFinalBlock(Byte(), Int32, Int32)
  fullName.vb: System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte(), System.Int32, System.Int32)
  name.vb: TransformFinalBlock(Byte(), Int32, Int32)
references:
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
