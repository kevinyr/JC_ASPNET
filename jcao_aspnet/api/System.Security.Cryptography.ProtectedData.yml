items:
- uid: System.Security.Cryptography.ProtectedData
  id: ProtectedData
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)
  - System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)
  langs:
  - csharp
  - vb
  name: ProtectedData
  fullName: System.Security.Cryptography.ProtectedData
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.ProtectedData/ref/System.Security.Cryptography.ProtectedData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.ProtectedData/ref/System.Security.Cryptography.ProtectedData.cs
    startLine: 12
  assemblies:
  - System.Security.Cryptography.ProtectedData
  namespace: System.Security.Cryptography
  summary: Provides methods for encrypting and decrypting data. This class cannot be inherited.
  syntax:
    content: 'public class ProtectedData : object'
    content.vb: Public Class ProtectedData Inherits Object
  inheritance:
  - System.Object
- uid: System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)
  id: Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)
  parent: System.Security.Cryptography.ProtectedData
  langs:
  - csharp
  - vb
  name: Protect(Byte[], Byte[], DataProtectionScope)
  name.vb: Protect(Byte(), Byte(), DataProtectionScope)
  fullName: System.Security.Cryptography.ProtectedData.Protect(System.Byte[], System.Byte[], System.Security.Cryptography.DataProtectionScope)
  fullName.vb: System.Security.Cryptography.ProtectedData.Protect(System.Byte(), System.Byte(), System.Security.Cryptography.DataProtectionScope)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.ProtectedData/ref/System.Security.Cryptography.ProtectedData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.ProtectedData/ref/System.Security.Cryptography.ProtectedData.cs
    startLine: 14
  assemblies:
  - System.Security.Cryptography.ProtectedData
  namespace: System.Security.Cryptography
  summary: Encrypts the data in a specified byte array and returns a byte array that contains the encrypted data.
  syntax:
    content: public static byte[] Protect(byte[] userData, byte[] optionalEntropy, DataProtectionScope scope)
    content.vb: Public Shared Function Protect(userData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()
    parameters:
    - id: userData
      type: System.Byte[]
      description: A byte array that contains data to encrypt.
    - id: optionalEntropy
      type: System.Byte[]
      description: An optional additional byte array used to increase the complexity of the encryption, or null for no additional complexity.
    - id: scope
      type: System.Security.Cryptography.DataProtectionScope
      description: One of the enumeration values that specifies the scope of encryption.
    return:
      type: System.Byte[]
      description: A byte array representing the encrypted data.
  exceptions:
  - type: System.ArgumentNullException
    description: The *userData* parameter is null.
  - type: System.Security.Cryptography.CryptographicException
    description: The encryption failed.
  - type: System.NotSupportedException
    description: The operating system does not support this method.
  - type: System.OutOfMemoryException
    description: The system ran out of memory while encrypting the data.
- uid: System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)
  id: Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)
  parent: System.Security.Cryptography.ProtectedData
  langs:
  - csharp
  - vb
  name: Unprotect(Byte[], Byte[], DataProtectionScope)
  name.vb: Unprotect(Byte(), Byte(), DataProtectionScope)
  fullName: System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[], System.Byte[], System.Security.Cryptography.DataProtectionScope)
  fullName.vb: System.Security.Cryptography.ProtectedData.Unprotect(System.Byte(), System.Byte(), System.Security.Cryptography.DataProtectionScope)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.ProtectedData/ref/System.Security.Cryptography.ProtectedData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.ProtectedData/ref/System.Security.Cryptography.ProtectedData.cs
    startLine: 15
  assemblies:
  - System.Security.Cryptography.ProtectedData
  namespace: System.Security.Cryptography
  summary: Decrypts the data in a specified byte array and returns a byte array that contains the decrypted data.
  syntax:
    content: public static byte[] Unprotect(byte[] encryptedData, byte[] optionalEntropy, DataProtectionScope scope)
    content.vb: Public Shared Function Unprotect(encryptedData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: A byte array containing data encrypted using the <xref href="System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" data-throw-if-not-resolved="false"></xref> method.
    - id: optionalEntropy
      type: System.Byte[]
      description: An optional additional byte array that was used to encrypt the data, or null if the additional byte array was not used.
    - id: scope
      type: System.Security.Cryptography.DataProtectionScope
      description: One of the enumeration values that specifies the scope of data protection that was used to encrypt the data.
    return:
      type: System.Byte[]
      description: A byte array representing the decrypted data.
  exceptions:
  - type: System.ArgumentNullException
    description: The *encryptedData* parameter is null.
  - type: System.Security.Cryptography.CryptographicException
    description: The decryption failed.
  - type: System.NotSupportedException
    description: The operating system does not support this method.
  - type: System.OutOfMemoryException
    description: Out of memory.
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Security.Cryptography.DataProtectionScope
  parent: System.Security.Cryptography
  isExternal: false
  name: DataProtectionScope
  fullName: System.Security.Cryptography.DataProtectionScope
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.OutOfMemoryException
  isExternal: false
  name: OutOfMemoryException
  fullName: System.OutOfMemoryException
