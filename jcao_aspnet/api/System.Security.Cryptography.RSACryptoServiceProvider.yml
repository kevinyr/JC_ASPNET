items:
- uid: System.Security.Cryptography.RSACryptoServiceProvider
  commentId: T:System.Security.Cryptography.RSACryptoServiceProvider
  id: RSACryptoServiceProvider
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  - System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  - System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes
  - System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  - System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  - System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  langs:
  - csharp
  - vb
  name: RSACryptoServiceProvider
  nameWithType: RSACryptoServiceProvider
  fullName: System.Security.Cryptography.RSACryptoServiceProvider
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RSACryptoServiceProvider
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 63
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: 'public sealed class RSACryptoServiceProvider : RSA, ICspAsymmetricAlgorithm'
    content.vb: >-
      Public NotInheritable Class RSACryptoServiceProvider
          Inherits RSA
          Implements ICspAsymmetricAlgorithm
  inheritance:
  - System.Object
  implements:
  - System.Security.Cryptography.ICspAsymmetricAlgorithm
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: RSACryptoServiceProvider()
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider()
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 65
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public RSACryptoServiceProvider()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: RSACryptoServiceProvider(Int32)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 66
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public RSACryptoServiceProvider(int dwKeySize)
    content.vb: Public Sub New(dwKeySize As Integer)
    parameters:
    - id: dwKeySize
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Int32,System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: RSACryptoServiceProvider(Int32, CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32, CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(System.Int32, System.Security.Cryptography.CspParameters)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 67
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public RSACryptoServiceProvider(int dwKeySize, CspParameters parameters)
    content.vb: Public Sub New(dwKeySize As Integer, parameters As CspParameters)
    parameters:
    - id: dwKeySize
      type: System.Int32
    - id: parameters
      type: System.Security.Cryptography.CspParameters
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: RSACryptoServiceProvider(CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(System.Security.Cryptography.CspParameters)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 68
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public RSACryptoServiceProvider(CspParameters parameters)
    content.vb: Public Sub New(parameters As CspParameters)
    parameters:
    - id: parameters
      type: System.Security.Cryptography.CspParameters
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  commentId: P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  id: CspKeyContainerInfo
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: CspKeyContainerInfo
  nameWithType: RSACryptoServiceProvider.CspKeyContainerInfo
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CspKeyContainerInfo
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 69
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public CspKeyContainerInfo CspKeyContainerInfo { get; }
    content.vb: Public ReadOnly Property CspKeyContainerInfo As CspKeyContainerInfo
    parameters: []
    return:
      type: System.Security.Cryptography.CspKeyContainerInfo
  implements:
  - System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  commentId: P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  id: KeySize
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: KeySize
  nameWithType: RSACryptoServiceProvider.KeySize
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeySize
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 70
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public override int KeySize { get; }
    content.vb: Public Overrides ReadOnly Property KeySize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  commentId: P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  id: PersistKeyInCsp
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: PersistKeyInCsp
  nameWithType: RSACryptoServiceProvider.PersistKeyInCsp
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PersistKeyInCsp
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 71
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public bool PersistKeyInCsp { get; set; }
    content.vb: Public Property PersistKeyInCsp As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  commentId: P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  id: PublicOnly
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: PublicOnly
  nameWithType: RSACryptoServiceProvider.PublicOnly
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PublicOnly
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 72
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public bool PublicOnly { get; }
    content.vb: Public ReadOnly Property PublicOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  commentId: P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  id: UseMachineKeyStore
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: UseMachineKeyStore
  nameWithType: RSACryptoServiceProvider.UseMachineKeyStore
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UseMachineKeyStore
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 73
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public static bool UseMachineKeyStore { get; set; }
    content.vb: Public Shared Property UseMachineKeyStore As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  id: Decrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: Decrypt(Byte[], Boolean)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[], Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[], System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Decrypt
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 74
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] Decrypt(byte[] rgb, bool fOAEP)
    content.vb: Public Function Decrypt(rgb As Byte(), fOAEP As Boolean) As Byte()
    parameters:
    - id: rgb
      type: System.Byte[]
    - id: fOAEP
      type: System.Boolean
    return:
      type: System.Byte[]
  nameWithType.vb: RSACryptoServiceProvider.Decrypt(Byte(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte(), System.Boolean)
  name.vb: Decrypt(Byte(), Boolean)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: Decrypt(Byte[], RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[], RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[], System.Security.Cryptography.RSAEncryptionPadding)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Decrypt
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 75
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public override byte[] Decrypt(byte[] data, RSAEncryptionPadding padding)
    content.vb: Public Overrides Function Decrypt(data As Byte(), padding As RSAEncryptionPadding) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
    return:
      type: System.Byte[]
  nameWithType.vb: RSACryptoServiceProvider.Decrypt(Byte(), RSAEncryptionPadding)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte(), System.Security.Cryptography.RSAEncryptionPadding)
  name.vb: Decrypt(Byte(), RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: RSACryptoServiceProvider.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 76
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  id: Encrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: Encrypt(Byte[], Boolean)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[], Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[], System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Encrypt
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 77
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] Encrypt(byte[] rgb, bool fOAEP)
    content.vb: Public Function Encrypt(rgb As Byte(), fOAEP As Boolean) As Byte()
    parameters:
    - id: rgb
      type: System.Byte[]
    - id: fOAEP
      type: System.Boolean
    return:
      type: System.Byte[]
  nameWithType.vb: RSACryptoServiceProvider.Encrypt(Byte(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte(), System.Boolean)
  name.vb: Encrypt(Byte(), Boolean)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: Encrypt(Byte[], RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[], RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[], System.Security.Cryptography.RSAEncryptionPadding)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Encrypt
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 78
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public override byte[] Encrypt(byte[] data, RSAEncryptionPadding padding)
    content.vb: Public Overrides Function Encrypt(data As Byte(), padding As RSAEncryptionPadding) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
    return:
      type: System.Byte[]
  nameWithType.vb: RSACryptoServiceProvider.Encrypt(Byte(), RSAEncryptionPadding)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte(), System.Security.Cryptography.RSAEncryptionPadding)
  name.vb: Encrypt(Byte(), RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  id: ExportCspBlob(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: ExportCspBlob(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportCspBlob(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExportCspBlob
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 79
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] ExportCspBlob(bool includePrivateParameters)
    content.vb: Public Function ExportCspBlob(includePrivateParameters As Boolean) As Byte()
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
    return:
      type: System.Byte[]
  implements:
  - System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: ExportParameters(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExportParameters
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 80
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public override RSAParameters ExportParameters(bool includePrivateParameters)
    content.vb: Public Overrides Function ExportParameters(includePrivateParameters As Boolean) As RSAParameters
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
    return:
      type: System.Security.Cryptography.RSAParameters
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: HashData(Byte[], Int32, Int32, HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Byte[], Int32, Int32, HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[], System.Int32, System.Int32, System.Security.Cryptography.HashAlgorithmName)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HashData
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 81
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData(byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm)
    content.vb: Protected Overrides Function HashData(data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
    return:
      type: System.Byte[]
  nameWithType.vb: RSACryptoServiceProvider.HashData(Byte(), Int32, Int32, HashAlgorithmName)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte(), System.Int32, System.Int32, System.Security.Cryptography.HashAlgorithmName)
  name.vb: HashData(Byte(), Int32, Int32, HashAlgorithmName)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: HashData(IO.Stream, HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(IO.Stream, HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream, System.Security.Cryptography.HashAlgorithmName)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HashData
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 82
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData(IO.Stream data, HashAlgorithmName hashAlgorithm)
    content.vb: Protected Overrides Function HashData(data As IO.Stream, hashAlgorithm As HashAlgorithmName) As Byte()
    parameters:
    - id: data
      type: System.IO.Stream
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
    return:
      type: System.Byte[]
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  id: ImportCspBlob(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: ImportCspBlob(Byte[])
  nameWithType: RSACryptoServiceProvider.ImportCspBlob(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ImportCspBlob
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 83
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public void ImportCspBlob(byte[] keyBlob)
    content.vb: Public Sub ImportCspBlob(keyBlob As Byte())
    parameters:
    - id: keyBlob
      type: System.Byte[]
  implements:
  - System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])
  nameWithType.vb: RSACryptoServiceProvider.ImportCspBlob(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte())
  name.vb: ImportCspBlob(Byte())
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: ImportParameters(RSAParameters)
  nameWithType: RSACryptoServiceProvider.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ImportParameters
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 84
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public override void ImportParameters(RSAParameters parameters)
    content.vb: Public Overrides Sub ImportParameters(parameters As RSAParameters)
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes
  commentId: P:System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes
  id: LegalKeySizes
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: LegalKeySizes
  nameWithType: RSACryptoServiceProvider.LegalKeySizes
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LegalKeySizes
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 85
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public override KeySizes[] LegalKeySizes { get; }
    content.vb: Public Overrides ReadOnly Property LegalKeySizes As KeySizes()
    parameters: []
    return:
      type: System.Security.Cryptography.KeySizes[]
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  id: SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: SignData(Byte[], Int32, Int32, Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[], Int32, Int32, Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[], System.Int32, System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignData
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 86
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] SignData(byte[] buffer, int offset, int count, object halg)
    content.vb: Public Function SignData(buffer As Byte(), offset As Integer, count As Integer, halg As Object) As Byte()
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: halg
      type: System.Object
    return:
      type: System.Byte[]
  nameWithType.vb: RSACryptoServiceProvider.SignData(Byte(), Int32, Int32, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte(), System.Int32, System.Int32, System.Object)
  name.vb: SignData(Byte(), Int32, Int32, Object)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  id: SignData(System.Byte[],System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: SignData(Byte[], Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[], Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[], System.Object)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignData
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 87
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] SignData(byte[] buffer, object halg)
    content.vb: Public Function SignData(buffer As Byte(), halg As Object) As Byte()
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: halg
      type: System.Object
    return:
      type: System.Byte[]
  nameWithType.vb: RSACryptoServiceProvider.SignData(Byte(), Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte(), System.Object)
  name.vb: SignData(Byte(), Object)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  id: SignData(System.IO.Stream,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: SignData(IO.Stream, Object)
  nameWithType: RSACryptoServiceProvider.SignData(IO.Stream, Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignData
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 88
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] SignData(IO.Stream inputStream, object halg)
    content.vb: Public Function SignData(inputStream As IO.Stream, halg As Object) As Byte()
    parameters:
    - id: inputStream
      type: System.IO.Stream
    - id: halg
      type: System.Object
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[], System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignHash
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 89
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public override byte[] SignHash(byte[] hash, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public Overrides Function SignHash(hash As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Byte()
    parameters:
    - id: hash
      type: System.Byte[]
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
    return:
      type: System.Byte[]
  nameWithType.vb: RSACryptoServiceProvider.SignHash(Byte(), HashAlgorithmName, RSASignaturePadding)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte(), System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  name.vb: SignHash(Byte(), HashAlgorithmName, RSASignaturePadding)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  id: SignHash(System.Byte[],System.String)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: SignHash(Byte[], String)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[], String)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[], System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignHash
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 90
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] SignHash(byte[] rgbHash, string str)
    content.vb: Public Function SignHash(rgbHash As Byte(), str As String) As Byte()
    parameters:
    - id: rgbHash
      type: System.Byte[]
    - id: str
      type: System.String
    return:
      type: System.Byte[]
  nameWithType.vb: RSACryptoServiceProvider.SignHash(Byte(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte(), System.String)
  name.vb: SignHash(Byte(), String)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  id: VerifyData(System.Byte[],System.Object,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: VerifyData(Byte[], Object, Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyData(Byte[], Object, Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[], System.Object, System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VerifyData
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 91
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public bool VerifyData(byte[] buffer, object halg, byte[] signature)
    content.vb: Public Function VerifyData(buffer As Byte(), halg As Object, signature As Byte()) As Boolean
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: halg
      type: System.Object
    - id: signature
      type: System.Byte[]
    return:
      type: System.Boolean
  nameWithType.vb: RSACryptoServiceProvider.VerifyData(Byte(), Object, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte(), System.Object, System.Byte())
  name.vb: VerifyData(Byte(), Object, Byte())
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[], System.Byte[], System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VerifyHash
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 92
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public override bool VerifyHash(byte[] hash, byte[] signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public Overrides Function VerifyHash(hash As Byte(), signature As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Boolean
    parameters:
    - id: hash
      type: System.Byte[]
    - id: signature
      type: System.Byte[]
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
    return:
      type: System.Boolean
  nameWithType.vb: RSACryptoServiceProvider.VerifyHash(Byte(), Byte(), HashAlgorithmName, RSASignaturePadding)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte(), System.Byte(), System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  name.vb: VerifyHash(Byte(), Byte(), HashAlgorithmName, RSASignaturePadding)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  commentId: M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  id: VerifyHash(System.Byte[],System.String,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  - vb
  name: VerifyHash(Byte[], String, Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[], String, Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[], System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VerifyHash
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 93
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public bool VerifyHash(byte[] rgbHash, string str, byte[] rgbSignature)
    content.vb: Public Function VerifyHash(rgbHash As Byte(), str As String, rgbSignature As Byte()) As Boolean
    parameters:
    - id: rgbHash
      type: System.Byte[]
    - id: str
      type: System.String
    - id: rgbSignature
      type: System.Byte[]
    return:
      type: System.Boolean
  nameWithType.vb: RSACryptoServiceProvider.VerifyHash(Byte(), String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte(), System.String, System.Byte())
  name.vb: VerifyHash(Byte(), String, Byte())
references:
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.ICspAsymmetricAlgorithm
  commentId: T:System.Security.Cryptography.ICspAsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: ICspAsymmetricAlgorithm
  nameWithType: ICspAsymmetricAlgorithm
  fullName: System.Security.Cryptography.ICspAsymmetricAlgorithm
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CspParameters
  commentId: T:System.Security.Cryptography.CspParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
- uid: System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo
  commentId: P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo
  parent: System.Security.Cryptography.ICspAsymmetricAlgorithm
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: ICspAsymmetricAlgorithm.CspKeyContainerInfo
  fullName: System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo
- uid: System.Security.Cryptography.CspKeyContainerInfo
  commentId: T:System.Security.Cryptography.CspKeyContainerInfo
  parent: System.Security.Cryptography
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: CspKeyContainerInfo
  fullName: System.Security.Cryptography.CspKeyContainerInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Security.Cryptography.RSAEncryptionPadding
  commentId: T:System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  nameWithType: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)
  commentId: M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)
  parent: System.Security.Cryptography.ICspAsymmetricAlgorithm
  isExternal: true
  name: ExportCspBlob(Boolean)
  nameWithType: ICspAsymmetricAlgorithm.ExportCspBlob(Boolean)
  fullName: System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)
    name: ExportCspBlob
    nameWithType: ICspAsymmetricAlgorithm.ExportCspBlob
    fullName: System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)
    name: ExportCspBlob
    nameWithType: ICspAsymmetricAlgorithm.ExportCspBlob
    fullName: System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.RSAParameters
  commentId: T:System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Security.Cryptography.HashAlgorithmName
  commentId: T:System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  nameWithType: IO.Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])
  commentId: M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])
  parent: System.Security.Cryptography.ICspAsymmetricAlgorithm
  isExternal: true
  name: ImportCspBlob(Byte[])
  nameWithType: ICspAsymmetricAlgorithm.ImportCspBlob(Byte[])
  fullName: System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])
  nameWithType.vb: ICspAsymmetricAlgorithm.ImportCspBlob(Byte())
  fullname.vb: System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte())
  name.vb: ImportCspBlob(Byte())
  spec.csharp:
  - uid: System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])
    name: ImportCspBlob
    nameWithType: ICspAsymmetricAlgorithm.ImportCspBlob
    fullName: System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])
    name: ImportCspBlob
    nameWithType: ICspAsymmetricAlgorithm.ImportCspBlob
    fullName: System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.KeySizes[]
  name: KeySizes[]
  nameWithType: KeySizes[]
  fullName: System.Security.Cryptography.KeySizes[]
  nameWithType.vb: KeySizes()
  fullname.vb: System.Security.Cryptography.KeySizes()
  name.vb: KeySizes()
  spec.csharp:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    nameWithType: KeySizes
    fullName: System.Security.Cryptography.KeySizes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    nameWithType: KeySizes
    fullName: System.Security.Cryptography.KeySizes
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Security.Cryptography.RSASignaturePadding
  commentId: T:System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSASignaturePadding
  nameWithType: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
