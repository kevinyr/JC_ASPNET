items:
- uid: System.Security.Cryptography.Rfc2898DeriveBytes
  commentId: T:System.Security.Cryptography.Rfc2898DeriveBytes
  id: Rfc2898DeriveBytes
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  - System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  - System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  - System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  langs:
  - csharp
  - vb
  name: Rfc2898DeriveBytes
  nameWithType: Rfc2898DeriveBytes
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Rfc2898DeriveBytes
    path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
    startLine: 118
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: 'public class Rfc2898DeriveBytes : DeriveBytes'
    content.vb: >-
      Public Class Rfc2898DeriveBytes
          Inherits DeriveBytes
  inheritance:
  - System.Object
  - System.Security.Cryptography.DeriveBytes
  inheritedMembers:
  - System.Security.Cryptography.DeriveBytes.Dispose
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  commentId: M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Byte[],System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  - vb
  name: Rfc2898DeriveBytes(Byte[], Byte[], Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[], Byte[], Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(System.Byte[], System.Byte[], System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
    startLine: 120
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public Rfc2898DeriveBytes(byte[] password, byte[] salt, int iterations)
    content.vb: Public Sub New(password As Byte(), salt As Byte(), iterations As Integer)
    parameters:
    - id: password
      type: System.Byte[]
    - id: salt
      type: System.Byte[]
    - id: iterations
      type: System.Int32
  nameWithType.vb: Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte(), Byte(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(System.Byte(), System.Byte(), System.Int32)
  name.vb: Rfc2898DeriveBytes(Byte(), Byte(), Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  commentId: M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  - vb
  name: Rfc2898DeriveBytes(String, Byte[])
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String, Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(System.String, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
    startLine: 121
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public Rfc2898DeriveBytes(string password, byte[] salt)
    content.vb: Public Sub New(password As String, salt As Byte())
    parameters:
    - id: password
      type: System.String
    - id: salt
      type: System.Byte[]
  nameWithType.vb: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(System.String, System.Byte())
  name.vb: Rfc2898DeriveBytes(String, Byte())
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  commentId: M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  id: '#ctor(System.String,System.Byte[],System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  - vb
  name: Rfc2898DeriveBytes(String, Byte[], Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String, Byte[], Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(System.String, System.Byte[], System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
    startLine: 122
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public Rfc2898DeriveBytes(string password, byte[] salt, int iterations)
    content.vb: Public Sub New(password As String, salt As Byte(), iterations As Integer)
    parameters:
    - id: password
      type: System.String
    - id: salt
      type: System.Byte[]
    - id: iterations
      type: System.Int32
  nameWithType.vb: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String, Byte(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(System.String, System.Byte(), System.Int32)
  name.vb: Rfc2898DeriveBytes(String, Byte(), Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  commentId: M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  - vb
  name: Rfc2898DeriveBytes(String, Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String, Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
    startLine: 123
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public Rfc2898DeriveBytes(string password, int saltSize)
    content.vb: Public Sub New(password As String, saltSize As Integer)
    parameters:
    - id: password
      type: System.String
    - id: saltSize
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  commentId: M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  - vb
  name: Rfc2898DeriveBytes(String, Int32, Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String, Int32, Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(System.String, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
    startLine: 124
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public Rfc2898DeriveBytes(string password, int saltSize, int iterations)
    content.vb: Public Sub New(password As String, saltSize As Integer, iterations As Integer)
    parameters:
    - id: password
      type: System.String
    - id: saltSize
      type: System.Int32
    - id: iterations
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  commentId: P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  id: IterationCount
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  - vb
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IterationCount
    path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
    startLine: 125
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public int IterationCount { get; set; }
    content.vb: Public Property IterationCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  commentId: P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  id: Salt
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  - vb
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Salt
    path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
    startLine: 126
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] Salt { get; set; }
    content.vb: Public Property Salt As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: Rfc2898DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
    startLine: 127
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  overridden: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  commentId: M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  id: GetBytes(System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  - vb
  name: GetBytes(Int32)
  nameWithType: Rfc2898DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBytes
    path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
    startLine: 128
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override byte[] GetBytes(int cb)
    content.vb: Public Overrides Function GetBytes(cb As Integer) As Byte()
    parameters:
    - id: cb
      type: System.Int32
    return:
      type: System.Byte[]
  overridden: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  commentId: M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  id: Reset
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Rfc2898DeriveBytes.Reset()
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Reset()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reset
    path: src/System.Security.Cryptography.Algorithms/ref/4.1/System.Security.Cryptography.Algorithms.cs
    startLine: 129
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override void Reset()
    content.vb: Public Overrides Sub Reset
  overridden: System.Security.Cryptography.DeriveBytes.Reset
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.DeriveBytes
  commentId: T:System.Security.Cryptography.DeriveBytes
  parent: System.Security.Cryptography
  isExternal: false
  name: DeriveBytes
  nameWithType: DeriveBytes
  fullName: System.Security.Cryptography.DeriveBytes
- uid: System.Security.Cryptography.DeriveBytes.Dispose
  commentId: M:System.Security.Cryptography.DeriveBytes.Dispose
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Dispose()
  nameWithType: DeriveBytes.Dispose()
  fullName: System.Security.Cryptography.DeriveBytes.Dispose()
  spec.csharp:
  - uid: System.Security.Cryptography.DeriveBytes.Dispose
    name: Dispose
    nameWithType: DeriveBytes.Dispose
    fullName: System.Security.Cryptography.DeriveBytes.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.DeriveBytes.Dispose
    name: Dispose
    nameWithType: DeriveBytes.Dispose
    fullName: System.Security.Cryptography.DeriveBytes.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DeriveBytes.Dispose
    fullName: System.Security.Cryptography.DeriveBytes.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DeriveBytes.Dispose
    fullName: System.Security.Cryptography.DeriveBytes.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  commentId: M:System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: true
  name: GetBytes(Int32)
  nameWithType: DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  spec.csharp:
  - uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
    name: GetBytes
    nameWithType: DeriveBytes.GetBytes
    fullName: System.Security.Cryptography.DeriveBytes.GetBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
    name: GetBytes
    nameWithType: DeriveBytes.GetBytes
    fullName: System.Security.Cryptography.DeriveBytes.GetBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.DeriveBytes.Reset
  commentId: M:System.Security.Cryptography.DeriveBytes.Reset
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Reset()
  nameWithType: DeriveBytes.Reset()
  fullName: System.Security.Cryptography.DeriveBytes.Reset()
  spec.csharp:
  - uid: System.Security.Cryptography.DeriveBytes.Reset
    name: Reset
    nameWithType: DeriveBytes.Reset
    fullName: System.Security.Cryptography.DeriveBytes.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.DeriveBytes.Reset
    name: Reset
    nameWithType: DeriveBytes.Reset
    fullName: System.Security.Cryptography.DeriveBytes.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
