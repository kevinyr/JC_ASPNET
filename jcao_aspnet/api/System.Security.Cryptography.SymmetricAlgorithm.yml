items:
- uid: System.Security.Cryptography.SymmetricAlgorithm
  commentId: T:System.Security.Cryptography.SymmetricAlgorithm
  id: SymmetricAlgorithm
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.SymmetricAlgorithm.#ctor
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  - System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.Key
  - System.Security.Cryptography.SymmetricAlgorithm.KeySize
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  langs:
  - csharp
  - vb
  name: SymmetricAlgorithm
  nameWithType: SymmetricAlgorithm
  fullName: System.Security.Cryptography.SymmetricAlgorithm
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SymmetricAlgorithm
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 127
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: 'public abstract class SymmetricAlgorithm : IDisposable'
    content.vb: >-
      Public MustInherit Class SymmetricAlgorithm
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Security.Cryptography.SymmetricAlgorithm.#ctor
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: SymmetricAlgorithm()
  nameWithType: SymmetricAlgorithm.SymmetricAlgorithm()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.SymmetricAlgorithm()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 129
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected SymmetricAlgorithm()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  id: BlockSize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: BlockSize
  nameWithType: SymmetricAlgorithm.BlockSize
  fullName: System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BlockSize
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 130
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual int BlockSize { get; set; }
    content.vb: Public Overridable Property BlockSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.Cryptography.SymmetricAlgorithm.IV
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.IV
  id: IV
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: IV
  nameWithType: SymmetricAlgorithm.IV
  fullName: System.Security.Cryptography.SymmetricAlgorithm.IV
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IV
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 131
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual byte[] IV { get; set; }
    content.vb: Public Overridable Property IV As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.Cryptography.SymmetricAlgorithm.Key
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.Key
  id: Key
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: SymmetricAlgorithm.Key
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Key
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Key
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 132
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual byte[] Key { get; set; }
    content.vb: Public Overridable Property Key As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySize
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.KeySize
  id: KeySize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: KeySize
  nameWithType: SymmetricAlgorithm.KeySize
  fullName: System.Security.Cryptography.SymmetricAlgorithm.KeySize
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeySize
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 133
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual int KeySize { get; set; }
    content.vb: Public Overridable Property KeySize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  id: LegalBlockSizes
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: LegalBlockSizes
  nameWithType: SymmetricAlgorithm.LegalBlockSizes
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LegalBlockSizes
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 134
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual KeySizes[] LegalBlockSizes { get; }
    content.vb: Public Overridable ReadOnly Property LegalBlockSizes As KeySizes()
    parameters: []
    return:
      type: System.Security.Cryptography.KeySizes[]
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  id: LegalKeySizes
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: LegalKeySizes
  nameWithType: SymmetricAlgorithm.LegalKeySizes
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LegalKeySizes
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 135
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual KeySizes[] LegalKeySizes { get; }
    content.vb: Public Overridable ReadOnly Property LegalKeySizes As KeySizes()
    parameters: []
    return:
      type: System.Security.Cryptography.KeySizes[]
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Security.Cryptography.SymmetricAlgorithm.Mode
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.Mode
  id: Mode
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: SymmetricAlgorithm.Mode
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Mode
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Mode
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 136
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual CipherMode Mode { get; set; }
    content.vb: Public Overridable Property Mode As CipherMode
    parameters: []
    return:
      type: System.Security.Cryptography.CipherMode
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.Cryptography.SymmetricAlgorithm.Padding
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.Padding
  id: Padding
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: Padding
  nameWithType: SymmetricAlgorithm.Padding
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Padding
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Padding
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 137
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual PaddingMode Padding { get; set; }
    content.vb: Public Overridable Property Padding As PaddingMode
    parameters: []
    return:
      type: System.Security.Cryptography.PaddingMode
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  id: CreateDecryptor
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: CreateDecryptor()
  nameWithType: SymmetricAlgorithm.CreateDecryptor()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateDecryptor
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 138
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual ICryptoTransform CreateDecryptor()
    content.vb: Public Overridable Function CreateDecryptor As ICryptoTransform
    return:
      type: System.Security.Cryptography.ICryptoTransform
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: CreateDecryptor(Byte[], Byte[])
  nameWithType: SymmetricAlgorithm.CreateDecryptor(Byte[], Byte[])
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateDecryptor
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 139
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public abstract ICryptoTransform CreateDecryptor(byte[] rgbKey, byte[] rgbIV)
    content.vb: Public MustOverride Function CreateDecryptor(rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform
    parameters:
    - id: rgbKey
      type: System.Byte[]
    - id: rgbIV
      type: System.Byte[]
    return:
      type: System.Security.Cryptography.ICryptoTransform
  nameWithType.vb: SymmetricAlgorithm.CreateDecryptor(Byte(), Byte())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte(), System.Byte())
  name.vb: CreateDecryptor(Byte(), Byte())
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  id: CreateEncryptor
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: CreateEncryptor()
  nameWithType: SymmetricAlgorithm.CreateEncryptor()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateEncryptor
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 140
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual ICryptoTransform CreateEncryptor()
    content.vb: Public Overridable Function CreateEncryptor As ICryptoTransform
    return:
      type: System.Security.Cryptography.ICryptoTransform
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: CreateEncryptor(Byte[], Byte[])
  nameWithType: SymmetricAlgorithm.CreateEncryptor(Byte[], Byte[])
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateEncryptor
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 141
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public abstract ICryptoTransform CreateEncryptor(byte[] rgbKey, byte[] rgbIV)
    content.vb: Public MustOverride Function CreateEncryptor(rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform
    parameters:
    - id: rgbKey
      type: System.Byte[]
    - id: rgbIV
      type: System.Byte[]
    return:
      type: System.Security.Cryptography.ICryptoTransform
  nameWithType.vb: SymmetricAlgorithm.CreateEncryptor(Byte(), Byte())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte(), System.Byte())
  name.vb: CreateEncryptor(Byte(), Byte())
- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.Dispose
  id: Dispose
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SymmetricAlgorithm.Dispose()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 142
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: SymmetricAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 143
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: GenerateIV()
  nameWithType: SymmetricAlgorithm.GenerateIV()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenerateIV
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 144
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public abstract void GenerateIV()
    content.vb: Public MustOverride Sub GenerateIV
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: GenerateKey()
  nameWithType: SymmetricAlgorithm.GenerateKey()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenerateKey
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 145
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: public abstract void GenerateKey()
    content.vb: Public MustOverride Sub GenerateKey
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  id: ModeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: ModeValue
  nameWithType: SymmetricAlgorithm.ModeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ModeValue
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 146
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected CipherMode ModeValue
    content.vb: Protected ModeValue As CipherMode
    return:
      type: System.Security.Cryptography.CipherMode
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  id: PaddingValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: PaddingValue
  nameWithType: SymmetricAlgorithm.PaddingValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PaddingValue
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 147
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected PaddingMode PaddingValue
    content.vb: Protected PaddingValue As PaddingMode
    return:
      type: System.Security.Cryptography.PaddingMode
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  id: KeyValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: KeyValue
  nameWithType: SymmetricAlgorithm.KeyValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeyValue
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 148
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected byte[] KeyValue
    content.vb: Protected KeyValue As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.IVValue
  id: IVValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: IVValue
  nameWithType: SymmetricAlgorithm.IVValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.IVValue
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IVValue
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 149
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected byte[] IVValue
    content.vb: Protected IVValue As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  id: BlockSizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: BlockSizeValue
  nameWithType: SymmetricAlgorithm.BlockSizeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BlockSizeValue
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 150
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected int BlockSizeValue
    content.vb: Protected BlockSizeValue As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  id: KeySizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: KeySizeValue
  nameWithType: SymmetricAlgorithm.KeySizeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeySizeValue
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 151
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected int KeySizeValue
    content.vb: Protected KeySizeValue As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  id: LegalBlockSizesValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: LegalBlockSizesValue
  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LegalBlockSizesValue
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 152
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected KeySizes[] LegalBlockSizesValue
    content.vb: Protected LegalBlockSizesValue As KeySizes()
    return:
      type: System.Security.Cryptography.KeySizes[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  id: LegalKeySizesValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: LegalKeySizesValue
  nameWithType: SymmetricAlgorithm.LegalKeySizesValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LegalKeySizesValue
    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs
    startLine: 153
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  syntax:
    content: protected KeySizes[] LegalKeySizesValue
    content.vb: Protected LegalKeySizesValue As KeySizes()
    return:
      type: System.Security.Cryptography.KeySizes[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Security.Cryptography.KeySizes[]
  name: KeySizes[]
  nameWithType: KeySizes[]
  fullName: System.Security.Cryptography.KeySizes[]
  nameWithType.vb: KeySizes()
  fullname.vb: System.Security.Cryptography.KeySizes()
  name.vb: KeySizes()
  spec.csharp:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    nameWithType: KeySizes
    fullName: System.Security.Cryptography.KeySizes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    nameWithType: KeySizes
    fullName: System.Security.Cryptography.KeySizes
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Security.Cryptography.CipherMode
  commentId: T:System.Security.Cryptography.CipherMode
  parent: System.Security.Cryptography
  isExternal: false
  name: CipherMode
  nameWithType: CipherMode
  fullName: System.Security.Cryptography.CipherMode
- uid: System.Security.Cryptography.PaddingMode
  commentId: T:System.Security.Cryptography.PaddingMode
  parent: System.Security.Cryptography
  isExternal: false
  name: PaddingMode
  nameWithType: PaddingMode
  fullName: System.Security.Cryptography.PaddingMode
- uid: System.Security.Cryptography.ICryptoTransform
  commentId: T:System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
