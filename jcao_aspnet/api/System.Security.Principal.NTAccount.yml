items:
- uid: System.Security.Principal.NTAccount
  commentId: T:System.Security.Principal.NTAccount
  id: NTAccount
  parent: System.Security.Principal
  children:
  - System.Security.Principal.NTAccount.#ctor(System.String)
  - System.Security.Principal.NTAccount.#ctor(System.String,System.String)
  - System.Security.Principal.NTAccount.Equals(System.Object)
  - System.Security.Principal.NTAccount.GetHashCode
  - System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  - System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  - System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  - System.Security.Principal.NTAccount.ToString
  - System.Security.Principal.NTAccount.Translate(System.Type)
  - System.Security.Principal.NTAccount.Value
  langs:
  - csharp
  - vb
  name: NTAccount
  nameWithType: NTAccount
  fullName: System.Security.Principal.NTAccount
  type: Class
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NTAccount
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 58
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: 'public sealed class NTAccount : IdentityReference'
    content.vb: >-
      Public NotInheritable Class NTAccount
          Inherits IdentityReference
  inheritance:
  - System.Object
  - System.Security.Principal.IdentityReference
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Principal.NTAccount.#ctor(System.String)
  commentId: M:System.Security.Principal.NTAccount.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  - vb
  name: NTAccount(String)
  nameWithType: NTAccount.NTAccount(String)
  fullName: System.Security.Principal.NTAccount.NTAccount(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 60
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public NTAccount(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.NTAccount.#ctor(System.String,System.String)
  commentId: M:System.Security.Principal.NTAccount.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  - vb
  name: NTAccount(String, String)
  nameWithType: NTAccount.NTAccount(String, String)
  fullName: System.Security.Principal.NTAccount.NTAccount(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 61
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public NTAccount(string domainName, string accountName)
    content.vb: Public Sub New(domainName As String, accountName As String)
    parameters:
    - id: domainName
      type: System.String
    - id: accountName
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.NTAccount.Value
  commentId: P:System.Security.Principal.NTAccount.Value
  id: Value
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: NTAccount.Value
  fullName: System.Security.Principal.NTAccount.Value
  type: Property
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 62
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public override string Value { get; }
    content.vb: Public Overrides ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
  overridden: System.Security.Principal.IdentityReference.Value
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.Principal.NTAccount.Equals(System.Object)
  commentId: M:System.Security.Principal.NTAccount.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: NTAccount.Equals(Object)
  fullName: System.Security.Principal.NTAccount.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 63
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public override bool Equals(object o)
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Security.Principal.IdentityReference.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Principal.NTAccount.GetHashCode
  commentId: M:System.Security.Principal.NTAccount.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: NTAccount.GetHashCode()
  fullName: System.Security.Principal.NTAccount.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 64
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Security.Principal.IdentityReference.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  commentId: M:System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  - vb
  name: IsValidTargetType(Type)
  nameWithType: NTAccount.IsValidTargetType(Type)
  fullName: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsValidTargetType
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 65
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public override bool IsValidTargetType(Type targetType)
    content.vb: Public Overrides Function IsValidTargetType(targetType As Type) As Boolean
    parameters:
    - id: targetType
      type: System.Type
    return:
      type: System.Boolean
  overridden: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  commentId: M:System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  id: op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  - vb
  name: Equality(NTAccount, NTAccount)
  nameWithType: NTAccount.Equality(NTAccount, NTAccount)
  fullName: System.Security.Principal.NTAccount.Equality(System.Security.Principal.NTAccount, System.Security.Principal.NTAccount)
  type: Operator
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 66
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public static bool operator ==(NTAccount left, NTAccount right)
    content.vb: Public Shared Operator =(left As NTAccount, right As NTAccount) As Boolean
    parameters:
    - id: left
      type: System.Security.Principal.NTAccount
    - id: right
      type: System.Security.Principal.NTAccount
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  commentId: M:System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  id: op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  - vb
  name: Inequality(NTAccount, NTAccount)
  nameWithType: NTAccount.Inequality(NTAccount, NTAccount)
  fullName: System.Security.Principal.NTAccount.Inequality(System.Security.Principal.NTAccount, System.Security.Principal.NTAccount)
  type: Operator
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 67
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public static bool operator !=(NTAccount left, NTAccount right)
    content.vb: Public Shared Operator <>(left As NTAccount, right As NTAccount) As Boolean
    parameters:
    - id: left
      type: System.Security.Principal.NTAccount
    - id: right
      type: System.Security.Principal.NTAccount
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Principal.NTAccount.ToString
  commentId: M:System.Security.Principal.NTAccount.ToString
  id: ToString
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: NTAccount.ToString()
  fullName: System.Security.Principal.NTAccount.ToString()
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 68
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Security.Principal.IdentityReference.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Principal.NTAccount.Translate(System.Type)
  commentId: M:System.Security.Principal.NTAccount.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  - vb
  name: Translate(Type)
  nameWithType: NTAccount.Translate(Type)
  fullName: System.Security.Principal.NTAccount.Translate(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Translate
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 69
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public override IdentityReference Translate(Type targetType)
    content.vb: Public Overrides Function Translate(targetType As Type) As IdentityReference
    parameters:
    - id: targetType
      type: System.Type
    return:
      type: System.Security.Principal.IdentityReference
  overridden: System.Security.Principal.IdentityReference.Translate(System.Type)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Principal
  commentId: N:System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  nameWithType: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Principal.IdentityReference
  commentId: T:System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.IdentityReference.Value
  commentId: P:System.Security.Principal.IdentityReference.Value
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Value
  nameWithType: IdentityReference.Value
  fullName: System.Security.Principal.IdentityReference.Value
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  commentId: M:System.Security.Principal.IdentityReference.Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  isExternal: true
  name: Equals(Object)
  nameWithType: IdentityReference.Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(System.Object)
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.Equals(System.Object)
    name: Equals
    nameWithType: IdentityReference.Equals
    fullName: System.Security.Principal.IdentityReference.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.Equals(System.Object)
    name: Equals
    nameWithType: IdentityReference.Equals
    fullName: System.Security.Principal.IdentityReference.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IdentityReference.GetHashCode
  commentId: M:System.Security.Principal.IdentityReference.GetHashCode
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: GetHashCode()
  nameWithType: IdentityReference.GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.GetHashCode
    name: GetHashCode
    nameWithType: IdentityReference.GetHashCode
    fullName: System.Security.Principal.IdentityReference.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.GetHashCode
    name: GetHashCode
    nameWithType: IdentityReference.GetHashCode
    fullName: System.Security.Principal.IdentityReference.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  commentId: M:System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: true
  name: IsValidTargetType(Type)
  nameWithType: IdentityReference.IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
    name: IsValidTargetType
    nameWithType: IdentityReference.IsValidTargetType
    fullName: System.Security.Principal.IdentityReference.IsValidTargetType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
    name: IsValidTargetType
    nameWithType: IdentityReference.IsValidTargetType
    fullName: System.Security.Principal.IdentityReference.IsValidTargetType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.NTAccount
  commentId: T:System.Security.Principal.NTAccount
  parent: System.Security.Principal
  isExternal: false
  name: NTAccount
  nameWithType: NTAccount
  fullName: System.Security.Principal.NTAccount
- uid: System.Security.Principal.IdentityReference.ToString
  commentId: M:System.Security.Principal.IdentityReference.ToString
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: ToString()
  nameWithType: IdentityReference.ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.ToString
    name: ToString
    nameWithType: IdentityReference.ToString
    fullName: System.Security.Principal.IdentityReference.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.ToString
    name: ToString
    nameWithType: IdentityReference.ToString
    fullName: System.Security.Principal.IdentityReference.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  commentId: M:System.Security.Principal.IdentityReference.Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: true
  name: Translate(Type)
  nameWithType: IdentityReference.Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(System.Type)
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.Translate(System.Type)
    name: Translate
    nameWithType: IdentityReference.Translate
    fullName: System.Security.Principal.IdentityReference.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.Translate(System.Type)
    name: Translate
    nameWithType: IdentityReference.Translate
    fullName: System.Security.Principal.IdentityReference.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
