items:
- uid: System.Security.Principal.SecurityIdentifier
  commentId: T:System.Security.Principal.SecurityIdentifier
  id: SecurityIdentifier
  parent: System.Security.Principal
  children:
  - System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  - System.Security.Principal.SecurityIdentifier.AccountDomainSid
  - System.Security.Principal.SecurityIdentifier.BinaryLength
  - System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  - System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.Principal.SecurityIdentifier.GetHashCode
  - System.Security.Principal.SecurityIdentifier.IsAccountSid
  - System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  - System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  - System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  - System.Security.Principal.SecurityIdentifier.MinBinaryLength
  - System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.ToString
  - System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  - System.Security.Principal.SecurityIdentifier.Value
  langs:
  - csharp
  - vb
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
  type: Class
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SecurityIdentifier
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 71
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: 'public sealed class SecurityIdentifier : IdentityReference, IComparable<SecurityIdentifier>'
    content.vb: >-
      Public NotInheritable Class SecurityIdentifier
          Inherits IdentityReference
          Implements IComparable(Of SecurityIdentifier)
  inheritance:
  - System.Object
  - System.Security.Principal.IdentityReference
  implements:
  - System.IComparable{System.Security.Principal.SecurityIdentifier}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  commentId: F:System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  id: MaxBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: MaxBinaryLength
  nameWithType: SecurityIdentifier.MaxBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  type: Field
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxBinaryLength
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 73
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public static readonly int MaxBinaryLength
    content.vb: Public Shared ReadOnly MaxBinaryLength As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  commentId: F:System.Security.Principal.SecurityIdentifier.MinBinaryLength
  id: MinBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: MinBinaryLength
  nameWithType: SecurityIdentifier.MinBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  type: Field
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinBinaryLength
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 74
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public static readonly int MinBinaryLength
    content.vb: Public Shared ReadOnly MinBinaryLength As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  commentId: M:System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Int32)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: SecurityIdentifier(Byte[], Int32)
  nameWithType: SecurityIdentifier.SecurityIdentifier(Byte[], Int32)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(System.Byte[], System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 75
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public SecurityIdentifier(byte[] binaryForm, int offset)
    content.vb: Public Sub New(binaryForm As Byte(), offset As Integer)
    parameters:
    - id: binaryForm
      type: System.Byte[]
    - id: offset
      type: System.Int32
  nameWithType.vb: SecurityIdentifier.SecurityIdentifier(Byte(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(System.Byte(), System.Int32)
  name.vb: SecurityIdentifier(Byte(), Int32)
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  commentId: M:System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: SecurityIdentifier(IntPtr)
  nameWithType: SecurityIdentifier.SecurityIdentifier(IntPtr)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(System.IntPtr)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 76
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public SecurityIdentifier(IntPtr binaryForm)
    content.vb: Public Sub New(binaryForm As IntPtr)
    parameters:
    - id: binaryForm
      type: System.IntPtr
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  commentId: M:System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  id: '#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: SecurityIdentifier(WellKnownSidType, SecurityIdentifier)
  nameWithType: SecurityIdentifier.SecurityIdentifier(WellKnownSidType, SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(System.Security.Principal.WellKnownSidType, System.Security.Principal.SecurityIdentifier)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 77
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public SecurityIdentifier(WellKnownSidType sidType, SecurityIdentifier domainSid)
    content.vb: Public Sub New(sidType As WellKnownSidType, domainSid As SecurityIdentifier)
    parameters:
    - id: sidType
      type: System.Security.Principal.WellKnownSidType
    - id: domainSid
      type: System.Security.Principal.SecurityIdentifier
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  commentId: M:System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: SecurityIdentifier(String)
  nameWithType: SecurityIdentifier.SecurityIdentifier(String)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 78
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public SecurityIdentifier(string sddlForm)
    content.vb: Public Sub New(sddlForm As String)
    parameters:
    - id: sddlForm
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  commentId: P:System.Security.Principal.SecurityIdentifier.AccountDomainSid
  id: AccountDomainSid
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
  fullName: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  type: Property
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccountDomainSid
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 79
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public SecurityIdentifier AccountDomainSid { get; }
    content.vb: Public ReadOnly Property AccountDomainSid As SecurityIdentifier
    parameters: []
    return:
      type: System.Security.Principal.SecurityIdentifier
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength
  commentId: P:System.Security.Principal.SecurityIdentifier.BinaryLength
  id: BinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.BinaryLength
  type: Property
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinaryLength
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 80
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public int BinaryLength { get; }
    content.vb: Public ReadOnly Property BinaryLength As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Principal.SecurityIdentifier.Value
  commentId: P:System.Security.Principal.SecurityIdentifier.Value
  id: Value
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SecurityIdentifier.Value
  fullName: System.Security.Principal.SecurityIdentifier.Value
  type: Property
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 81
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public override string Value { get; }
    content.vb: Public Overrides ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
  overridden: System.Security.Principal.IdentityReference.Value
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  commentId: M:System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  id: CompareTo(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: CompareTo(SecurityIdentifier)
  nameWithType: SecurityIdentifier.CompareTo(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 82
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public int CompareTo(SecurityIdentifier sid)
    content.vb: Public Function CompareTo(sid As SecurityIdentifier) As Integer
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  commentId: M:System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SecurityIdentifier.Equals(Object)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 83
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public override bool Equals(object o)
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Security.Principal.IdentityReference.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  commentId: M:System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  id: Equals(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: Equals(SecurityIdentifier)
  nameWithType: SecurityIdentifier.Equals(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 84
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public bool Equals(SecurityIdentifier sid)
    content.vb: Public Function Equals(sid As SecurityIdentifier) As Boolean
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  commentId: M:System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: GetBinaryForm(Byte[], Int32)
  nameWithType: SecurityIdentifier.GetBinaryForm(Byte[], Int32)
  fullName: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBinaryForm
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 85
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public void GetBinaryForm(byte[] binaryForm, int offset)
    content.vb: Public Sub GetBinaryForm(binaryForm As Byte(), offset As Integer)
    parameters:
    - id: binaryForm
      type: System.Byte[]
    - id: offset
      type: System.Int32
  nameWithType.vb: SecurityIdentifier.GetBinaryForm(Byte(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte(), System.Int32)
  name.vb: GetBinaryForm(Byte(), Int32)
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode
  commentId: M:System.Security.Principal.SecurityIdentifier.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SecurityIdentifier.GetHashCode()
  fullName: System.Security.Principal.SecurityIdentifier.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 86
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Security.Principal.IdentityReference.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid
  commentId: M:System.Security.Principal.SecurityIdentifier.IsAccountSid
  id: IsAccountSid
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: IsAccountSid()
  nameWithType: SecurityIdentifier.IsAccountSid()
  fullName: System.Security.Principal.SecurityIdentifier.IsAccountSid()
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsAccountSid
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 87
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public bool IsAccountSid()
    content.vb: Public Function IsAccountSid As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  commentId: M:System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  id: IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: IsEqualDomainSid(SecurityIdentifier)
  nameWithType: SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEqualDomainSid
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 88
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public bool IsEqualDomainSid(SecurityIdentifier sid)
    content.vb: Public Function IsEqualDomainSid(sid As SecurityIdentifier) As Boolean
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  commentId: M:System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: IsValidTargetType(Type)
  nameWithType: SecurityIdentifier.IsValidTargetType(Type)
  fullName: System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsValidTargetType
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 89
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public override bool IsValidTargetType(Type targetType)
    content.vb: Public Overrides Function IsValidTargetType(targetType As Type) As Boolean
    parameters:
    - id: targetType
      type: System.Type
    return:
      type: System.Boolean
  overridden: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  commentId: M:System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  id: IsWellKnown(System.Security.Principal.WellKnownSidType)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: IsWellKnown(WellKnownSidType)
  nameWithType: SecurityIdentifier.IsWellKnown(WellKnownSidType)
  fullName: System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsWellKnown
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 90
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public bool IsWellKnown(WellKnownSidType type)
    content.vb: Public Function IsWellKnown(type As WellKnownSidType) As Boolean
    parameters:
    - id: type
      type: System.Security.Principal.WellKnownSidType
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  commentId: M:System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  id: op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: Equality(SecurityIdentifier, SecurityIdentifier)
  nameWithType: SecurityIdentifier.Equality(SecurityIdentifier, SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.Equality(System.Security.Principal.SecurityIdentifier, System.Security.Principal.SecurityIdentifier)
  type: Operator
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 91
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public static bool operator ==(SecurityIdentifier left, SecurityIdentifier right)
    content.vb: Public Shared Operator =(left As SecurityIdentifier, right As SecurityIdentifier) As Boolean
    parameters:
    - id: left
      type: System.Security.Principal.SecurityIdentifier
    - id: right
      type: System.Security.Principal.SecurityIdentifier
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  commentId: M:System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  id: op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: Inequality(SecurityIdentifier, SecurityIdentifier)
  nameWithType: SecurityIdentifier.Inequality(SecurityIdentifier, SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.Inequality(System.Security.Principal.SecurityIdentifier, System.Security.Principal.SecurityIdentifier)
  type: Operator
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 92
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public static bool operator !=(SecurityIdentifier left, SecurityIdentifier right)
    content.vb: Public Shared Operator <>(left As SecurityIdentifier, right As SecurityIdentifier) As Boolean
    parameters:
    - id: left
      type: System.Security.Principal.SecurityIdentifier
    - id: right
      type: System.Security.Principal.SecurityIdentifier
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Principal.SecurityIdentifier.ToString
  commentId: M:System.Security.Principal.SecurityIdentifier.ToString
  id: ToString
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SecurityIdentifier.ToString()
  fullName: System.Security.Principal.SecurityIdentifier.ToString()
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 93
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Security.Principal.IdentityReference.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  commentId: M:System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  - vb
  name: Translate(Type)
  nameWithType: SecurityIdentifier.Translate(Type)
  fullName: System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Translate
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 94
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  syntax:
    content: public override IdentityReference Translate(Type targetType)
    content.vb: Public Overrides Function Translate(targetType As Type) As IdentityReference
    parameters:
    - id: targetType
      type: System.Type
    return:
      type: System.Security.Principal.IdentityReference
  overridden: System.Security.Principal.IdentityReference.Translate(System.Type)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Principal
  commentId: N:System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  nameWithType: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Principal.IdentityReference
  commentId: T:System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.IComparable{System.Security.Principal.SecurityIdentifier}
  commentId: '!:System.IComparable{System.Security.Principal.SecurityIdentifier}'
  definition: System.IComparable`1
  name: IComparable<SecurityIdentifier>
  nameWithType: IComparable<SecurityIdentifier>
  fullName: System.IComparable<System.Security.Principal.SecurityIdentifier>
  nameWithType.vb: IComparable(Of SecurityIdentifier)
  fullname.vb: System.IComparable(Of System.Security.Principal.SecurityIdentifier)
  name.vb: IComparable(Of SecurityIdentifier)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Principal.SecurityIdentifier
    name: SecurityIdentifier
    nameWithType: SecurityIdentifier
    fullName: System.Security.Principal.SecurityIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Principal.SecurityIdentifier
    name: SecurityIdentifier
    nameWithType: SecurityIdentifier
    fullName: System.Security.Principal.SecurityIdentifier
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: false
  name: IComparable<>
  nameWithType: IComparable<>
  fullName: System.IComparable<>
  nameWithType.vb: IComparable(Of )
  fullname.vb: System.IComparable(Of )
  name.vb: IComparable(Of )
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Principal.WellKnownSidType
  commentId: T:System.Security.Principal.WellKnownSidType
  parent: System.Security.Principal
  isExternal: false
  name: WellKnownSidType
  nameWithType: WellKnownSidType
  fullName: System.Security.Principal.WellKnownSidType
- uid: System.Security.Principal.SecurityIdentifier
  commentId: T:System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.IdentityReference.Value
  commentId: P:System.Security.Principal.IdentityReference.Value
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Value
  nameWithType: IdentityReference.Value
  fullName: System.Security.Principal.IdentityReference.Value
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  commentId: M:System.Security.Principal.IdentityReference.Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  isExternal: true
  name: Equals(Object)
  nameWithType: IdentityReference.Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(System.Object)
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.Equals(System.Object)
    name: Equals
    nameWithType: IdentityReference.Equals
    fullName: System.Security.Principal.IdentityReference.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.Equals(System.Object)
    name: Equals
    nameWithType: IdentityReference.Equals
    fullName: System.Security.Principal.IdentityReference.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IdentityReference.GetHashCode
  commentId: M:System.Security.Principal.IdentityReference.GetHashCode
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: GetHashCode()
  nameWithType: IdentityReference.GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.GetHashCode
    name: GetHashCode
    nameWithType: IdentityReference.GetHashCode
    fullName: System.Security.Principal.IdentityReference.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.GetHashCode
    name: GetHashCode
    nameWithType: IdentityReference.GetHashCode
    fullName: System.Security.Principal.IdentityReference.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  commentId: M:System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: true
  name: IsValidTargetType(Type)
  nameWithType: IdentityReference.IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
    name: IsValidTargetType
    nameWithType: IdentityReference.IsValidTargetType
    fullName: System.Security.Principal.IdentityReference.IsValidTargetType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
    name: IsValidTargetType
    nameWithType: IdentityReference.IsValidTargetType
    fullName: System.Security.Principal.IdentityReference.IsValidTargetType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.IdentityReference.ToString
  commentId: M:System.Security.Principal.IdentityReference.ToString
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: ToString()
  nameWithType: IdentityReference.ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.ToString
    name: ToString
    nameWithType: IdentityReference.ToString
    fullName: System.Security.Principal.IdentityReference.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.ToString
    name: ToString
    nameWithType: IdentityReference.ToString
    fullName: System.Security.Principal.IdentityReference.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  commentId: M:System.Security.Principal.IdentityReference.Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: true
  name: Translate(Type)
  nameWithType: IdentityReference.Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(System.Type)
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.Translate(System.Type)
    name: Translate
    nameWithType: IdentityReference.Translate
    fullName: System.Security.Principal.IdentityReference.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.Translate(System.Type)
    name: Translate
    nameWithType: IdentityReference.Translate
    fullName: System.Security.Principal.IdentityReference.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
