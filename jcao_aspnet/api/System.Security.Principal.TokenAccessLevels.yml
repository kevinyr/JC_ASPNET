items:
- uid: System.Security.Principal.TokenAccessLevels
  id: TokenAccessLevels
  parent: System.Security.Principal
  children:
  - System.Security.Principal.TokenAccessLevels.AdjustDefault
  - System.Security.Principal.TokenAccessLevels.AdjustGroups
  - System.Security.Principal.TokenAccessLevels.AdjustPrivileges
  - System.Security.Principal.TokenAccessLevels.AdjustSessionId
  - System.Security.Principal.TokenAccessLevels.AllAccess
  - System.Security.Principal.TokenAccessLevels.AssignPrimary
  - System.Security.Principal.TokenAccessLevels.Duplicate
  - System.Security.Principal.TokenAccessLevels.Impersonate
  - System.Security.Principal.TokenAccessLevels.MaximumAllowed
  - System.Security.Principal.TokenAccessLevels.Query
  - System.Security.Principal.TokenAccessLevels.QuerySource
  - System.Security.Principal.TokenAccessLevels.Read
  - System.Security.Principal.TokenAccessLevels.Write
  name: TokenAccessLevels
  fullName: System.Security.Principal.TokenAccessLevels
  type: Enum
  source:
    remote: &o0
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 6
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Defines the privileges of the user account associated with the access token.
  syntax:
    content: 'public enum TokenAccessLevels : int'
    content.vb: Public Enum TokenAccessLevels As Integer
- uid: System.Security.Principal.TokenAccessLevels.AdjustDefault
  id: AdjustDefault
  parent: System.Security.Principal.TokenAccessLevels
  name: AdjustDefault
  fullName: System.Security.Principal.TokenAccessLevels.AdjustDefault
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 16
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The user can change the default owner, primary group, or discretionary access control list (DACL) of the token.
  syntax:
    content: AdjustDefault = null
    content.vb: AdjustDefault = Nothing
- uid: System.Security.Principal.TokenAccessLevels.AdjustGroups
  id: AdjustGroups
  parent: System.Security.Principal.TokenAccessLevels
  name: AdjustGroups
  fullName: System.Security.Principal.TokenAccessLevels.AdjustGroups
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 15
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The user can change the attributes of the groups in the token.
  syntax:
    content: AdjustGroups = null
    content.vb: AdjustGroups = Nothing
- uid: System.Security.Principal.TokenAccessLevels.AdjustPrivileges
  id: AdjustPrivileges
  parent: System.Security.Principal.TokenAccessLevels
  name: AdjustPrivileges
  fullName: System.Security.Principal.TokenAccessLevels.AdjustPrivileges
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 14
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The user can enable or disable privileges in the token.
  syntax:
    content: AdjustPrivileges = null
    content.vb: AdjustPrivileges = Nothing
- uid: System.Security.Principal.TokenAccessLevels.AdjustSessionId
  id: AdjustSessionId
  parent: System.Security.Principal.TokenAccessLevels
  name: AdjustSessionId
  fullName: System.Security.Principal.TokenAccessLevels.AdjustSessionId
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 17
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The user can adjust the session identifier of the token.
  syntax:
    content: AdjustSessionId = null
    content.vb: AdjustSessionId = Nothing
- uid: System.Security.Principal.TokenAccessLevels.AllAccess
  id: AllAccess
  parent: System.Security.Principal.TokenAccessLevels
  name: AllAccess
  fullName: System.Security.Principal.TokenAccessLevels.AllAccess
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 23
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The user has all possible access to the token.
  syntax:
    content: AllAccess = null
    content.vb: AllAccess = Nothing
- uid: System.Security.Principal.TokenAccessLevels.AssignPrimary
  id: AssignPrimary
  parent: System.Security.Principal.TokenAccessLevels
  name: AssignPrimary
  fullName: System.Security.Principal.TokenAccessLevels.AssignPrimary
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 9
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The user can attach a primary token to a process.
  syntax:
    content: AssignPrimary = null
    content.vb: AssignPrimary = Nothing
- uid: System.Security.Principal.TokenAccessLevels.Duplicate
  id: Duplicate
  parent: System.Security.Principal.TokenAccessLevels
  name: Duplicate
  fullName: System.Security.Principal.TokenAccessLevels.Duplicate
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 10
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The user can duplicate the token.
  syntax:
    content: Duplicate = null
    content.vb: Duplicate = Nothing
- uid: System.Security.Principal.TokenAccessLevels.Impersonate
  id: Impersonate
  parent: System.Security.Principal.TokenAccessLevels
  name: Impersonate
  fullName: System.Security.Principal.TokenAccessLevels.Impersonate
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 11
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The user can impersonate a client.
  syntax:
    content: Impersonate = null
    content.vb: Impersonate = Nothing
- uid: System.Security.Principal.TokenAccessLevels.MaximumAllowed
  id: MaximumAllowed
  parent: System.Security.Principal.TokenAccessLevels
  name: MaximumAllowed
  fullName: System.Security.Principal.TokenAccessLevels.MaximumAllowed
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 34
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The maximum value that can be assigned for the <xref href="System.Security.Principal.TokenAccessLevels" data-throw-if-not-resolved="false"></xref> enumeration.
  syntax:
    content: MaximumAllowed = null
    content.vb: MaximumAllowed = Nothing
- uid: System.Security.Principal.TokenAccessLevels.Query
  id: Query
  parent: System.Security.Principal.TokenAccessLevels
  name: Query
  fullName: System.Security.Principal.TokenAccessLevels.Query
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 12
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The user can query the token.
  syntax:
    content: Query = null
    content.vb: Query = Nothing
- uid: System.Security.Principal.TokenAccessLevels.QuerySource
  id: QuerySource
  parent: System.Security.Principal.TokenAccessLevels
  name: QuerySource
  fullName: System.Security.Principal.TokenAccessLevels.QuerySource
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 13
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The user can query the source of the token.
  syntax:
    content: QuerySource = null
    content.vb: QuerySource = Nothing
- uid: System.Security.Principal.TokenAccessLevels.Read
  id: Read
  parent: System.Security.Principal.TokenAccessLevels
  name: Read
  fullName: System.Security.Principal.TokenAccessLevels.Read
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 19
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The user has standard read rights and the <xref href="System.Security.Principal.TokenAccessLevels.Query" data-throw-if-not-resolved="false"></xref> privilege for the token.
  syntax:
    content: Read = null
    content.vb: Read = Nothing
- uid: System.Security.Principal.TokenAccessLevels.Write
  id: Write
  parent: System.Security.Principal.TokenAccessLevels
  name: Write
  fullName: System.Security.Principal.TokenAccessLevels.Write
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/TokenAccessLevels.cs
    startLine: 21
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: The user has standard write rights and the <xref href="System.Security.Principal.TokenAccessLevels.AdjustPrivileges,F:System.Security.Principal.TokenAccessLevels.AdjustGroups" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Security.Principal.TokenAccessLevels.AdjustDefault" data-throw-if-not-resolved="false"></xref> privileges for the token.
  syntax:
    content: Write = null
    content.vb: Write = Nothing
references:
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
