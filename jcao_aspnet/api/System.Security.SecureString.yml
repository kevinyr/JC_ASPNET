items:
- uid: System.Security.SecureString
  commentId: T:System.Security.SecureString
  id: SecureString
  parent: System.Security
  children:
  - System.Security.SecureString.#ctor
  - System.Security.SecureString.#ctor(System.Char*,System.Int32)
  - System.Security.SecureString.AppendChar(System.Char)
  - System.Security.SecureString.Clear
  - System.Security.SecureString.Copy
  - System.Security.SecureString.Dispose
  - System.Security.SecureString.InsertAt(System.Int32,System.Char)
  - System.Security.SecureString.IsReadOnly
  - System.Security.SecureString.Length
  - System.Security.SecureString.MakeReadOnly
  - System.Security.SecureString.RemoveAt(System.Int32)
  - System.Security.SecureString.SetAt(System.Int32,System.Char)
  langs:
  - csharp
  - vb
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
  type: Class
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SecureString
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 9
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: 'public sealed class SecureString : IDisposable'
    content.vb: >-
      Public NotInheritable Class SecureString
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.SecureString.#ctor
  commentId: M:System.Security.SecureString.#ctor
  id: '#ctor'
  parent: System.Security.SecureString
  langs:
  - csharp
  - vb
  name: SecureString()
  nameWithType: SecureString.SecureString()
  fullName: System.Security.SecureString.SecureString()
  type: Constructor
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 11
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: public SecureString()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.SecureString.#ctor(System.Char*,System.Int32)
  commentId: M:System.Security.SecureString.#ctor(System.Char*,System.Int32)
  id: '#ctor(System.Char*,System.Int32)'
  parent: System.Security.SecureString
  langs:
  - csharp
  - vb
  name: SecureString(Char*, Int32)
  nameWithType: SecureString.SecureString(Char*, Int32)
  fullName: System.Security.SecureString.SecureString(System.Char*, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 12
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: public SecureString(char *value, int length)
    content.vb: Public Sub New(value As Char *, length As Integer)
    parameters:
    - id: value
      type: System.Char*
    - id: length
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.SecureString.Length
  commentId: P:System.Security.SecureString.Length
  id: Length
  parent: System.Security.SecureString
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: SecureString.Length
  fullName: System.Security.SecureString.Length
  type: Property
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Length
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 14
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: public int Length { get; }
    content.vb: Public ReadOnly Property Length As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.SecureString.AppendChar(System.Char)
  commentId: M:System.Security.SecureString.AppendChar(System.Char)
  id: AppendChar(System.Char)
  parent: System.Security.SecureString
  langs:
  - csharp
  - vb
  name: AppendChar(Char)
  nameWithType: SecureString.AppendChar(Char)
  fullName: System.Security.SecureString.AppendChar(System.Char)
  type: Method
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AppendChar
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 15
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: public void AppendChar(char c)
    content.vb: Public Sub AppendChar(c As Char)
    parameters:
    - id: c
      type: System.Char
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.SecureString.Clear
  commentId: M:System.Security.SecureString.Clear
  id: Clear
  parent: System.Security.SecureString
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: SecureString.Clear()
  fullName: System.Security.SecureString.Clear()
  type: Method
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 16
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.SecureString.Copy
  commentId: M:System.Security.SecureString.Copy
  id: Copy
  parent: System.Security.SecureString
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: SecureString.Copy()
  fullName: System.Security.SecureString.Copy()
  type: Method
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Copy
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 17
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: public SecureString Copy()
    content.vb: Public Function Copy As SecureString
    return:
      type: System.Security.SecureString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.SecureString.Dispose
  commentId: M:System.Security.SecureString.Dispose
  id: Dispose
  parent: System.Security.SecureString
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SecureString.Dispose()
  fullName: System.Security.SecureString.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 18
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.SecureString.InsertAt(System.Int32,System.Char)
  commentId: M:System.Security.SecureString.InsertAt(System.Int32,System.Char)
  id: InsertAt(System.Int32,System.Char)
  parent: System.Security.SecureString
  langs:
  - csharp
  - vb
  name: InsertAt(Int32, Char)
  nameWithType: SecureString.InsertAt(Int32, Char)
  fullName: System.Security.SecureString.InsertAt(System.Int32, System.Char)
  type: Method
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InsertAt
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 19
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: public void InsertAt(int index, char c)
    content.vb: Public Sub InsertAt(index As Integer, c As Char)
    parameters:
    - id: index
      type: System.Int32
    - id: c
      type: System.Char
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.SecureString.IsReadOnly
  commentId: M:System.Security.SecureString.IsReadOnly
  id: IsReadOnly
  parent: System.Security.SecureString
  langs:
  - csharp
  - vb
  name: IsReadOnly()
  nameWithType: SecureString.IsReadOnly()
  fullName: System.Security.SecureString.IsReadOnly()
  type: Method
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 20
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: public bool IsReadOnly()
    content.vb: Public Function IsReadOnly As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.SecureString.MakeReadOnly
  commentId: M:System.Security.SecureString.MakeReadOnly
  id: MakeReadOnly
  parent: System.Security.SecureString
  langs:
  - csharp
  - vb
  name: MakeReadOnly()
  nameWithType: SecureString.MakeReadOnly()
  fullName: System.Security.SecureString.MakeReadOnly()
  type: Method
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MakeReadOnly
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 21
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: public void MakeReadOnly()
    content.vb: Public Sub MakeReadOnly
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.SecureString.RemoveAt(System.Int32)
  commentId: M:System.Security.SecureString.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Security.SecureString
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: SecureString.RemoveAt(Int32)
  fullName: System.Security.SecureString.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 22
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: public void RemoveAt(int index)
    content.vb: Public Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.SecureString.SetAt(System.Int32,System.Char)
  commentId: M:System.Security.SecureString.SetAt(System.Int32,System.Char)
  id: SetAt(System.Int32,System.Char)
  parent: System.Security.SecureString
  langs:
  - csharp
  - vb
  name: SetAt(Int32, Char)
  nameWithType: SecureString.SetAt(Int32, Char)
  fullName: System.Security.SecureString.SetAt(System.Int32, System.Char)
  type: Method
  source:
    remote:
      path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAt
    path: src/System.Security.SecureString/ref/System.Security.SecureString.cs
    startLine: 23
  assemblies:
  - System.Security.SecureString
  namespace: System.Security
  syntax:
    content: public void SetAt(int index, char c)
    content.vb: Public Sub SetAt(index As Integer, c As Char)
    parameters:
    - id: index
      type: System.Int32
    - id: c
      type: System.Char
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security
  commentId: N:System.Security
  isExternal: false
  name: System.Security
  nameWithType: System.Security
  fullName: System.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char*
  name: Char*
  nameWithType: Char*
  fullName: System.Char*
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: '*'
    nameWithType: '*'
    fullName: '*'
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Security.SecureString
  commentId: T:System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
