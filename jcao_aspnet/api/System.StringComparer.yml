items:
- uid: System.StringComparer
  id: StringComparer
  parent: System
  children:
  - System.StringComparer.#ctor
  - System.StringComparer.Compare(System.String,System.String)
  - System.StringComparer.CurrentCulture
  - System.StringComparer.CurrentCultureIgnoreCase
  - System.StringComparer.Equals(System.String,System.String)
  - System.StringComparer.GetHashCode(System.String)
  - System.StringComparer.Ordinal
  - System.StringComparer.OrdinalIgnoreCase
  name: StringComparer
  fullName: System.StringComparer
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/StringComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 14
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Represents a string comparison operation that uses specific case and culture-based or ordinal comparison rules.
  syntax:
    content: 'public abstract class StringComparer : Collections.Generic.IComparer<string>, Collections.Generic.IEqualityComparer<string>, Collections.IComparer, Collections.IEqualityComparer'
    content.vb: Public MustInherit Class StringComparer Inherits Collections.Generic.IComparer(Of String) Implements Collections.Generic.IEqualityComparer(Of String), Collections.IComparer, Collections.IEqualityComparer
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEqualityComparer{System.String}
  - System.Collections.IComparer
  - System.Collections.IEqualityComparer
- uid: System.StringComparer.#ctor
  id: '#ctor'
  parent: System.StringComparer
  name: StringComparer()
  fullName: System.StringComparer.StringComparer()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
    startLine: 554
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Initializes a new instance of the <xref href="System.StringComparer" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected StringComparer()
    content.vb: Protected Sub New
- uid: System.StringComparer.CurrentCulture
  id: CurrentCulture
  parent: System.StringComparer
  name: CurrentCulture
  fullName: System.StringComparer.CurrentCulture
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 36
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Gets a <xref href="System.StringComparer" data-throw-if-not-resolved="false"></xref> object that performs a case-sensitive string comparison using the word comparison rules of the current culture.
  syntax:
    content: public static StringComparer CurrentCulture { get; }
    content.vb: Public Shared ReadOnly Property CurrentCulture As StringComparer
    parameters: []
    return:
      type: System.StringComparer
      description: A new <xref href="System.StringComparer" data-throw-if-not-resolved="false"></xref> object.
- uid: System.StringComparer.CurrentCultureIgnoreCase
  id: CurrentCultureIgnoreCase
  parent: System.StringComparer
  name: CurrentCultureIgnoreCase
  fullName: System.StringComparer.CurrentCultureIgnoreCase
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 43
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Gets a <xref href="System.StringComparer" data-throw-if-not-resolved="false"></xref> object that performs case-insensitive string comparisons using the word comparison rules of the current culture.
  syntax:
    content: public static StringComparer CurrentCultureIgnoreCase { get; }
    content.vb: Public Shared ReadOnly Property CurrentCultureIgnoreCase As StringComparer
    parameters: []
    return:
      type: System.StringComparer
      description: A new <xref href="System.StringComparer" data-throw-if-not-resolved="false"></xref> object.
- uid: System.StringComparer.Ordinal
  id: Ordinal
  parent: System.StringComparer
  name: Ordinal
  fullName: System.StringComparer.Ordinal
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 50
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Gets a <xref href="System.StringComparer" data-throw-if-not-resolved="false"></xref> object that performs a case-sensitive ordinal string comparison.
  syntax:
    content: public static StringComparer Ordinal { get; }
    content.vb: Public Shared ReadOnly Property Ordinal As StringComparer
    parameters: []
    return:
      type: System.StringComparer
      description: A <xref href="System.StringComparer" data-throw-if-not-resolved="false"></xref> object.
- uid: System.StringComparer.OrdinalIgnoreCase
  id: OrdinalIgnoreCase
  parent: System.StringComparer
  name: OrdinalIgnoreCase
  fullName: System.StringComparer.OrdinalIgnoreCase
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 57
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Gets a <xref href="System.StringComparer" data-throw-if-not-resolved="false"></xref> object that performs a case-insensitive ordinal string comparison.
  syntax:
    content: public static StringComparer OrdinalIgnoreCase { get; }
    content.vb: Public Shared ReadOnly Property OrdinalIgnoreCase As StringComparer
    parameters: []
    return:
      type: System.StringComparer
      description: A <xref href="System.StringComparer" data-throw-if-not-resolved="false"></xref> object.
- uid: System.StringComparer.Compare(System.String,System.String)
  id: Compare(System.String,System.String)
  parent: System.StringComparer
  name: Compare(String, String)
  fullName: System.StringComparer.Compare(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 123
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: When overridden in a derived class, compares two strings and returns an indication of their relative sort order.
  syntax:
    content: public abstract int Compare(string x, string y)
    content.vb: Public MustOverride Function Compare(x As String, y As String) As Integer
    parameters:
    - id: x
      type: System.String
      description: A string to compare to *y*.
    - id: y
      type: System.String
      description: A string to compare to *x*.
    return:
      type: System.Int32
      description: A signed integer that indicates the relative values of *x* and *y*, as shown in the following table.ValueMeaningLess than zero*x* precedes *y* in the sort order.-or-*x* is null and *y* is not null.Zero*x* is equal to *y*.-or-*x* and *y* are both null. Greater than zero*x* follows *y* in the sort order.-or-*y* is null and *x* is not null.
- uid: System.StringComparer.Equals(System.String,System.String)
  id: Equals(System.String,System.String)
  parent: System.StringComparer
  name: Equals(String, String)
  fullName: System.StringComparer.Equals(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 124
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: When overridden in a derived class, indicates whether two strings are equal.
  syntax:
    content: public abstract bool Equals(string x, string y)
    content.vb: Public MustOverride Function Equals(x As String, y As String) As Boolean
    parameters:
    - id: x
      type: System.String
      description: A string to compare to *y*.
    - id: y
      type: System.String
      description: A string to compare to *x*.
    return:
      type: System.Boolean
      description: true if *x* and *y* refer to the same object, or *x* and *y* are equal, or *x* and *y* are null; otherwise, false.
- uid: System.StringComparer.GetHashCode(System.String)
  id: GetHashCode(System.String)
  parent: System.StringComparer
  name: GetHashCode(String)
  fullName: System.StringComparer.GetHashCode(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 125
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: When overridden in a derived class, gets the hash code for the specified string.
  syntax:
    content: public abstract int GetHashCode(string obj)
    content.vb: Public MustOverride Function GetHashCode(obj As String) As Integer
    parameters:
    - id: obj
      type: System.String
      description: A string.
    return:
      type: System.Int32
      description: A 32-bit signed hash code calculated from the value of the *obj* parameter.
  exceptions:
  - type: System.ArgumentException
    description: Not enough memory is available to allocate the buffer that is required to compute the hash code.
  - type: System.ArgumentNullException
    description: '*obj* is null.'
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEqualityComparer{System.String}
  definition: System.Collections.Generic.IEqualityComparer`1
  name: Collections.Generic.IEqualityComparer<String>
  name.vb: Collections.Generic.IEqualityComparer(Of String)
  fullName: System.Collections.Generic.IEqualityComparer<System.String>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: Collections.Generic.IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: Collections.Generic.IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: IEqualityComparer<>
  name.vb: IEqualityComparer(Of )
  fullName: System.Collections.Generic.IEqualityComparer<>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.StringComparer
  parent: System
  isExternal: false
  name: StringComparer
  fullName: System.StringComparer
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
