items:
- uid: System.Text.Encoder
  commentId: T:System.Text.Encoder
  id: Encoder
  parent: System.Text
  children:
  - System.Text.Encoder.#ctor
  - System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  - System.Text.Encoder.Fallback
  - System.Text.Encoder.FallbackBuffer
  - System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)
  - System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)
  - System.Text.Encoder.Reset
  langs:
  - csharp
  - vb
  name: Encoder
  nameWithType: Encoder
  fullName: System.Text.Encoder
  type: Class
  source:
    remote:
      path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Encoder
    path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
    startLine: 66
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  syntax:
    content: 'public abstract class Encoder : object'
    content.vb: >-
      Public MustInherit Class Encoder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Text.Encoder.#ctor
  commentId: M:System.Text.Encoder.#ctor
  id: '#ctor'
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: Encoder()
  nameWithType: Encoder.Encoder()
  fullName: System.Text.Encoder.Encoder()
  type: Constructor
  source:
    remote:
      path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
    startLine: 68
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  syntax:
    content: protected Encoder()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.Encoder.Fallback
  commentId: P:System.Text.Encoder.Fallback
  id: Fallback
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: Fallback
  nameWithType: Encoder.Fallback
  fullName: System.Text.Encoder.Fallback
  type: Property
  source:
    remote:
      path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fallback
    path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
    startLine: 69
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  syntax:
    content: public EncoderFallback Fallback { get; set; }
    content.vb: Public Property Fallback As EncoderFallback
    parameters: []
    return:
      type: System.Text.EncoderFallback
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Text.Encoder.FallbackBuffer
  commentId: P:System.Text.Encoder.FallbackBuffer
  id: FallbackBuffer
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: FallbackBuffer
  nameWithType: Encoder.FallbackBuffer
  fullName: System.Text.Encoder.FallbackBuffer
  type: Property
  source:
    remote:
      path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FallbackBuffer
    path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
    startLine: 70
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  syntax:
    content: public EncoderFallbackBuffer FallbackBuffer { get; }
    content.vb: Public ReadOnly Property FallbackBuffer As EncoderFallbackBuffer
    parameters: []
    return:
      type: System.Text.EncoderFallbackBuffer
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  commentId: M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  id: Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: Convert(Char[], Int32, Int32, Byte[], Int32, Int32, Boolean, out Int32, out Int32, out Boolean)
  nameWithType: Encoder.Convert(Char[], Int32, Int32, Byte[], Int32, Int32, Boolean, out Int32, out Int32, out Boolean)
  fullName: System.Text.Encoder.Convert(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Int32, System.Boolean, out System.Int32, out System.Int32, out System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Convert
    path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
    startLine: 71
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  syntax:
    content: public virtual void Convert(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, int byteCount, bool flush, out int charsUsed, out int bytesUsed, out bool completed)
    content.vb: Public Overridable Sub Convert(chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer, byteCount As Integer, flush As Boolean, ByRef charsUsed As Integer, ByRef bytesUsed As Integer, ByRef completed As Boolean)
    parameters:
    - id: chars
      type: System.Char[]
    - id: charIndex
      type: System.Int32
    - id: charCount
      type: System.Int32
    - id: bytes
      type: System.Byte[]
    - id: byteIndex
      type: System.Int32
    - id: byteCount
      type: System.Int32
    - id: flush
      type: System.Boolean
    - id: charsUsed
      type: System.Int32
    - id: bytesUsed
      type: System.Int32
    - id: completed
      type: System.Boolean
  nameWithType.vb: Encoder.Convert(Char(), Int32, Int32, Byte(), Int32, Int32, Boolean, ByRef Int32, ByRef Int32, ByRef Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Encoder.Convert(System.Char(), System.Int32, System.Int32, System.Byte(), System.Int32, System.Int32, System.Boolean, ByRef System.Int32, ByRef System.Int32, ByRef System.Boolean)
  name.vb: Convert(Char(), Int32, Int32, Byte(), Int32, Int32, Boolean, ByRef Int32, ByRef Int32, ByRef Boolean)
- uid: System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)
  commentId: M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)
  id: GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: GetByteCount(Char[], Int32, Int32, Boolean)
  nameWithType: Encoder.GetByteCount(Char[], Int32, Int32, Boolean)
  fullName: System.Text.Encoder.GetByteCount(System.Char[], System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetByteCount
    path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
    startLine: 72
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  syntax:
    content: public abstract int GetByteCount(char[] chars, int index, int count, bool flush)
    content.vb: Public MustOverride Function GetByteCount(chars As Char(), index As Integer, count As Integer, flush As Boolean) As Integer
    parameters:
    - id: chars
      type: System.Char[]
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    - id: flush
      type: System.Boolean
    return:
      type: System.Int32
  nameWithType.vb: Encoder.GetByteCount(Char(), Int32, Int32, Boolean)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Text.Encoder.GetByteCount(System.Char(), System.Int32, System.Int32, System.Boolean)
  name.vb: GetByteCount(Char(), Int32, Int32, Boolean)
- uid: System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)
  commentId: M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)
  id: GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: GetBytes(Char[], Int32, Int32, Byte[], Int32, Boolean)
  nameWithType: Encoder.GetBytes(Char[], Int32, Int32, Byte[], Int32, Boolean)
  fullName: System.Text.Encoder.GetBytes(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBytes
    path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
    startLine: 73
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  syntax:
    content: public abstract int GetBytes(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, bool flush)
    content.vb: Public MustOverride Function GetBytes(chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer, flush As Boolean) As Integer
    parameters:
    - id: chars
      type: System.Char[]
    - id: charIndex
      type: System.Int32
    - id: charCount
      type: System.Int32
    - id: bytes
      type: System.Byte[]
    - id: byteIndex
      type: System.Int32
    - id: flush
      type: System.Boolean
    return:
      type: System.Int32
  nameWithType.vb: Encoder.GetBytes(Char(), Int32, Int32, Byte(), Int32, Boolean)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Text.Encoder.GetBytes(System.Char(), System.Int32, System.Int32, System.Byte(), System.Int32, System.Boolean)
  name.vb: GetBytes(Char(), Int32, Int32, Byte(), Int32, Boolean)
- uid: System.Text.Encoder.Reset
  commentId: M:System.Text.Encoder.Reset
  id: Reset
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Encoder.Reset()
  fullName: System.Text.Encoder.Reset()
  type: Method
  source:
    remote:
      path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reset
    path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
    startLine: 74
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.EncoderFallback
  commentId: T:System.Text.EncoderFallback
  parent: System.Text
  isExternal: false
  name: EncoderFallback
  nameWithType: EncoderFallback
  fullName: System.Text.EncoderFallback
- uid: System.Text.EncoderFallbackBuffer
  commentId: T:System.Text.EncoderFallbackBuffer
  parent: System.Text
  isExternal: false
  name: EncoderFallbackBuffer
  nameWithType: EncoderFallbackBuffer
  fullName: System.Text.EncoderFallbackBuffer
- uid: System.Char[]
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
