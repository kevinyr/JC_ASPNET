items:
- uid: System.Text.RegularExpressions.Match
  commentId: T:System.Text.RegularExpressions.Match
  id: Match
  parent: System.Text.RegularExpressions
  children:
  - System.Text.RegularExpressions.Match.Empty
  - System.Text.RegularExpressions.Match.Groups
  - System.Text.RegularExpressions.Match.NextMatch
  - System.Text.RegularExpressions.Match.Result(System.String)
  langs:
  - csharp
  - vb
  name: Match
  nameWithType: Match
  fullName: System.Text.RegularExpressions.Match
  type: Class
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Match
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 45
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: 'public class Match : Group'
    content.vb: >-
      Public Class Match
          Inherits Group
  inheritance:
  - System.Object
  - System.Text.RegularExpressions.Capture
  - System.Text.RegularExpressions.Group
  inheritedMembers:
  - System.Text.RegularExpressions.Group.Captures
  - System.Text.RegularExpressions.Group.Success
  - System.Text.RegularExpressions.Capture.Index
  - System.Text.RegularExpressions.Capture.Length
  - System.Text.RegularExpressions.Capture.Value
  - System.Text.RegularExpressions.Capture.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Text.RegularExpressions.Match.Empty
  commentId: P:System.Text.RegularExpressions.Match.Empty
  id: Empty
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Match.Empty
  fullName: System.Text.RegularExpressions.Match.Empty
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Empty
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 48
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: public static Match Empty { get; }
    content.vb: Public Shared ReadOnly Property Empty As Match
    parameters: []
    return:
      type: System.Text.RegularExpressions.Match
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Text.RegularExpressions.Match.Groups
  commentId: P:System.Text.RegularExpressions.Match.Groups
  id: Groups
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: Match.Groups
  fullName: System.Text.RegularExpressions.Match.Groups
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Groups
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 49
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: public virtual GroupCollection Groups { get; }
    content.vb: Public Overridable ReadOnly Property Groups As GroupCollection
    parameters: []
    return:
      type: System.Text.RegularExpressions.GroupCollection
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Text.RegularExpressions.Match.NextMatch
  commentId: M:System.Text.RegularExpressions.Match.NextMatch
  id: NextMatch
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  - vb
  name: NextMatch()
  nameWithType: Match.NextMatch()
  fullName: System.Text.RegularExpressions.Match.NextMatch()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NextMatch
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 50
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: public Match NextMatch()
    content.vb: Public Function NextMatch As Match
    return:
      type: System.Text.RegularExpressions.Match
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Match.Result(System.String)
  commentId: M:System.Text.RegularExpressions.Match.Result(System.String)
  id: Result(System.String)
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  - vb
  name: Result(String)
  nameWithType: Match.Result(String)
  fullName: System.Text.RegularExpressions.Match.Result(System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Result
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 51
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: public virtual string Result(string replacement)
    content.vb: Public Overridable Function Result(replacement As String) As String
    parameters:
    - id: replacement
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: false
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Text.RegularExpressions.Capture
  commentId: T:System.Text.RegularExpressions.Capture
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Capture
  nameWithType: Capture
  fullName: System.Text.RegularExpressions.Capture
- uid: System.Text.RegularExpressions.Group
  commentId: T:System.Text.RegularExpressions.Group
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Group
  nameWithType: Group
  fullName: System.Text.RegularExpressions.Group
- uid: System.Text.RegularExpressions.Group.Captures
  commentId: P:System.Text.RegularExpressions.Group.Captures
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Captures
  nameWithType: Group.Captures
  fullName: System.Text.RegularExpressions.Group.Captures
- uid: System.Text.RegularExpressions.Group.Success
  commentId: P:System.Text.RegularExpressions.Group.Success
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Success
  nameWithType: Group.Success
  fullName: System.Text.RegularExpressions.Group.Success
- uid: System.Text.RegularExpressions.Capture.Index
  commentId: P:System.Text.RegularExpressions.Capture.Index
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Index
  nameWithType: Capture.Index
  fullName: System.Text.RegularExpressions.Capture.Index
- uid: System.Text.RegularExpressions.Capture.Length
  commentId: P:System.Text.RegularExpressions.Capture.Length
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Length
  nameWithType: Capture.Length
  fullName: System.Text.RegularExpressions.Capture.Length
- uid: System.Text.RegularExpressions.Capture.Value
  commentId: P:System.Text.RegularExpressions.Capture.Value
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Value
  nameWithType: Capture.Value
  fullName: System.Text.RegularExpressions.Capture.Value
- uid: System.Text.RegularExpressions.Capture.ToString
  commentId: M:System.Text.RegularExpressions.Capture.ToString
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: ToString()
  nameWithType: Capture.ToString()
  fullName: System.Text.RegularExpressions.Capture.ToString()
  spec.csharp:
  - uid: System.Text.RegularExpressions.Capture.ToString
    name: ToString
    nameWithType: Capture.ToString
    fullName: System.Text.RegularExpressions.Capture.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.RegularExpressions.Capture.ToString
    name: ToString
    nameWithType: Capture.ToString
    fullName: System.Text.RegularExpressions.Capture.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.RegularExpressions.Match
  commentId: T:System.Text.RegularExpressions.Match
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Match
  nameWithType: Match
  fullName: System.Text.RegularExpressions.Match
- uid: System.Text.RegularExpressions.GroupCollection
  commentId: T:System.Text.RegularExpressions.GroupCollection
  parent: System.Text.RegularExpressions
  isExternal: false
  name: GroupCollection
  nameWithType: GroupCollection
  fullName: System.Text.RegularExpressions.GroupCollection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
