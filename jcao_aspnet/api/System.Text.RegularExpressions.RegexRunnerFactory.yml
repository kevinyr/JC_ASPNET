items:
- uid: System.Text.RegularExpressions.RegexRunnerFactory
  commentId: T:System.Text.RegularExpressions.RegexRunnerFactory
  id: RegexRunnerFactory
  parent: System.Text.RegularExpressions
  children:
  - System.Text.RegularExpressions.RegexRunnerFactory.#ctor
  - System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance
  langs:
  - csharp
  - vb
  name: RegexRunnerFactory
  nameWithType: RegexRunnerFactory
  fullName: System.Text.RegularExpressions.RegexRunnerFactory
  type: Class
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RegexRunnerFactory
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 64
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: 'public abstract class RegexRunnerFactory : object'
    content.vb: >-
      Public MustInherit Class RegexRunnerFactory
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Text.RegularExpressions.RegexRunnerFactory.#ctor
  commentId: M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor
  id: '#ctor'
  parent: System.Text.RegularExpressions.RegexRunnerFactory
  langs:
  - csharp
  - vb
  name: RegexRunnerFactory()
  nameWithType: RegexRunnerFactory.RegexRunnerFactory()
  fullName: System.Text.RegularExpressions.RegexRunnerFactory.RegexRunnerFactory()
  type: Constructor
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 66
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: protected RegexRunnerFactory()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance
  commentId: M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance
  id: CreateInstance
  parent: System.Text.RegularExpressions.RegexRunnerFactory
  langs:
  - csharp
  - vb
  name: CreateInstance()
  nameWithType: RegexRunnerFactory.CreateInstance()
  fullName: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateInstance
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 67
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: protected abstract RegexRunner CreateInstance()
    content.vb: Protected MustOverride Function CreateInstance As RegexRunner
    return:
      type: System.Text.RegularExpressions.RegexRunner
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: false
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.RegularExpressions.RegexRunner
  commentId: T:System.Text.RegularExpressions.RegexRunner
  parent: System.Text.RegularExpressions
  isExternal: false
  name: RegexRunner
  nameWithType: RegexRunner
  fullName: System.Text.RegularExpressions.RegexRunner
