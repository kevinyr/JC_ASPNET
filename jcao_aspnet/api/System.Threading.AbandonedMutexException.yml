items:
- uid: System.Threading.AbandonedMutexException
  id: AbandonedMutexException
  parent: System.Threading
  children:
  - System.Threading.AbandonedMutexException.#ctor
  - System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)
  - System.Threading.AbandonedMutexException.#ctor(System.String)
  - System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)
  - System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)
  - System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)
  - System.Threading.AbandonedMutexException.Mutex
  - System.Threading.AbandonedMutexException.MutexIndex
  name: AbandonedMutexException
  fullName: System.Threading.AbandonedMutexException
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs
    startLine: 18
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: The exception that is thrown when one thread acquires a <xref href="System.Threading.Mutex" data-throw-if-not-resolved="false"></xref> object that another thread has abandoned by exiting without releasing it.
  syntax:
    content: 'public class AbandonedMutexException : Exception'
    content.vb: Public Class AbandonedMutexException Inherits Exception
  inheritance:
  - System.Object
- uid: System.Threading.AbandonedMutexException.#ctor
  id: '#ctor'
  parent: System.Threading.AbandonedMutexException
  name: AbandonedMutexException()
  fullName: System.Threading.AbandonedMutexException.AbandonedMutexException()
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs
    startLine: 25
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.AbandonedMutexException" data-throw-if-not-resolved="false"></xref> class with default values.
  syntax:
    content: public AbandonedMutexException()
    content.vb: Public Sub New
- uid: System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)
  id: '#ctor(System.Int32,System.Threading.WaitHandle)'
  parent: System.Threading.AbandonedMutexException
  name: AbandonedMutexException(Int32, WaitHandle)
  fullName: System.Threading.AbandonedMutexException.AbandonedMutexException(System.Int32, System.Threading.WaitHandle)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs
    startLine: 40
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.AbandonedMutexException" data-throw-if-not-resolved="false"></xref> class with a specified index for the abandoned mutex, if applicable, and a <xref href="System.Threading.Mutex" data-throw-if-not-resolved="false"></xref> object that represents the mutex.
  syntax:
    content: public AbandonedMutexException(int location, WaitHandle handle)
    content.vb: Public Sub New(location As Integer, handle As WaitHandle)
    parameters:
    - id: location
      type: System.Int32
      description: "The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <see cref=\"Overload:System.Threading.WaitHandle.WaitAny\" /> method, or –1 if the exception is thrown for the <see cref=\"Overload:System.Threading.WaitHandle.WaitOne\" /> or <see cref=\"Overload:System.Threading.WaitHandle.WaitAll\" /> methods."
    - id: handle
      type: System.Threading.WaitHandle
      description: A <xref href="System.Threading.Mutex" data-throw-if-not-resolved="false"></xref> object that represents the abandoned mutex.
- uid: System.Threading.AbandonedMutexException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Threading.AbandonedMutexException
  name: AbandonedMutexException(String)
  fullName: System.Threading.AbandonedMutexException.AbandonedMutexException(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs
    startLine: 30
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.AbandonedMutexException" data-throw-if-not-resolved="false"></xref> class with a specified error message.
  syntax:
    content: public AbandonedMutexException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: An error message that explains the reason for the exception.
- uid: System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Threading.AbandonedMutexException
  name: AbandonedMutexException(String, Exception)
  fullName: System.Threading.AbandonedMutexException.AbandonedMutexException(System.String, System.Exception)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs
    startLine: 35
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.AbandonedMutexException" data-throw-if-not-resolved="false"></xref> class with a specified error message and inner exception.
  syntax:
    content: public AbandonedMutexException(string message, Exception inner)
    content.vb: Public Sub New(message As String, inner As Exception)
    parameters:
    - id: message
      type: System.String
      description: An error message that explains the reason for the exception.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the *inner* parameter is not null, the current exception is raised in a catch block that handles the inner exception.
- uid: System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)
  id: '#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)'
  parent: System.Threading.AbandonedMutexException
  name: AbandonedMutexException(String, Exception, Int32, WaitHandle)
  fullName: System.Threading.AbandonedMutexException.AbandonedMutexException(System.String, System.Exception, System.Int32, System.Threading.WaitHandle)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs
    startLine: 52
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.AbandonedMutexException" data-throw-if-not-resolved="false"></xref> class with a specified error message, the inner exception, the index for the abandoned mutex, if applicable, and a <xref href="System.Threading.Mutex" data-throw-if-not-resolved="false"></xref> object that represents the mutex.
  syntax:
    content: public AbandonedMutexException(string message, Exception inner, int location, WaitHandle handle)
    content.vb: Public Sub New(message As String, inner As Exception, location As Integer, handle As WaitHandle)
    parameters:
    - id: message
      type: System.String
      description: An error message that explains the reason for the exception.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the *inner* parameter is not null, the current exception is raised in a catch block that handles the inner exception.
    - id: location
      type: System.Int32
      description: "The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <see cref=\"Overload:System.Threading.WaitHandle.WaitAny\" /> method, or –1 if the exception is thrown for the <see cref=\"Overload:System.Threading.WaitHandle.WaitOne\" /> or <see cref=\"Overload:System.Threading.WaitHandle.WaitAll\" /> methods."
    - id: handle
      type: System.Threading.WaitHandle
      description: A <xref href="System.Threading.Mutex" data-throw-if-not-resolved="false"></xref> object that represents the abandoned mutex.
- uid: System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)
  id: '#ctor(System.String,System.Int32,System.Threading.WaitHandle)'
  parent: System.Threading.AbandonedMutexException
  name: AbandonedMutexException(String, Int32, WaitHandle)
  fullName: System.Threading.AbandonedMutexException.AbandonedMutexException(System.String, System.Int32, System.Threading.WaitHandle)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs
    startLine: 46
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.AbandonedMutexException" data-throw-if-not-resolved="false"></xref> class with a specified error message, the index of the abandoned mutex, if applicable, and the abandoned mutex.
  syntax:
    content: public AbandonedMutexException(string message, int location, WaitHandle handle)
    content.vb: Public Sub New(message As String, location As Integer, handle As WaitHandle)
    parameters:
    - id: message
      type: System.String
      description: An error message that explains the reason for the exception.
    - id: location
      type: System.Int32
      description: "The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <see cref=\"Overload:System.Threading.WaitHandle.WaitAny\" /> method, or –1 if the exception is thrown for the <see cref=\"Overload:System.Threading.WaitHandle.WaitOne\" /> or <see cref=\"Overload:System.Threading.WaitHandle.WaitAll\" /> methods."
    - id: handle
      type: System.Threading.WaitHandle
      description: A <xref href="System.Threading.Mutex" data-throw-if-not-resolved="false"></xref> object that represents the abandoned mutex.
- uid: System.Threading.AbandonedMutexException.Mutex
  id: Mutex
  parent: System.Threading.AbandonedMutexException
  name: Mutex
  fullName: System.Threading.AbandonedMutexException.Mutex
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs
    startLine: 68
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Gets the abandoned mutex that caused the exception, if known.
  syntax:
    content: public Mutex Mutex { get; }
    content.vb: Public ReadOnly Property Mutex As Mutex
    parameters: []
    return:
      type: System.Threading.Mutex
      description: A <xref href="System.Threading.Mutex" data-throw-if-not-resolved="false"></xref> object that represents the abandoned mutex, or null if the abandoned mutex could not be identified.
- uid: System.Threading.AbandonedMutexException.MutexIndex
  id: MutexIndex
  parent: System.Threading.AbandonedMutexException
  name: MutexIndex
  fullName: System.Threading.AbandonedMutexException.MutexIndex
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs
    startLine: 75
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Gets the index of the abandoned mutex that caused the exception, if known.
  syntax:
    content: public int MutexIndex { get; }
    content.vb: Public ReadOnly Property MutexIndex As Integer
    parameters: []
    return:
      type: System.Int32
      description: "The index, in the array of wait handles passed to the <see cref=\"Overload:System.Threading.WaitHandle.WaitAny\" /> method, of the <xref href=\"System.Threading.Mutex\" data-throw-if-not-resolved=\"false\"></xref> object that represents the abandoned mutex, or –1 if the index of the abandoned mutex could not be determined."
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: false
  name: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.Threading.Mutex
  parent: System.Threading
  isExternal: false
  name: Mutex
  fullName: System.Threading.Mutex
