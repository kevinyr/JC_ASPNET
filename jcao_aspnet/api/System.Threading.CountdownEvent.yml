items:
- uid: System.Threading.CountdownEvent
  id: CountdownEvent
  parent: System.Threading
  children:
  - System.Threading.CountdownEvent.#ctor(System.Int32)
  - System.Threading.CountdownEvent.AddCount
  - System.Threading.CountdownEvent.AddCount(System.Int32)
  - System.Threading.CountdownEvent.CurrentCount
  - System.Threading.CountdownEvent.Dispose
  - System.Threading.CountdownEvent.Dispose(System.Boolean)
  - System.Threading.CountdownEvent.InitialCount
  - System.Threading.CountdownEvent.IsSet
  - System.Threading.CountdownEvent.Reset
  - System.Threading.CountdownEvent.Reset(System.Int32)
  - System.Threading.CountdownEvent.Signal
  - System.Threading.CountdownEvent.Signal(System.Int32)
  - System.Threading.CountdownEvent.TryAddCount
  - System.Threading.CountdownEvent.TryAddCount(System.Int32)
  - System.Threading.CountdownEvent.Wait
  - System.Threading.CountdownEvent.Wait(System.Int32)
  - System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)
  - System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  - System.Threading.CountdownEvent.Wait(System.TimeSpan)
  - System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.CountdownEvent.WaitHandle
  name: CountdownEvent
  fullName: System.Threading.CountdownEvent
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Threading/CountdownEvent.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 32
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Represents a synchronization primitive that is signaled when its count reaches zero.
  syntax:
    content: 'public class CountdownEvent : IDisposable'
    content.vb: Public Class CountdownEvent Inherits IDisposable
  inheritance:
  - System.Object
- uid: System.Threading.CountdownEvent.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Threading.CountdownEvent
  name: CountdownEvent(Int32)
  fullName: System.Threading.CountdownEvent.CountdownEvent(System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 57
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref> class with the specified count.
  syntax:
    content: public CountdownEvent(int initialCount)
    content.vb: Public Sub New(initialCount As Integer)
    parameters:
    - id: initialCount
      type: System.Int32
      description: The number of signals initially required to set the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*initialCount* is less than 0.'
- uid: System.Threading.CountdownEvent.CurrentCount
  id: CurrentCount
  parent: System.Threading.CountdownEvent
  name: CurrentCount
  fullName: System.Threading.CountdownEvent.CurrentCount
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 83
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Gets the number of remaining signals required to set the event.
  syntax:
    content: public int CurrentCount { get; }
    content.vb: Public ReadOnly Property CurrentCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of remaining signals required to set the event.
- uid: System.Threading.CountdownEvent.InitialCount
  id: InitialCount
  parent: System.Threading.CountdownEvent
  name: InitialCount
  fullName: System.Threading.CountdownEvent.InitialCount
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 98
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Gets the numbers of signals initially required to set the event.
  syntax:
    content: public int InitialCount { get; }
    content.vb: Public ReadOnly Property InitialCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of signals initially required to set the event.
- uid: System.Threading.CountdownEvent.IsSet
  id: IsSet
  parent: System.Threading.CountdownEvent
  name: IsSet
  fullName: System.Threading.CountdownEvent.IsSet
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 107
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Determines whether the event is set.
  syntax:
    content: public bool IsSet { get; }
    content.vb: Public ReadOnly Property IsSet As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the event is set; otherwise, false.
- uid: System.Threading.CountdownEvent.WaitHandle
  id: WaitHandle
  parent: System.Threading.CountdownEvent
  name: WaitHandle
  fullName: System.Threading.CountdownEvent.WaitHandle
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 129
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Gets a <xref href="System.Threading.WaitHandle" data-throw-if-not-resolved="false"></xref> that is used to wait for the event to be set.
  syntax:
    content: public WaitHandle WaitHandle { get; }
    content.vb: Public ReadOnly Property WaitHandle As WaitHandle
    parameters: []
    return:
      type: System.Threading.WaitHandle
      description: A <xref href="System.Threading.WaitHandle" data-throw-if-not-resolved="false"></xref> that is used to wait for the event to be set.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
- uid: System.Threading.CountdownEvent.AddCount
  id: AddCount
  parent: System.Threading.CountdownEvent
  name: AddCount()
  fullName: System.Threading.CountdownEvent.AddCount()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 283
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Increments the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref>'s current count by one.
  syntax:
    content: public void AddCount()
    content.vb: Public Sub AddCount
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.InvalidOperationException
    description: The current instance is already set.-or-<xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref> is equal to or greater than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.
- uid: System.Threading.CountdownEvent.AddCount(System.Int32)
  id: AddCount(System.Int32)
  parent: System.Threading.CountdownEvent
  name: AddCount(Int32)
  fullName: System.Threading.CountdownEvent.AddCount(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 315
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Increments the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref>'s current count by a specified value.
  syntax:
    content: public void AddCount(int signalCount)
    content.vb: Public Sub AddCount(signalCount As Integer)
    parameters:
    - id: signalCount
      type: System.Int32
      description: The value by which to increase <xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*signalCount* is less than or equal to 0.'
  - type: System.InvalidOperationException
    description: The current instance is already set.-or-<xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref> is equal to or greater than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref> after count is incremented by *signalCount.*
- uid: System.Threading.CountdownEvent.Dispose
  id: Dispose
  parent: System.Threading.CountdownEvent
  name: Dispose()
  fullName: System.Threading.CountdownEvent.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 145
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Releases all resources used by the current instance of the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.Threading.CountdownEvent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Threading.CountdownEvent
  name: Dispose(Boolean)
  fullName: System.Threading.CountdownEvent.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 166
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Releases the unmanaged resources used by the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref>, and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
- uid: System.Threading.CountdownEvent.Reset
  id: Reset
  parent: System.Threading.CountdownEvent
  name: Reset()
  fullName: System.Threading.CountdownEvent.Reset()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 388
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Resets the <xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref> to the value of <xref href="System.Threading.CountdownEvent.InitialCount" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed..
- uid: System.Threading.CountdownEvent.Reset(System.Int32)
  id: Reset(System.Int32)
  parent: System.Threading.CountdownEvent
  name: Reset(Int32)
  fullName: System.Threading.CountdownEvent.Reset(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 405
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Resets the <xref href="System.Threading.CountdownEvent.InitialCount" data-throw-if-not-resolved="false"></xref> property to a specified value.
  syntax:
    content: public void Reset(int count)
    content.vb: Public Sub Reset(count As Integer)
    parameters:
    - id: count
      type: System.Int32
      description: The number of signals required to set the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has alread been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*count* is less than 0.'
- uid: System.Threading.CountdownEvent.Signal
  id: Signal
  parent: System.Threading.CountdownEvent
  name: Signal()
  fullName: System.Threading.CountdownEvent.Signal()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 185
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Registers a signal with the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref>, decrementing the value of <xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public bool Signal()
    content.vb: Public Function Signal As Boolean
    return:
      type: System.Boolean
      description: true if the signal caused the count to reach zero and the event was set; otherwise, false.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.InvalidOperationException
    description: The current instance is already set.
- uid: System.Threading.CountdownEvent.Signal(System.Int32)
  id: Signal(System.Int32)
  parent: System.Threading.CountdownEvent
  name: Signal(Int32)
  fullName: System.Threading.CountdownEvent.Signal(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 227
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Registers multiple signals with the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref>, decrementing the value of <xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref> by the specified amount.
  syntax:
    content: public bool Signal(int signalCount)
    content.vb: Public Function Signal(signalCount As Integer) As Boolean
    parameters:
    - id: signalCount
      type: System.Int32
      description: The number of signals to register.
    return:
      type: System.Boolean
      description: true if the signals caused the count to reach zero and the event was set; otherwise, false.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*signalCount* is less than 1.'
  - type: System.InvalidOperationException
    description: The current instance is already set. -or- Or *signalCount* is greater than <xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref>.
- uid: System.Threading.CountdownEvent.TryAddCount
  id: TryAddCount
  parent: System.Threading.CountdownEvent
  name: TryAddCount()
  fullName: System.Threading.CountdownEvent.TryAddCount()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 297
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Attempts to increment <xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref> by one.
  syntax:
    content: public bool TryAddCount()
    content.vb: Public Function TryAddCount As Boolean
    return:
      type: System.Boolean
      description: true if the increment succeeded; otherwise, false. If <xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref> is already at zero, this method will return false.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.InvalidOperationException
    description: <xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref> is equal to <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.
- uid: System.Threading.CountdownEvent.TryAddCount(System.Int32)
  id: TryAddCount(System.Int32)
  parent: System.Threading.CountdownEvent
  name: TryAddCount(Int32)
  fullName: System.Threading.CountdownEvent.TryAddCount(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 338
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Attempts to increment <xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref> by a specified value.
  syntax:
    content: public bool TryAddCount(int signalCount)
    content.vb: Public Function TryAddCount(signalCount As Integer) As Boolean
    parameters:
    - id: signalCount
      type: System.Int32
      description: The value by which to increase <xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: true if the increment succeeded; otherwise, false. If <xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref> is already at zero this will return false.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*signalCount* is less than or equal to 0.'
  - type: System.InvalidOperationException
    description: The current instance is already set.-or-<xref href="System.Threading.CountdownEvent.CurrentCount" data-throw-if-not-resolved="false"></xref> + *signalCount* is equal to or greater than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.
- uid: System.Threading.CountdownEvent.Wait
  id: Wait
  parent: System.Threading.CountdownEvent
  name: Wait()
  fullName: System.Threading.CountdownEvent.Wait()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 436
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Blocks the current thread until the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref> is set.
  syntax:
    content: public void Wait()
    content.vb: Public Sub Wait
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
- uid: System.Threading.CountdownEvent.Wait(System.Int32)
  id: Wait(System.Int32)
  parent: System.Threading.CountdownEvent
  name: Wait(Int32)
  fullName: System.Threading.CountdownEvent.Wait(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 531
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Blocks the current thread until the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref> is set, using a 32-bit signed integer to measure the timeout.
  syntax:
    content: public bool Wait(int millisecondsTimeout)
    content.vb: Public Function Wait(millisecondsTimeout As Integer) As Boolean
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref>(-1) to wait indefinitely.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref> was set; otherwise, false.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*millisecondsTimeout* is a negative number other than -1, which represents an infinite time-out.'
- uid: System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)
  id: Wait(System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.CountdownEvent
  name: Wait(Int32, CancellationToken)
  fullName: System.Threading.CountdownEvent.Wait(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 553
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Blocks the current thread until the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref> is set, using a 32-bit signed integer to measure the timeout, while observing a <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public bool Wait(int millisecondsTimeout, CancellationToken cancellationToken)
    content.vb: Public Function Wait(millisecondsTimeout As Integer, cancellationToken As CancellationToken) As Boolean
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref>(-1) to wait indefinitely.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref> was set; otherwise, false.
  exceptions:
  - type: System.OperationCanceledException
    description: '*cancellationToken* has been canceled.'
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed. -or- The <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> that created *cancellationToken* has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*millisecondsTimeout* is a negative number other than -1, which represents an infinite time-out.'
- uid: System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  id: Wait(System.Threading.CancellationToken)
  parent: System.Threading.CountdownEvent
  name: Wait(CancellationToken)
  fullName: System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 459
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Blocks the current thread until the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref> is set, while observing a <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public void Wait(CancellationToken cancellationToken)
    content.vb: Public Sub Wait(cancellationToken As CancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe.
  exceptions:
  - type: System.OperationCanceledException
    description: '*cancellationToken* has been canceled.'
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed. -or- The <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> that created *cancellationToken* has already been disposed.
- uid: System.Threading.CountdownEvent.Wait(System.TimeSpan)
  id: Wait(System.TimeSpan)
  parent: System.Threading.CountdownEvent
  name: Wait(TimeSpan)
  fullName: System.Threading.CountdownEvent.Wait(System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 478
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Blocks the current thread until the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref> is set, using a <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> to measure the timeout.
  syntax:
    content: public bool Wait(TimeSpan timeout)
    content.vb: Public Function Wait(timeout As TimeSpan) As Boolean
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that represents the number of milliseconds to wait, or a <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that represents -1 milliseconds to wait indefinitely.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref> was set; otherwise, false.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*timeout* is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.'
- uid: System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)
  id: Wait(System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.CountdownEvent
  name: Wait(TimeSpan, CancellationToken)
  fullName: System.Threading.CountdownEvent.Wait(System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CountdownEvent.cs
    startLine: 508
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Blocks the current thread until the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref> is set, using a <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> to measure the timeout, while observing a <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public bool Wait(TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function Wait(timeout As TimeSpan, cancellationToken As CancellationToken) As Boolean
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that represents the number of milliseconds to wait, or a <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that represents -1 milliseconds to wait indefinitely.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Threading.CountdownEvent" data-throw-if-not-resolved="false"></xref> was set; otherwise, false.
  exceptions:
  - type: System.OperationCanceledException
    description: '*cancellationToken* has been canceled.'
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed. -or- The <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> that created *cancellationToken* has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*timeout* is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.'
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: false
  name: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.OperationCanceledException
  parent: System
  isExternal: false
  name: OperationCanceledException
  fullName: System.OperationCanceledException
