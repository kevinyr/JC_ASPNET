items:
- uid: System.Threading.Interlocked
  commentId: T:System.Threading.Interlocked
  id: Interlocked
  parent: System.Threading
  children:
  - System.Threading.Interlocked.Add(System.Int32@,System.Int32)
  - System.Threading.Interlocked.Add(System.Int64@,System.Int64)
  - System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)
  - System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)
  - System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)
  - System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)
  - System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)
  - System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)
  - System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)
  - System.Threading.Interlocked.Decrement(System.Int32@)
  - System.Threading.Interlocked.Decrement(System.Int64@)
  - System.Threading.Interlocked.Exchange(System.Double@,System.Double)
  - System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)
  - System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)
  - System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)
  - System.Threading.Interlocked.Exchange(System.Object@,System.Object)
  - System.Threading.Interlocked.Exchange(System.Single@,System.Single)
  - System.Threading.Interlocked.Exchange``1(``0@,``0)
  - System.Threading.Interlocked.Increment(System.Int32@)
  - System.Threading.Interlocked.Increment(System.Int64@)
  - System.Threading.Interlocked.MemoryBarrier
  - System.Threading.Interlocked.Read(System.Int64@)
  langs:
  - csharp
  - vb
  name: Interlocked
  nameWithType: Interlocked
  fullName: System.Threading.Interlocked
  type: Class
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Interlocked
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 117
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: 'public class Interlocked : object'
    content.vb: >-
      Public Class Interlocked
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Threading.Interlocked.Add(System.Int32@,System.Int32)
  commentId: M:System.Threading.Interlocked.Add(System.Int32@,System.Int32)
  id: Add(System.Int32@,System.Int32)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Add(ref Int32, Int32)
  nameWithType: Interlocked.Add(ref Int32, Int32)
  fullName: System.Threading.Interlocked.Add(ref System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 119
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static int Add(ref int location1, int value)
    content.vb: Public Shared Function Add(ByRef location1 As Integer, value As Integer) As Integer
    parameters:
    - id: location1
      type: System.Int32
    - id: value
      type: System.Int32
    return:
      type: System.Int32
  nameWithType.vb: Interlocked.Add(ByRef Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Add(ByRef System.Int32, System.Int32)
  name.vb: Add(ByRef Int32, Int32)
- uid: System.Threading.Interlocked.Add(System.Int64@,System.Int64)
  commentId: M:System.Threading.Interlocked.Add(System.Int64@,System.Int64)
  id: Add(System.Int64@,System.Int64)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Add(ref Int64, Int64)
  nameWithType: Interlocked.Add(ref Int64, Int64)
  fullName: System.Threading.Interlocked.Add(ref System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 120
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static long Add(ref long location1, long value)
    content.vb: Public Shared Function Add(ByRef location1 As Long, value As Long) As Long
    parameters:
    - id: location1
      type: System.Int64
    - id: value
      type: System.Int64
    return:
      type: System.Int64
  nameWithType.vb: Interlocked.Add(ByRef Int64, Int64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Add(ByRef System.Int64, System.Int64)
  name.vb: Add(ByRef Int64, Int64)
- uid: System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)
  commentId: M:System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)
  id: CompareExchange(System.Double@,System.Double,System.Double)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: CompareExchange(ref Double, Double, Double)
  nameWithType: Interlocked.CompareExchange(ref Double, Double, Double)
  fullName: System.Threading.Interlocked.CompareExchange(ref System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareExchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 121
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static double CompareExchange(ref double location1, double value, double comparand)
    content.vb: Public Shared Function CompareExchange(ByRef location1 As Double, value As Double, comparand As Double) As Double
    parameters:
    - id: location1
      type: System.Double
    - id: value
      type: System.Double
    - id: comparand
      type: System.Double
    return:
      type: System.Double
  nameWithType.vb: Interlocked.CompareExchange(ByRef Double, Double, Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.CompareExchange(ByRef System.Double, System.Double, System.Double)
  name.vb: CompareExchange(ByRef Double, Double, Double)
- uid: System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)
  commentId: M:System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)
  id: CompareExchange(System.Int32@,System.Int32,System.Int32)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: CompareExchange(ref Int32, Int32, Int32)
  nameWithType: Interlocked.CompareExchange(ref Int32, Int32, Int32)
  fullName: System.Threading.Interlocked.CompareExchange(ref System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareExchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 122
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static int CompareExchange(ref int location1, int value, int comparand)
    content.vb: Public Shared Function CompareExchange(ByRef location1 As Integer, value As Integer, comparand As Integer) As Integer
    parameters:
    - id: location1
      type: System.Int32
    - id: value
      type: System.Int32
    - id: comparand
      type: System.Int32
    return:
      type: System.Int32
  nameWithType.vb: Interlocked.CompareExchange(ByRef Int32, Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.CompareExchange(ByRef System.Int32, System.Int32, System.Int32)
  name.vb: CompareExchange(ByRef Int32, Int32, Int32)
- uid: System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)
  commentId: M:System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)
  id: CompareExchange(System.Int64@,System.Int64,System.Int64)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: CompareExchange(ref Int64, Int64, Int64)
  nameWithType: Interlocked.CompareExchange(ref Int64, Int64, Int64)
  fullName: System.Threading.Interlocked.CompareExchange(ref System.Int64, System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareExchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 123
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static long CompareExchange(ref long location1, long value, long comparand)
    content.vb: Public Shared Function CompareExchange(ByRef location1 As Long, value As Long, comparand As Long) As Long
    parameters:
    - id: location1
      type: System.Int64
    - id: value
      type: System.Int64
    - id: comparand
      type: System.Int64
    return:
      type: System.Int64
  nameWithType.vb: Interlocked.CompareExchange(ByRef Int64, Int64, Int64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.CompareExchange(ByRef System.Int64, System.Int64, System.Int64)
  name.vb: CompareExchange(ByRef Int64, Int64, Int64)
- uid: System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)
  commentId: M:System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)
  id: CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: CompareExchange(ref IntPtr, IntPtr, IntPtr)
  nameWithType: Interlocked.CompareExchange(ref IntPtr, IntPtr, IntPtr)
  fullName: System.Threading.Interlocked.CompareExchange(ref System.IntPtr, System.IntPtr, System.IntPtr)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareExchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 124
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static IntPtr CompareExchange(ref IntPtr location1, IntPtr value, IntPtr comparand)
    content.vb: Public Shared Function CompareExchange(ByRef location1 As IntPtr, value As IntPtr, comparand As IntPtr) As IntPtr
    parameters:
    - id: location1
      type: System.IntPtr
    - id: value
      type: System.IntPtr
    - id: comparand
      type: System.IntPtr
    return:
      type: System.IntPtr
  nameWithType.vb: Interlocked.CompareExchange(ByRef IntPtr, IntPtr, IntPtr)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.CompareExchange(ByRef System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: CompareExchange(ByRef IntPtr, IntPtr, IntPtr)
- uid: System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)
  commentId: M:System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)
  id: CompareExchange(System.Object@,System.Object,System.Object)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: CompareExchange(ref Object, Object, Object)
  nameWithType: Interlocked.CompareExchange(ref Object, Object, Object)
  fullName: System.Threading.Interlocked.CompareExchange(ref System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareExchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 125
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static object CompareExchange(ref object location1, object value, object comparand)
    content.vb: Public Shared Function CompareExchange(ByRef location1 As Object, value As Object, comparand As Object) As Object
    parameters:
    - id: location1
      type: System.Object
    - id: value
      type: System.Object
    - id: comparand
      type: System.Object
    return:
      type: System.Object
  nameWithType.vb: Interlocked.CompareExchange(ByRef Object, Object, Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.CompareExchange(ByRef System.Object, System.Object, System.Object)
  name.vb: CompareExchange(ByRef Object, Object, Object)
- uid: System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)
  commentId: M:System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)
  id: CompareExchange(System.Single@,System.Single,System.Single)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: CompareExchange(ref Single, Single, Single)
  nameWithType: Interlocked.CompareExchange(ref Single, Single, Single)
  fullName: System.Threading.Interlocked.CompareExchange(ref System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareExchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 126
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static float CompareExchange(ref float location1, float value, float comparand)
    content.vb: Public Shared Function CompareExchange(ByRef location1 As Single, value As Single, comparand As Single) As Single
    parameters:
    - id: location1
      type: System.Single
    - id: value
      type: System.Single
    - id: comparand
      type: System.Single
    return:
      type: System.Single
  nameWithType.vb: Interlocked.CompareExchange(ByRef Single, Single, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.CompareExchange(ByRef System.Single, System.Single, System.Single)
  name.vb: CompareExchange(ByRef Single, Single, Single)
- uid: System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)
  commentId: M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)
  id: CompareExchange``1(``0@,``0,``0)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: CompareExchange<T>(ref T, T, T)
  nameWithType: Interlocked.CompareExchange<T>(ref T, T, T)
  fullName: System.Threading.Interlocked.CompareExchange<T>(ref T, T, T)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareExchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 127
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: 'public static T CompareExchange<T>(ref T location1, T value, T comparand)where T : class'
    content.vb: Public Shared Function CompareExchange(Of T As Class)(ByRef location1 As T, value As T, comparand As T) As T
    parameters:
    - id: location1
      type: '{T}'
    - id: value
      type: '{T}'
    - id: comparand
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: Interlocked.CompareExchange(Of T)(ByRef T, T, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.CompareExchange(Of T)(ByRef T, T, T)
  name.vb: CompareExchange(Of T)(ByRef T, T, T)
- uid: System.Threading.Interlocked.Decrement(System.Int32@)
  commentId: M:System.Threading.Interlocked.Decrement(System.Int32@)
  id: Decrement(System.Int32@)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Decrement(ref Int32)
  nameWithType: Interlocked.Decrement(ref Int32)
  fullName: System.Threading.Interlocked.Decrement(ref System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Decrement
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 128
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static int Decrement(ref int location)
    content.vb: Public Shared Function Decrement(ByRef location As Integer) As Integer
    parameters:
    - id: location
      type: System.Int32
    return:
      type: System.Int32
  nameWithType.vb: Interlocked.Decrement(ByRef Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Decrement(ByRef System.Int32)
  name.vb: Decrement(ByRef Int32)
- uid: System.Threading.Interlocked.Decrement(System.Int64@)
  commentId: M:System.Threading.Interlocked.Decrement(System.Int64@)
  id: Decrement(System.Int64@)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Decrement(ref Int64)
  nameWithType: Interlocked.Decrement(ref Int64)
  fullName: System.Threading.Interlocked.Decrement(ref System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Decrement
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 129
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static long Decrement(ref long location)
    content.vb: Public Shared Function Decrement(ByRef location As Long) As Long
    parameters:
    - id: location
      type: System.Int64
    return:
      type: System.Int64
  nameWithType.vb: Interlocked.Decrement(ByRef Int64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Decrement(ByRef System.Int64)
  name.vb: Decrement(ByRef Int64)
- uid: System.Threading.Interlocked.Exchange(System.Double@,System.Double)
  commentId: M:System.Threading.Interlocked.Exchange(System.Double@,System.Double)
  id: Exchange(System.Double@,System.Double)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Exchange(ref Double, Double)
  nameWithType: Interlocked.Exchange(ref Double, Double)
  fullName: System.Threading.Interlocked.Exchange(ref System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 130
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static double Exchange(ref double location1, double value)
    content.vb: Public Shared Function Exchange(ByRef location1 As Double, value As Double) As Double
    parameters:
    - id: location1
      type: System.Double
    - id: value
      type: System.Double
    return:
      type: System.Double
  nameWithType.vb: Interlocked.Exchange(ByRef Double, Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Exchange(ByRef System.Double, System.Double)
  name.vb: Exchange(ByRef Double, Double)
- uid: System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)
  commentId: M:System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)
  id: Exchange(System.Int32@,System.Int32)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Exchange(ref Int32, Int32)
  nameWithType: Interlocked.Exchange(ref Int32, Int32)
  fullName: System.Threading.Interlocked.Exchange(ref System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 131
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static int Exchange(ref int location1, int value)
    content.vb: Public Shared Function Exchange(ByRef location1 As Integer, value As Integer) As Integer
    parameters:
    - id: location1
      type: System.Int32
    - id: value
      type: System.Int32
    return:
      type: System.Int32
  nameWithType.vb: Interlocked.Exchange(ByRef Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Exchange(ByRef System.Int32, System.Int32)
  name.vb: Exchange(ByRef Int32, Int32)
- uid: System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)
  commentId: M:System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)
  id: Exchange(System.Int64@,System.Int64)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Exchange(ref Int64, Int64)
  nameWithType: Interlocked.Exchange(ref Int64, Int64)
  fullName: System.Threading.Interlocked.Exchange(ref System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 132
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static long Exchange(ref long location1, long value)
    content.vb: Public Shared Function Exchange(ByRef location1 As Long, value As Long) As Long
    parameters:
    - id: location1
      type: System.Int64
    - id: value
      type: System.Int64
    return:
      type: System.Int64
  nameWithType.vb: Interlocked.Exchange(ByRef Int64, Int64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Exchange(ByRef System.Int64, System.Int64)
  name.vb: Exchange(ByRef Int64, Int64)
- uid: System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)
  commentId: M:System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)
  id: Exchange(System.IntPtr@,System.IntPtr)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Exchange(ref IntPtr, IntPtr)
  nameWithType: Interlocked.Exchange(ref IntPtr, IntPtr)
  fullName: System.Threading.Interlocked.Exchange(ref System.IntPtr, System.IntPtr)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 133
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static IntPtr Exchange(ref IntPtr location1, IntPtr value)
    content.vb: Public Shared Function Exchange(ByRef location1 As IntPtr, value As IntPtr) As IntPtr
    parameters:
    - id: location1
      type: System.IntPtr
    - id: value
      type: System.IntPtr
    return:
      type: System.IntPtr
  nameWithType.vb: Interlocked.Exchange(ByRef IntPtr, IntPtr)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Exchange(ByRef System.IntPtr, System.IntPtr)
  name.vb: Exchange(ByRef IntPtr, IntPtr)
- uid: System.Threading.Interlocked.Exchange(System.Object@,System.Object)
  commentId: M:System.Threading.Interlocked.Exchange(System.Object@,System.Object)
  id: Exchange(System.Object@,System.Object)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Exchange(ref Object, Object)
  nameWithType: Interlocked.Exchange(ref Object, Object)
  fullName: System.Threading.Interlocked.Exchange(ref System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 134
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static object Exchange(ref object location1, object value)
    content.vb: Public Shared Function Exchange(ByRef location1 As Object, value As Object) As Object
    parameters:
    - id: location1
      type: System.Object
    - id: value
      type: System.Object
    return:
      type: System.Object
  nameWithType.vb: Interlocked.Exchange(ByRef Object, Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Exchange(ByRef System.Object, System.Object)
  name.vb: Exchange(ByRef Object, Object)
- uid: System.Threading.Interlocked.Exchange(System.Single@,System.Single)
  commentId: M:System.Threading.Interlocked.Exchange(System.Single@,System.Single)
  id: Exchange(System.Single@,System.Single)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Exchange(ref Single, Single)
  nameWithType: Interlocked.Exchange(ref Single, Single)
  fullName: System.Threading.Interlocked.Exchange(ref System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 135
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static float Exchange(ref float location1, float value)
    content.vb: Public Shared Function Exchange(ByRef location1 As Single, value As Single) As Single
    parameters:
    - id: location1
      type: System.Single
    - id: value
      type: System.Single
    return:
      type: System.Single
  nameWithType.vb: Interlocked.Exchange(ByRef Single, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Exchange(ByRef System.Single, System.Single)
  name.vb: Exchange(ByRef Single, Single)
- uid: System.Threading.Interlocked.Exchange``1(``0@,``0)
  commentId: M:System.Threading.Interlocked.Exchange``1(``0@,``0)
  id: Exchange``1(``0@,``0)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Exchange<T>(ref T, T)
  nameWithType: Interlocked.Exchange<T>(ref T, T)
  fullName: System.Threading.Interlocked.Exchange<T>(ref T, T)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exchange
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 136
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: 'public static T Exchange<T>(ref T location1, T value)where T : class'
    content.vb: Public Shared Function Exchange(Of T As Class)(ByRef location1 As T, value As T) As T
    parameters:
    - id: location1
      type: '{T}'
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: Interlocked.Exchange(Of T)(ByRef T, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Exchange(Of T)(ByRef T, T)
  name.vb: Exchange(Of T)(ByRef T, T)
- uid: System.Threading.Interlocked.Increment(System.Int32@)
  commentId: M:System.Threading.Interlocked.Increment(System.Int32@)
  id: Increment(System.Int32@)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Increment(ref Int32)
  nameWithType: Interlocked.Increment(ref Int32)
  fullName: System.Threading.Interlocked.Increment(ref System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Increment
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 137
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static int Increment(ref int location)
    content.vb: Public Shared Function Increment(ByRef location As Integer) As Integer
    parameters:
    - id: location
      type: System.Int32
    return:
      type: System.Int32
  nameWithType.vb: Interlocked.Increment(ByRef Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Increment(ByRef System.Int32)
  name.vb: Increment(ByRef Int32)
- uid: System.Threading.Interlocked.Increment(System.Int64@)
  commentId: M:System.Threading.Interlocked.Increment(System.Int64@)
  id: Increment(System.Int64@)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Increment(ref Int64)
  nameWithType: Interlocked.Increment(ref Int64)
  fullName: System.Threading.Interlocked.Increment(ref System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Increment
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 138
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static long Increment(ref long location)
    content.vb: Public Shared Function Increment(ByRef location As Long) As Long
    parameters:
    - id: location
      type: System.Int64
    return:
      type: System.Int64
  nameWithType.vb: Interlocked.Increment(ByRef Int64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Increment(ByRef System.Int64)
  name.vb: Increment(ByRef Int64)
- uid: System.Threading.Interlocked.MemoryBarrier
  commentId: M:System.Threading.Interlocked.MemoryBarrier
  id: MemoryBarrier
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: MemoryBarrier()
  nameWithType: Interlocked.MemoryBarrier()
  fullName: System.Threading.Interlocked.MemoryBarrier()
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MemoryBarrier
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 139
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static void MemoryBarrier()
    content.vb: Public Shared Sub MemoryBarrier
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Threading.Interlocked.Read(System.Int64@)
  commentId: M:System.Threading.Interlocked.Read(System.Int64@)
  id: Read(System.Int64@)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  - vb
  name: Read(ref Int64)
  nameWithType: Interlocked.Read(ref Int64)
  fullName: System.Threading.Interlocked.Read(ref System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 140
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static long Read(ref long location)
    content.vb: Public Shared Function Read(ByRef location As Long) As Long
    parameters:
    - id: location
      type: System.Int64
    return:
      type: System.Int64
  nameWithType.vb: Interlocked.Read(ByRef Int64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Interlocked.Read(ByRef System.Int64)
  name.vb: Read(ByRef Int64)
references:
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
