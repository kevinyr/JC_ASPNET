items:
- uid: System.Threading.LazyInitializer
  commentId: T:System.Threading.LazyInitializer
  id: LazyInitializer
  parent: System.Threading
  children:
  - System.Threading.LazyInitializer.EnsureInitialized``1(``0@)
  - System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@)
  - System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})
  - System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})
  langs:
  - csharp
  - vb
  name: LazyInitializer
  nameWithType: LazyInitializer
  fullName: System.Threading.LazyInitializer
  type: Class
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LazyInitializer
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 142
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: 'public class LazyInitializer : object'
    content.vb: >-
      Public Class LazyInitializer
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Threading.LazyInitializer.EnsureInitialized``1(``0@)
  commentId: M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@)
  id: EnsureInitialized``1(``0@)
  parent: System.Threading.LazyInitializer
  langs:
  - csharp
  - vb
  name: EnsureInitialized<T>(ref T)
  nameWithType: LazyInitializer.EnsureInitialized<T>(ref T)
  fullName: System.Threading.LazyInitializer.EnsureInitialized<T>(ref T)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnsureInitialized
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 144
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: 'public static T EnsureInitialized<T>(ref T target)where T : class'
    content.vb: Public Shared Function EnsureInitialized(Of T As Class)(ByRef target As T) As T
    parameters:
    - id: target
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: LazyInitializer.EnsureInitialized(Of T)(ByRef T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.LazyInitializer.EnsureInitialized(Of T)(ByRef T)
  name.vb: EnsureInitialized(Of T)(ByRef T)
- uid: System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@)
  commentId: M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@)
  id: EnsureInitialized``1(``0@,System.Boolean@,System.Object@)
  parent: System.Threading.LazyInitializer
  langs:
  - csharp
  - vb
  name: EnsureInitialized<T>(ref T, ref Boolean, ref Object)
  nameWithType: LazyInitializer.EnsureInitialized<T>(ref T, ref Boolean, ref Object)
  fullName: System.Threading.LazyInitializer.EnsureInitialized<T>(ref T, ref System.Boolean, ref System.Object)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnsureInitialized
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 145
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static T EnsureInitialized<T>(ref T target, ref bool initialized, ref object syncLock)
    content.vb: Public Shared Function EnsureInitialized(Of T)(ByRef target As T, ByRef initialized As Boolean, ByRef syncLock As Object) As T
    parameters:
    - id: target
      type: '{T}'
    - id: initialized
      type: System.Boolean
    - id: syncLock
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: LazyInitializer.EnsureInitialized(Of T)(ByRef T, ByRef Boolean, ByRef Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.LazyInitializer.EnsureInitialized(Of T)(ByRef T, ByRef System.Boolean, ByRef System.Object)
  name.vb: EnsureInitialized(Of T)(ByRef T, ByRef Boolean, ByRef Object)
- uid: System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})
  commentId: M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})
  id: EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})
  parent: System.Threading.LazyInitializer
  langs:
  - csharp
  - vb
  name: EnsureInitialized<T>(ref T, ref Boolean, ref Object, Func<T>)
  nameWithType: LazyInitializer.EnsureInitialized<T>(ref T, ref Boolean, ref Object, Func<T>)
  fullName: System.Threading.LazyInitializer.EnsureInitialized<T>(ref T, ref System.Boolean, ref System.Object, System.Func<T>)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnsureInitialized
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 146
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static T EnsureInitialized<T>(ref T target, ref bool initialized, ref object syncLock, Func<T> valueFactory)
    content.vb: Public Shared Function EnsureInitialized(Of T)(ByRef target As T, ByRef initialized As Boolean, ByRef syncLock As Object, valueFactory As Func(Of T)) As T
    parameters:
    - id: target
      type: '{T}'
    - id: initialized
      type: System.Boolean
    - id: syncLock
      type: System.Object
    - id: valueFactory
      type: System.Func{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: LazyInitializer.EnsureInitialized(Of T)(ByRef T, ByRef Boolean, ByRef Object, Func(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.LazyInitializer.EnsureInitialized(Of T)(ByRef T, ByRef System.Boolean, ByRef System.Object, System.Func(Of T))
  name.vb: EnsureInitialized(Of T)(ByRef T, ByRef Boolean, ByRef Object, Func(Of T))
- uid: System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})
  commentId: M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})
  id: EnsureInitialized``1(``0@,System.Func{``0})
  parent: System.Threading.LazyInitializer
  langs:
  - csharp
  - vb
  name: EnsureInitialized<T>(ref T, Func<T>)
  nameWithType: LazyInitializer.EnsureInitialized<T>(ref T, Func<T>)
  fullName: System.Threading.LazyInitializer.EnsureInitialized<T>(ref T, System.Func<T>)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnsureInitialized
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 147
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: 'public static T EnsureInitialized<T>(ref T target, Func<T> valueFactory)where T : class'
    content.vb: Public Shared Function EnsureInitialized(Of T As Class)(ByRef target As T, valueFactory As Func(Of T)) As T
    parameters:
    - id: target
      type: '{T}'
    - id: valueFactory
      type: System.Func{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: LazyInitializer.EnsureInitialized(Of T)(ByRef T, Func(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.LazyInitializer.EnsureInitialized(Of T)(ByRef T, System.Func(Of T))
  name.vb: EnsureInitialized(Of T)(ByRef T, Func(Of T))
references:
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Func{{T}}
  commentId: '!:System.Func{``0}'
  parent: System
  definition: System.Func`1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullname.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: false
  name: Func<>
  nameWithType: Func<>
  fullName: System.Func<>
  nameWithType.vb: Func(Of )
  fullname.vb: System.Func(Of )
  name.vb: Func(Of )
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
