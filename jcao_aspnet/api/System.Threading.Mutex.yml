items:
- uid: System.Threading.Mutex
  commentId: T:System.Threading.Mutex
  id: Mutex
  parent: System.Threading
  children:
  - System.Threading.Mutex.#ctor
  - System.Threading.Mutex.#ctor(System.Boolean)
  - System.Threading.Mutex.#ctor(System.Boolean,System.String)
  - System.Threading.Mutex.#ctor(System.Boolean,System.String,System.Boolean@)
  - System.Threading.Mutex.OpenExisting(System.String)
  - System.Threading.Mutex.ReleaseMutex
  - System.Threading.Mutex.TryOpenExisting(System.String,System.Threading.Mutex@)
  langs:
  - csharp
  - vb
  name: Mutex
  nameWithType: Mutex
  fullName: System.Threading.Mutex
  type: Class
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Mutex
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 201
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: 'public sealed class Mutex : WaitHandle'
    content.vb: >-
      Public NotInheritable Class Mutex
          Inherits WaitHandle
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Threading.Mutex.#ctor
  commentId: M:System.Threading.Mutex.#ctor
  id: '#ctor'
  parent: System.Threading.Mutex
  langs:
  - csharp
  - vb
  name: Mutex()
  nameWithType: Mutex.Mutex()
  fullName: System.Threading.Mutex.Mutex()
  type: Constructor
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 203
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public Mutex()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Mutex.#ctor(System.Boolean)
  commentId: M:System.Threading.Mutex.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Threading.Mutex
  langs:
  - csharp
  - vb
  name: Mutex(Boolean)
  nameWithType: Mutex.Mutex(Boolean)
  fullName: System.Threading.Mutex.Mutex(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 204
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public Mutex(bool initiallyOwned)
    content.vb: Public Sub New(initiallyOwned As Boolean)
    parameters:
    - id: initiallyOwned
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Mutex.#ctor(System.Boolean,System.String)
  commentId: M:System.Threading.Mutex.#ctor(System.Boolean,System.String)
  id: '#ctor(System.Boolean,System.String)'
  parent: System.Threading.Mutex
  langs:
  - csharp
  - vb
  name: Mutex(Boolean, String)
  nameWithType: Mutex.Mutex(Boolean, String)
  fullName: System.Threading.Mutex.Mutex(System.Boolean, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 205
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public Mutex(bool initiallyOwned, string name)
    content.vb: Public Sub New(initiallyOwned As Boolean, name As String)
    parameters:
    - id: initiallyOwned
      type: System.Boolean
    - id: name
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Mutex.#ctor(System.Boolean,System.String,System.Boolean@)
  commentId: M:System.Threading.Mutex.#ctor(System.Boolean,System.String,System.Boolean@)
  id: '#ctor(System.Boolean,System.String,System.Boolean@)'
  parent: System.Threading.Mutex
  langs:
  - csharp
  - vb
  name: Mutex(Boolean, String, out Boolean)
  nameWithType: Mutex.Mutex(Boolean, String, out Boolean)
  fullName: System.Threading.Mutex.Mutex(System.Boolean, System.String, out System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 207
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public Mutex(bool initiallyOwned, string name, out bool createdNew)
    content.vb: Public Sub New(initiallyOwned As Boolean, name As String, ByRef createdNew As Boolean)
    parameters:
    - id: initiallyOwned
      type: System.Boolean
    - id: name
      type: System.String
    - id: createdNew
      type: System.Boolean
  nameWithType.vb: Mutex.Mutex(Boolean, String, ByRef Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Mutex.Mutex(System.Boolean, System.String, ByRef System.Boolean)
  name.vb: Mutex(Boolean, String, ByRef Boolean)
- uid: System.Threading.Mutex.OpenExisting(System.String)
  commentId: M:System.Threading.Mutex.OpenExisting(System.String)
  id: OpenExisting(System.String)
  parent: System.Threading.Mutex
  langs:
  - csharp
  - vb
  name: OpenExisting(String)
  nameWithType: Mutex.OpenExisting(String)
  fullName: System.Threading.Mutex.OpenExisting(System.String)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenExisting
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 209
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static Mutex OpenExisting(string name)
    content.vb: Public Shared Function OpenExisting(name As String) As Mutex
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Mutex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Threading.Mutex.ReleaseMutex
  commentId: M:System.Threading.Mutex.ReleaseMutex
  id: ReleaseMutex
  parent: System.Threading.Mutex
  langs:
  - csharp
  - vb
  name: ReleaseMutex()
  nameWithType: Mutex.ReleaseMutex()
  fullName: System.Threading.Mutex.ReleaseMutex()
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReleaseMutex
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 211
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public void ReleaseMutex()
    content.vb: Public Sub ReleaseMutex
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Mutex.TryOpenExisting(System.String,System.Threading.Mutex@)
  commentId: M:System.Threading.Mutex.TryOpenExisting(System.String,System.Threading.Mutex@)
  id: TryOpenExisting(System.String,System.Threading.Mutex@)
  parent: System.Threading.Mutex
  langs:
  - csharp
  - vb
  name: TryOpenExisting(String, out Mutex)
  nameWithType: Mutex.TryOpenExisting(String, out Mutex)
  fullName: System.Threading.Mutex.TryOpenExisting(System.String, out System.Threading.Mutex)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryOpenExisting
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 212
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static bool TryOpenExisting(string name, out Mutex result)
    content.vb: Public Shared Function TryOpenExisting(name As String, ByRef result As Mutex) As Boolean
    parameters:
    - id: name
      type: System.String
    - id: result
      type: System.Threading.Mutex
    return:
      type: System.Boolean
  nameWithType.vb: Mutex.TryOpenExisting(String, ByRef Mutex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Mutex.TryOpenExisting(System.String, ByRef System.Threading.Mutex)
  name.vb: TryOpenExisting(String, ByRef Mutex)
references:
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Mutex
  commentId: T:System.Threading.Mutex
  parent: System.Threading
  isExternal: false
  name: Mutex
  nameWithType: Mutex
  fullName: System.Threading.Mutex
