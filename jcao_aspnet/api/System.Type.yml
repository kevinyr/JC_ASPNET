items:
- uid: System.Type
  commentId: T:System.Type
  id: Type
  parent: System
  children:
  - System.Type.AssemblyQualifiedName
  - System.Type.DeclaringType
  - System.Type.Delimiter
  - System.Type.EmptyTypes
  - System.Type.Equals(System.Object)
  - System.Type.Equals(System.Type)
  - System.Type.FullName
  - System.Type.GenericParameterPosition
  - System.Type.GenericTypeArguments
  - System.Type.GetArrayRank
  - System.Type.GetElementType
  - System.Type.GetGenericTypeDefinition
  - System.Type.GetHashCode
  - System.Type.GetType(System.String)
  - System.Type.GetType(System.String,System.Boolean)
  - System.Type.GetType(System.String,System.Boolean,System.Boolean)
  - System.Type.GetTypeCode(System.Type)
  - System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  - System.Type.HasElementType
  - System.Type.IsArray
  - System.Type.IsByRef
  - System.Type.IsConstructedGenericType
  - System.Type.IsGenericParameter
  - System.Type.IsNested
  - System.Type.IsPointer
  - System.Type.MakeArrayType
  - System.Type.MakeArrayType(System.Int32)
  - System.Type.MakeByRefType
  - System.Type.MakeGenericType(System.Type[])
  - System.Type.MakePointerType
  - System.Type.Missing
  - System.Type.Name
  - System.Type.Namespace
  - System.Type.ToString
  - System.Type.TypeHandle
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Type
  fullName: System.Type
  type: Class
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Type
    path: src/System.Runtime/ref/System.Runtime.Manual.cs
    startLine: 39
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract class Type
    content.vb: Public MustInherit Class Type
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Type.EmptyTypes
  commentId: F:System.Type.EmptyTypes
  id: EmptyTypes
  parent: System.Type
  langs:
  - csharp
  - vb
  name: EmptyTypes
  nameWithType: Type.EmptyTypes
  fullName: System.Type.EmptyTypes
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EmptyTypes
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1884
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static readonly Type[] EmptyTypes
    content.vb: Public Shared ReadOnly EmptyTypes As Type()
    return:
      type: System.Type[]
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Type.Missing
  commentId: F:System.Type.Missing
  id: Missing
  parent: System.Type
  langs:
  - csharp
  - vb
  name: Missing
  nameWithType: Type.Missing
  fullName: System.Type.Missing
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Missing
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1885
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static readonly object Missing
    content.vb: Public Shared ReadOnly Missing As Object
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Type.Delimiter
  commentId: F:System.Type.Delimiter
  id: Delimiter
  parent: System.Type
  langs:
  - csharp
  - vb
  name: Delimiter
  nameWithType: Type.Delimiter
  fullName: System.Type.Delimiter
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Delimiter
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1886
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static readonly char Delimiter
    content.vb: Public Shared ReadOnly Delimiter As Char
    return:
      type: System.Char
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Type.AssemblyQualifiedName
  commentId: P:System.Type.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Type
  langs:
  - csharp
  - vb
  name: AssemblyQualifiedName
  nameWithType: Type.AssemblyQualifiedName
  fullName: System.Type.AssemblyQualifiedName
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AssemblyQualifiedName
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1888
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract string AssemblyQualifiedName { get; }
    content.vb: Public MustOverride ReadOnly Property AssemblyQualifiedName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Type.FullName
  commentId: P:System.Type.FullName
  id: FullName
  parent: System.Type
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: Type.FullName
  fullName: System.Type.FullName
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FullName
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1889
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract string FullName { get; }
    content.vb: Public MustOverride ReadOnly Property FullName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Type.GenericParameterPosition
  commentId: P:System.Type.GenericParameterPosition
  id: GenericParameterPosition
  parent: System.Type
  langs:
  - csharp
  - vb
  name: GenericParameterPosition
  nameWithType: Type.GenericParameterPosition
  fullName: System.Type.GenericParameterPosition
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenericParameterPosition
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1890
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract int GenericParameterPosition { get; }
    content.vb: Public MustOverride ReadOnly Property GenericParameterPosition As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Type.GenericTypeArguments
  commentId: P:System.Type.GenericTypeArguments
  id: GenericTypeArguments
  parent: System.Type
  langs:
  - csharp
  - vb
  name: GenericTypeArguments
  nameWithType: Type.GenericTypeArguments
  fullName: System.Type.GenericTypeArguments
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenericTypeArguments
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1891
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract Type[] GenericTypeArguments { get; }
    content.vb: Public MustOverride ReadOnly Property GenericTypeArguments As Type()
    parameters: []
    return:
      type: System.Type[]
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Type.HasElementType
  commentId: P:System.Type.HasElementType
  id: HasElementType
  parent: System.Type
  langs:
  - csharp
  - vb
  name: HasElementType
  nameWithType: Type.HasElementType
  fullName: System.Type.HasElementType
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasElementType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1892
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool HasElementType { get; }
    content.vb: Public ReadOnly Property HasElementType As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Type.IsArray
  commentId: P:System.Type.IsArray
  id: IsArray
  parent: System.Type
  langs:
  - csharp
  - vb
  name: IsArray
  nameWithType: Type.IsArray
  fullName: System.Type.IsArray
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsArray
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1893
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public virtual bool IsArray { get; }
    content.vb: Public Overridable ReadOnly Property IsArray As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Type.IsByRef
  commentId: P:System.Type.IsByRef
  id: IsByRef
  parent: System.Type
  langs:
  - csharp
  - vb
  name: IsByRef
  nameWithType: Type.IsByRef
  fullName: System.Type.IsByRef
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsByRef
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1894
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public virtual bool IsByRef { get; }
    content.vb: Public Overridable ReadOnly Property IsByRef As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Type.IsConstructedGenericType
  commentId: P:System.Type.IsConstructedGenericType
  id: IsConstructedGenericType
  parent: System.Type
  langs:
  - csharp
  - vb
  name: IsConstructedGenericType
  nameWithType: Type.IsConstructedGenericType
  fullName: System.Type.IsConstructedGenericType
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsConstructedGenericType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1895
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract bool IsConstructedGenericType { get; }
    content.vb: Public MustOverride ReadOnly Property IsConstructedGenericType As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Type.IsGenericParameter
  commentId: P:System.Type.IsGenericParameter
  id: IsGenericParameter
  parent: System.Type
  langs:
  - csharp
  - vb
  name: IsGenericParameter
  nameWithType: Type.IsGenericParameter
  fullName: System.Type.IsGenericParameter
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsGenericParameter
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1896
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract bool IsGenericParameter { get; }
    content.vb: Public MustOverride ReadOnly Property IsGenericParameter As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Type.IsNested
  commentId: P:System.Type.IsNested
  id: IsNested
  parent: System.Type
  langs:
  - csharp
  - vb
  name: IsNested
  nameWithType: Type.IsNested
  fullName: System.Type.IsNested
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNested
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1897
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool IsNested { get; }
    content.vb: Public ReadOnly Property IsNested As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Type.IsPointer
  commentId: P:System.Type.IsPointer
  id: IsPointer
  parent: System.Type
  langs:
  - csharp
  - vb
  name: IsPointer
  nameWithType: Type.IsPointer
  fullName: System.Type.IsPointer
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsPointer
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1898
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public virtual bool IsPointer { get; }
    content.vb: Public Overridable ReadOnly Property IsPointer As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Type.Namespace
  commentId: P:System.Type.Namespace
  id: Namespace
  parent: System.Type
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: Type.Namespace
  fullName: System.Type.Namespace
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Namespace
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1899
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract string Namespace { get; }
    content.vb: Public MustOverride ReadOnly Property Namespace As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Type.TypeHandle
  commentId: P:System.Type.TypeHandle
  id: TypeHandle
  parent: System.Type
  langs:
  - csharp
  - vb
  name: TypeHandle
  nameWithType: Type.TypeHandle
  fullName: System.Type.TypeHandle
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TypeHandle
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1900
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public virtual RuntimeTypeHandle TypeHandle { get; }
    content.vb: Public Overridable ReadOnly Property TypeHandle As RuntimeTypeHandle
    parameters: []
    return:
      type: System.RuntimeTypeHandle
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Type.Equals(System.Object)
  commentId: M:System.Type.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Type
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Type.Equals(Object)
  fullName: System.Type.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1901
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override bool Equals(object o)
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Type.Equals(System.Type)
  commentId: M:System.Type.Equals(System.Type)
  id: Equals(System.Type)
  parent: System.Type
  langs:
  - csharp
  - vb
  name: Equals(Type)
  nameWithType: Type.Equals(Type)
  fullName: System.Type.Equals(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1902
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool Equals(Type o)
    content.vb: Public Function Equals(o As Type) As Boolean
    parameters:
    - id: o
      type: System.Type
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Type.GetArrayRank
  commentId: M:System.Type.GetArrayRank
  id: GetArrayRank
  parent: System.Type
  langs:
  - csharp
  - vb
  name: GetArrayRank()
  nameWithType: Type.GetArrayRank()
  fullName: System.Type.GetArrayRank()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetArrayRank
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1903
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract int GetArrayRank()
    content.vb: Public MustOverride Function GetArrayRank As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Type.GetElementType
  commentId: M:System.Type.GetElementType
  id: GetElementType
  parent: System.Type
  langs:
  - csharp
  - vb
  name: GetElementType()
  nameWithType: Type.GetElementType()
  fullName: System.Type.GetElementType()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetElementType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1904
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract Type GetElementType()
    content.vb: Public MustOverride Function GetElementType As Type
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Type.GetGenericTypeDefinition
  commentId: M:System.Type.GetGenericTypeDefinition
  id: GetGenericTypeDefinition
  parent: System.Type
  langs:
  - csharp
  - vb
  name: GetGenericTypeDefinition()
  nameWithType: Type.GetGenericTypeDefinition()
  fullName: System.Type.GetGenericTypeDefinition()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGenericTypeDefinition
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1905
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract Type GetGenericTypeDefinition()
    content.vb: Public MustOverride Function GetGenericTypeDefinition As Type
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Type.GetHashCode
  commentId: M:System.Type.GetHashCode
  id: GetHashCode
  parent: System.Type
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Type.GetHashCode()
  fullName: System.Type.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1906
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Type.GetType(System.String)
  commentId: M:System.Type.GetType(System.String)
  id: GetType(System.String)
  parent: System.Type
  langs:
  - csharp
  - vb
  name: GetType(String)
  nameWithType: Type.GetType(String)
  fullName: System.Type.GetType(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1907
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static Type GetType(string typeName)
    content.vb: Public Shared Function GetType(typeName As String) As Type
    parameters:
    - id: typeName
      type: System.String
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Type.GetType(System.String,System.Boolean)
  commentId: M:System.Type.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Type
  langs:
  - csharp
  - vb
  name: GetType(String, Boolean)
  nameWithType: Type.GetType(String, Boolean)
  fullName: System.Type.GetType(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1908
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static Type GetType(string typeName, bool throwOnError)
    content.vb: Public Shared Function GetType(typeName As String, throwOnError As Boolean) As Type
    parameters:
    - id: typeName
      type: System.String
    - id: throwOnError
      type: System.Boolean
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Type.GetType(System.String,System.Boolean,System.Boolean)
  commentId: M:System.Type.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Type
  langs:
  - csharp
  - vb
  name: GetType(String, Boolean, Boolean)
  nameWithType: Type.GetType(String, Boolean, Boolean)
  fullName: System.Type.GetType(System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1909
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static Type GetType(string typeName, bool throwOnError, bool ignoreCase)
    content.vb: Public Shared Function GetType(typeName As String, throwOnError As Boolean, ignoreCase As Boolean) As Type
    parameters:
    - id: typeName
      type: System.String
    - id: throwOnError
      type: System.Boolean
    - id: ignoreCase
      type: System.Boolean
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Type.GetTypeCode(System.Type)
  commentId: M:System.Type.GetTypeCode(System.Type)
  id: GetTypeCode(System.Type)
  parent: System.Type
  langs:
  - csharp
  - vb
  name: GetTypeCode(Type)
  nameWithType: Type.GetTypeCode(Type)
  fullName: System.Type.GetTypeCode(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTypeCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1910
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static TypeCode GetTypeCode(Type type)
    content.vb: Public Shared Function GetTypeCode(type As Type) As TypeCode
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.TypeCode
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  commentId: M:System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  id: GetTypeFromHandle(System.RuntimeTypeHandle)
  parent: System.Type
  langs:
  - csharp
  - vb
  name: GetTypeFromHandle(RuntimeTypeHandle)
  nameWithType: Type.GetTypeFromHandle(RuntimeTypeHandle)
  fullName: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTypeFromHandle
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1911
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static Type GetTypeFromHandle(RuntimeTypeHandle handle)
    content.vb: Public Shared Function GetTypeFromHandle(handle As RuntimeTypeHandle) As Type
    parameters:
    - id: handle
      type: System.RuntimeTypeHandle
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Type.MakeArrayType
  commentId: M:System.Type.MakeArrayType
  id: MakeArrayType
  parent: System.Type
  langs:
  - csharp
  - vb
  name: MakeArrayType()
  nameWithType: Type.MakeArrayType()
  fullName: System.Type.MakeArrayType()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MakeArrayType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1912
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract Type MakeArrayType()
    content.vb: Public MustOverride Function MakeArrayType As Type
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Type.MakeArrayType(System.Int32)
  commentId: M:System.Type.MakeArrayType(System.Int32)
  id: MakeArrayType(System.Int32)
  parent: System.Type
  langs:
  - csharp
  - vb
  name: MakeArrayType(Int32)
  nameWithType: Type.MakeArrayType(Int32)
  fullName: System.Type.MakeArrayType(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MakeArrayType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1913
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract Type MakeArrayType(int rank)
    content.vb: Public MustOverride Function MakeArrayType(rank As Integer) As Type
    parameters:
    - id: rank
      type: System.Int32
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Type.MakeByRefType
  commentId: M:System.Type.MakeByRefType
  id: MakeByRefType
  parent: System.Type
  langs:
  - csharp
  - vb
  name: MakeByRefType()
  nameWithType: Type.MakeByRefType()
  fullName: System.Type.MakeByRefType()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MakeByRefType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1914
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract Type MakeByRefType()
    content.vb: Public MustOverride Function MakeByRefType As Type
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Type.MakeGenericType(System.Type[])
  commentId: M:System.Type.MakeGenericType(System.Type[])
  id: MakeGenericType(System.Type[])
  parent: System.Type
  langs:
  - csharp
  - vb
  name: MakeGenericType(Type[])
  nameWithType: Type.MakeGenericType(Type[])
  fullName: System.Type.MakeGenericType(System.Type[])
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MakeGenericType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1915
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract Type MakeGenericType(params Type[] typeArguments)
    content.vb: Public MustOverride Function MakeGenericType(ParamArray typeArguments As Type()) As Type
    parameters:
    - id: typeArguments
      type: System.Type[]
    return:
      type: System.Type
  nameWithType.vb: Type.MakeGenericType(Type())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Type.MakeGenericType(System.Type())
  name.vb: MakeGenericType(Type())
- uid: System.Type.MakePointerType
  commentId: M:System.Type.MakePointerType
  id: MakePointerType
  parent: System.Type
  langs:
  - csharp
  - vb
  name: MakePointerType()
  nameWithType: Type.MakePointerType()
  fullName: System.Type.MakePointerType()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MakePointerType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1916
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract Type MakePointerType()
    content.vb: Public MustOverride Function MakePointerType As Type
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Type.ToString
  commentId: M:System.Type.ToString
  id: ToString
  parent: System.Type
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Type.ToString()
  fullName: System.Type.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1917
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Type.DeclaringType
  commentId: P:System.Type.DeclaringType
  id: DeclaringType
  parent: System.Type
  langs:
  - csharp
  - vb
  name: DeclaringType
  nameWithType: Type.DeclaringType
  fullName: System.Type.DeclaringType
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeclaringType
    path: src/System.Runtime/ref/System.Runtime.Manual.cs
    startLine: 42
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract Type DeclaringType { get; }
    content.vb: Public MustOverride ReadOnly Property DeclaringType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Type.Name
  commentId: P:System.Type.Name
  id: Name
  parent: System.Type
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Type.Name
  fullName: System.Type.Name
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Runtime/ref/System.Runtime.Manual.cs
    startLine: 43
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public abstract string Name { get; }
    content.vb: Public MustOverride ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
references:
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.RuntimeTypeHandle
  commentId: T:System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TypeCode
  commentId: T:System.TypeCode
  parent: System
  isExternal: false
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
