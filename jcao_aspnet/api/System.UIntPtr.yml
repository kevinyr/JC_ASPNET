items:
- uid: System.UIntPtr
  commentId: T:System.UIntPtr
  id: UIntPtr
  parent: System
  children:
  - System.UIntPtr.#ctor(System.UInt32)
  - System.UIntPtr.#ctor(System.UInt64)
  - System.UIntPtr.#ctor(System.Void*)
  - System.UIntPtr.Add(System.UIntPtr,System.Int32)
  - System.UIntPtr.Equals(System.Object)
  - System.UIntPtr.GetHashCode
  - System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)
  - System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)
  - System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr
  - System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr
  - System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32
  - System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64
  - System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*
  - System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr
  - System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)
  - System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)
  - System.UIntPtr.Size
  - System.UIntPtr.Subtract(System.UIntPtr,System.Int32)
  - System.UIntPtr.ToPointer
  - System.UIntPtr.ToString
  - System.UIntPtr.ToUInt32
  - System.UIntPtr.ToUInt64
  - System.UIntPtr.Zero
  langs:
  - csharp
  - vb
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
  type: Struct
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UIntPtr
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2090
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [CLSCompliant(false)]

      [StructLayout(LayoutKind.Sequential)]

      public struct UIntPtr
    content.vb: >-
      <CLSCompliant(False)>

      <StructLayout(LayoutKind.Sequential)>

      Public Structure UIntPtr
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.UIntPtr.Zero
  commentId: F:System.UIntPtr.Zero
  id: Zero
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: UIntPtr.Zero
  fullName: System.UIntPtr.Zero
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Zero
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2094
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static readonly UIntPtr Zero
    content.vb: Public Shared ReadOnly Zero As UIntPtr
    return:
      type: System.UIntPtr
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.UIntPtr.#ctor(System.UInt32)
  commentId: M:System.UIntPtr.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: UIntPtr(UInt32)
  nameWithType: UIntPtr.UIntPtr(UInt32)
  fullName: System.UIntPtr.UIntPtr(System.UInt32)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2095
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public UIntPtr(uint value)
    content.vb: Public Sub New(value As UInteger)
    parameters:
    - id: value
      type: System.UInt32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.UIntPtr.#ctor(System.UInt64)
  commentId: M:System.UIntPtr.#ctor(System.UInt64)
  id: '#ctor(System.UInt64)'
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: UIntPtr(UInt64)
  nameWithType: UIntPtr.UIntPtr(UInt64)
  fullName: System.UIntPtr.UIntPtr(System.UInt64)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2096
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public UIntPtr(ulong value)
    content.vb: Public Sub New(value As ULong)
    parameters:
    - id: value
      type: System.UInt64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.UIntPtr.#ctor(System.Void*)
  commentId: M:System.UIntPtr.#ctor(System.Void*)
  id: '#ctor(System.Void*)'
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: UIntPtr(Void*)
  nameWithType: UIntPtr.UIntPtr(Void*)
  fullName: System.UIntPtr.UIntPtr(System.Void*)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2097
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [CLSCompliant(false)]

      [SecurityCritical]

      public UIntPtr(void *value)
    content.vb: >-
      <CLSCompliant(False)>

      <SecurityCritical>

      Public Sub New(value As  *)
    parameters:
    - id: value
      type: System.Void*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.UIntPtr.Size
  commentId: P:System.UIntPtr.Size
  id: Size
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: UIntPtr.Size
  fullName: System.UIntPtr.Size
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Size
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2100
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static int Size { get; }
    content.vb: Public Shared ReadOnly Property Size As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.UIntPtr.Add(System.UIntPtr,System.Int32)
  commentId: M:System.UIntPtr.Add(System.UIntPtr,System.Int32)
  id: Add(System.UIntPtr,System.Int32)
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Add(UIntPtr, Int32)
  nameWithType: UIntPtr.Add(UIntPtr, Int32)
  fullName: System.UIntPtr.Add(System.UIntPtr, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2101
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static UIntPtr Add(UIntPtr pointer, int offset)
    content.vb: Public Shared Function Add(pointer As UIntPtr, offset As Integer) As UIntPtr
    parameters:
    - id: pointer
      type: System.UIntPtr
    - id: offset
      type: System.Int32
    return:
      type: System.UIntPtr
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.UIntPtr.Equals(System.Object)
  commentId: M:System.UIntPtr.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: UIntPtr.Equals(Object)
  fullName: System.UIntPtr.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2102
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.UIntPtr.GetHashCode
  commentId: M:System.UIntPtr.GetHashCode
  id: GetHashCode
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: UIntPtr.GetHashCode()
  fullName: System.UIntPtr.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2103
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)
  commentId: M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)
  id: op_Addition(System.UIntPtr,System.Int32)
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Addition(UIntPtr, Int32)
  nameWithType: UIntPtr.Addition(UIntPtr, Int32)
  fullName: System.UIntPtr.Addition(System.UIntPtr, System.Int32)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2104
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static UIntPtr operator +(UIntPtr pointer, int offset)
    content.vb: Public Shared Operator +(pointer As UIntPtr, offset As Integer) As UIntPtr
    parameters:
    - id: pointer
      type: System.UIntPtr
    - id: offset
      type: System.Int32
    return:
      type: System.UIntPtr
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)
  commentId: M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)
  id: op_Equality(System.UIntPtr,System.UIntPtr)
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Equality(UIntPtr, UIntPtr)
  nameWithType: UIntPtr.Equality(UIntPtr, UIntPtr)
  fullName: System.UIntPtr.Equality(System.UIntPtr, System.UIntPtr)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2105
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool operator ==(UIntPtr value1, UIntPtr value2)
    content.vb: Public Shared Operator =(value1 As UIntPtr, value2 As UIntPtr) As Boolean
    parameters:
    - id: value1
      type: System.UIntPtr
    - id: value2
      type: System.UIntPtr
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr
  commentId: M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr
  id: op_Explicit(System.UInt32)~System.UIntPtr
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Explicit(UInt32 to UIntPtr)
  nameWithType: UIntPtr.Explicit(UInt32 to UIntPtr)
  fullName: System.UIntPtr.Explicit(System.UInt32 to System.UIntPtr)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2106
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static explicit operator UIntPtr(uint value)
    content.vb: Public Shared Narrowing Operator CType(value As UInteger) As UIntPtr
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: System.UIntPtr
  nameWithType.vb: UIntPtr.Narrowing(UInt32 to UIntPtr)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.UIntPtr.Narrowing(System.UInt32 to System.UIntPtr)
  name.vb: Narrowing(UInt32 to UIntPtr)
- uid: System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr
  commentId: M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr
  id: op_Explicit(System.UInt64)~System.UIntPtr
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Explicit(UInt64 to UIntPtr)
  nameWithType: UIntPtr.Explicit(UInt64 to UIntPtr)
  fullName: System.UIntPtr.Explicit(System.UInt64 to System.UIntPtr)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2107
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static explicit operator UIntPtr(ulong value)
    content.vb: Public Shared Narrowing Operator CType(value As ULong) As UIntPtr
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.UIntPtr
  nameWithType.vb: UIntPtr.Narrowing(UInt64 to UIntPtr)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.UIntPtr.Narrowing(System.UInt64 to System.UIntPtr)
  name.vb: Narrowing(UInt64 to UIntPtr)
- uid: System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32
  commentId: M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32
  id: op_Explicit(System.UIntPtr)~System.UInt32
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Explicit(UIntPtr to UInt32)
  nameWithType: UIntPtr.Explicit(UIntPtr to UInt32)
  fullName: System.UIntPtr.Explicit(System.UIntPtr to System.UInt32)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2108
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static explicit operator uint (UIntPtr value)
    content.vb: Public Shared Narrowing Operator CType(value As UIntPtr) As UInteger
    parameters:
    - id: value
      type: System.UIntPtr
    return:
      type: System.UInt32
  nameWithType.vb: UIntPtr.Narrowing(UIntPtr to UInt32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.UIntPtr.Narrowing(System.UIntPtr to System.UInt32)
  name.vb: Narrowing(UIntPtr to UInt32)
- uid: System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64
  commentId: M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64
  id: op_Explicit(System.UIntPtr)~System.UInt64
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Explicit(UIntPtr to UInt64)
  nameWithType: UIntPtr.Explicit(UIntPtr to UInt64)
  fullName: System.UIntPtr.Explicit(System.UIntPtr to System.UInt64)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2109
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static explicit operator ulong (UIntPtr value)
    content.vb: Public Shared Narrowing Operator CType(value As UIntPtr) As ULong
    parameters:
    - id: value
      type: System.UIntPtr
    return:
      type: System.UInt64
  nameWithType.vb: UIntPtr.Narrowing(UIntPtr to UInt64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.UIntPtr.Narrowing(System.UIntPtr to System.UInt64)
  name.vb: Narrowing(UIntPtr to UInt64)
- uid: System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*
  commentId: M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*
  id: op_Explicit(System.UIntPtr)~System.Void*
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Explicit(UIntPtr to Void*)
  nameWithType: UIntPtr.Explicit(UIntPtr to Void*)
  fullName: System.UIntPtr.Explicit(System.UIntPtr to System.Void*)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2110
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [CLSCompliant(false)]

      [SecurityCritical]

      public static explicit operator void *(UIntPtr value)
    content.vb: "<CLSCompliant(False)>\n<SecurityCritical>\nPublic Shared Narrowing Operator CType(value As UIntPtr) As "
    parameters:
    - id: value
      type: System.UIntPtr
    return:
      type: System.Void*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  nameWithType.vb: UIntPtr.Narrowing(UIntPtr to Void*)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.UIntPtr.Narrowing(System.UIntPtr to System.Void*)
  name.vb: Narrowing(UIntPtr to Void*)
- uid: System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr
  commentId: M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr
  id: op_Explicit(System.Void*)~System.UIntPtr
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Explicit(Void* to UIntPtr)
  nameWithType: UIntPtr.Explicit(Void* to UIntPtr)
  fullName: System.UIntPtr.Explicit(System.Void* to System.UIntPtr)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2113
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [CLSCompliant(false)]

      [SecurityCritical]

      public static explicit operator UIntPtr(void *value)
    content.vb: >-
      <CLSCompliant(False)>

      <SecurityCritical>

      Public Shared Narrowing Operator CType(value As  *) As UIntPtr
    parameters:
    - id: value
      type: System.Void*
    return:
      type: System.UIntPtr
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  nameWithType.vb: UIntPtr.Narrowing(Void* to UIntPtr)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.UIntPtr.Narrowing(System.Void* to System.UIntPtr)
  name.vb: Narrowing(Void* to UIntPtr)
- uid: System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)
  commentId: M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)
  id: op_Inequality(System.UIntPtr,System.UIntPtr)
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Inequality(UIntPtr, UIntPtr)
  nameWithType: UIntPtr.Inequality(UIntPtr, UIntPtr)
  fullName: System.UIntPtr.Inequality(System.UIntPtr, System.UIntPtr)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2116
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool operator !=(UIntPtr value1, UIntPtr value2)
    content.vb: Public Shared Operator <>(value1 As UIntPtr, value2 As UIntPtr) As Boolean
    parameters:
    - id: value1
      type: System.UIntPtr
    - id: value2
      type: System.UIntPtr
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)
  commentId: M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)
  id: op_Subtraction(System.UIntPtr,System.Int32)
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Subtraction(UIntPtr, Int32)
  nameWithType: UIntPtr.Subtraction(UIntPtr, Int32)
  fullName: System.UIntPtr.Subtraction(System.UIntPtr, System.Int32)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2117
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static UIntPtr operator -(UIntPtr pointer, int offset)
    content.vb: Public Shared Operator -(pointer As UIntPtr, offset As Integer) As UIntPtr
    parameters:
    - id: pointer
      type: System.UIntPtr
    - id: offset
      type: System.Int32
    return:
      type: System.UIntPtr
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.UIntPtr.Subtract(System.UIntPtr,System.Int32)
  commentId: M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)
  id: Subtract(System.UIntPtr,System.Int32)
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: Subtract(UIntPtr, Int32)
  nameWithType: UIntPtr.Subtract(UIntPtr, Int32)
  fullName: System.UIntPtr.Subtract(System.UIntPtr, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2118
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static UIntPtr Subtract(UIntPtr pointer, int offset)
    content.vb: Public Shared Function Subtract(pointer As UIntPtr, offset As Integer) As UIntPtr
    parameters:
    - id: pointer
      type: System.UIntPtr
    - id: offset
      type: System.Int32
    return:
      type: System.UIntPtr
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.UIntPtr.ToPointer
  commentId: M:System.UIntPtr.ToPointer
  id: ToPointer
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: ToPointer()
  nameWithType: UIntPtr.ToPointer()
  fullName: System.UIntPtr.ToPointer()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToPointer
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2119
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [CLSCompliant(false)]

      public void *ToPointer()
    content.vb: "<CLSCompliant(False)>\nPublic Function ToPointer As "
    return:
      type: System.Void*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.UIntPtr.ToString
  commentId: M:System.UIntPtr.ToString
  id: ToString
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: UIntPtr.ToString()
  fullName: System.UIntPtr.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2121
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.UIntPtr.ToUInt32
  commentId: M:System.UIntPtr.ToUInt32
  id: ToUInt32
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: ToUInt32()
  nameWithType: UIntPtr.ToUInt32()
  fullName: System.UIntPtr.ToUInt32()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToUInt32
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2122
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public uint ToUInt32()
    content.vb: Public Function ToUInt32 As UInteger
    return:
      type: System.UInt32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.UIntPtr.ToUInt64
  commentId: M:System.UIntPtr.ToUInt64
  id: ToUInt64
  parent: System.UIntPtr
  langs:
  - csharp
  - vb
  name: ToUInt64()
  nameWithType: UIntPtr.ToUInt64()
  fullName: System.UIntPtr.ToUInt64()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToUInt64
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2123
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public ulong ToUInt64()
    content.vb: Public Function ToUInt64 As ULong
    return:
      type: System.UInt64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.UIntPtr
  commentId: T:System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Void*
  name: Void*
  nameWithType: Void*
  fullName: System.Void*
  spec.csharp:
  - uid: System.Void
    name: Void
    nameWithType: Void
    fullName: System.Void
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Void
    name: Void
    nameWithType: Void
    fullName: System.Void
  - name: '*'
    nameWithType: '*'
    fullName: '*'
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
