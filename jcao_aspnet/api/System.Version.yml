items:
- uid: System.Version
  id: Version
  parent: System
  children:
  - System.Version.#ctor(System.Int32,System.Int32)
  - System.Version.#ctor(System.Int32,System.Int32,System.Int32)
  - System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Version.#ctor(System.String)
  - System.Version.Build
  - System.Version.CompareTo(System.Version)
  - System.Version.Equals(System.Object)
  - System.Version.Equals(System.Version)
  - System.Version.GetHashCode
  - System.Version.Major
  - System.Version.MajorRevision
  - System.Version.Minor
  - System.Version.MinorRevision
  - System.Version.op_Equality(System.Version,System.Version)
  - System.Version.op_GreaterThan(System.Version,System.Version)
  - System.Version.op_GreaterThanOrEqual(System.Version,System.Version)
  - System.Version.op_Inequality(System.Version,System.Version)
  - System.Version.op_LessThan(System.Version,System.Version)
  - System.Version.op_LessThanOrEqual(System.Version,System.Version)
  - System.Version.Parse(System.String)
  - System.Version.Revision
  - System.Version.System#IComparable#CompareTo(System.Object)
  - System.Version.ToString
  - System.Version.ToString(System.Int32)
  - System.Version.TryParse(System.String,System.Version@)
  name: Version
  fullName: System.Version
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Version.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Version.cs
    startLine: 25
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents the version number of an assembly, operating system, or the common language runtime. This class cannot be inherited.
  syntax:
    content: 'public sealed class Version : IComparable, IComparable<Version>, IEquatable<Version>'
    content.vb: Public NotInheritable Class Version Implements IComparable, IComparable(Of Version), IEquatable(Of Version)
  inheritance:
  - System.Object
  implements:
  - System.IComparable
  - System.IComparable{System.Version}
  - System.IEquatable{System.Version}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Version.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Version
  name: Version(Int32, Int32)
  fullName: System.Version.Version(System.Int32, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 74
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Version" data-throw-if-not-resolved="false"></xref> class using the specified major and minor values.
  syntax:
    content: public Version(int major, int minor)
    content.vb: Public Sub New(major As Integer, minor As Integer)
    parameters:
    - id: major
      type: System.Int32
      description: The major version number.
    - id: minor
      type: System.Int32
      description: The minor version number.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*major* or *minor* is less than zero.'
- uid: System.Version.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: System.Version
  name: Version(Int32, Int32, Int32)
  fullName: System.Version.Version(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 57
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Version" data-throw-if-not-resolved="false"></xref> class using the specified major, minor, and build values.
  syntax:
    content: public Version(int major, int minor, int build)
    content.vb: Public Sub New(major As Integer, minor As Integer, build As Integer)
    parameters:
    - id: major
      type: System.Int32
      description: The major version number.
    - id: minor
      type: System.Int32
      description: The minor version number.
    - id: build
      type: System.Int32
      description: The build number.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*major*, *minor*, or *build* is less than zero.'
- uid: System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Version
  name: Version(Int32, Int32, Int32, Int32)
  fullName: System.Version.Version(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 37
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Version" data-throw-if-not-resolved="false"></xref> class with the specified major, minor, build, and revision numbers.
  syntax:
    content: public Version(int major, int minor, int build, int revision)
    content.vb: Public Sub New(major As Integer, minor As Integer, build As Integer, revision As Integer)
    parameters:
    - id: major
      type: System.Int32
      description: The major version number.
    - id: minor
      type: System.Int32
      description: The minor version number.
    - id: build
      type: System.Int32
      description: The build number.
    - id: revision
      type: System.Int32
      description: The revision number.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*major*, *minor*, *build*, or *revision* is less than zero.'
- uid: System.Version.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Version
  name: Version(String)
  fullName: System.Version.Version(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 86
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Version" data-throw-if-not-resolved="false"></xref> class using the specified string.
  syntax:
    content: public Version(string version)
    content.vb: Public Sub New(version As String)
    parameters:
    - id: version
      type: System.String
      description: A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').
  exceptions:
  - type: System.ArgumentException
    description: '*version* has fewer than two components or more than four components.'
  - type: System.ArgumentNullException
    description: '*version* is null.'
  - type: System.ArgumentOutOfRangeException
    description: A major, minor, build, or revision component is less than zero.
  - type: System.FormatException
    description: At least one component of *version* does not parse to an integer.
  - type: System.OverflowException
    description: At least one component of *version* represents a number greater than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.
- uid: System.Version.Build
  id: Build
  parent: System.Version
  name: Build
  fullName: System.Version.Build
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 113
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the value of the build component of the version number for the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public int Build { get; }
    content.vb: Public ReadOnly Property Build As Integer
    parameters: []
    return:
      type: System.Int32
      description: The build number, or -1 if the build number is undefined.
- uid: System.Version.Major
  id: Major
  parent: System.Version
  name: Major
  fullName: System.Version.Major
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 105
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the value of the major component of the version number for the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public int Major { get; }
    content.vb: Public ReadOnly Property Major As Integer
    parameters: []
    return:
      type: System.Int32
      description: The major version number.
- uid: System.Version.MajorRevision
  id: MajorRevision
  parent: System.Version
  name: MajorRevision
  fullName: System.Version.MajorRevision
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 121
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the high 16 bits of the revision number.
  syntax:
    content: public short MajorRevision { get; }
    content.vb: Public ReadOnly Property MajorRevision As Short
    parameters: []
    return:
      type: System.Int16
      description: A 16-bit signed integer.
- uid: System.Version.Minor
  id: Minor
  parent: System.Version
  name: Minor
  fullName: System.Version.Minor
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 109
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the value of the minor component of the version number for the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public int Minor { get; }
    content.vb: Public ReadOnly Property Minor As Integer
    parameters: []
    return:
      type: System.Int32
      description: The minor version number.
- uid: System.Version.MinorRevision
  id: MinorRevision
  parent: System.Version
  name: MinorRevision
  fullName: System.Version.MinorRevision
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 125
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the low 16 bits of the revision number.
  syntax:
    content: public short MinorRevision { get; }
    content.vb: Public ReadOnly Property MinorRevision As Short
    parameters: []
    return:
      type: System.Int16
      description: A 16-bit signed integer.
- uid: System.Version.Revision
  id: Revision
  parent: System.Version
  name: Revision
  fullName: System.Version.Revision
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 117
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the value of the revision component of the version number for the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public int Revision { get; }
    content.vb: Public ReadOnly Property Revision As Integer
    parameters: []
    return:
      type: System.Int32
      description: The revision number, or -1 if the revision number is undefined.
- uid: System.Version.CompareTo(System.Version)
  id: CompareTo(System.Version)
  parent: System.Version
  name: CompareTo(Version)
  fullName: System.Version.CompareTo(System.Version)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 194
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object to a specified <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object and returns an indication of their relative values.
  syntax:
    content: public int CompareTo(Version value)
    content.vb: Public Function CompareTo(value As Version) As Integer
    parameters:
    - id: value
      type: System.Version
      description: A <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object to compare to the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object, or null.
    return:
      type: System.Int32
      description: A signed integer that indicates the relative values of the two objects, as shown in the following table.Return value Meaning Less than zero The current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object is a version before *value*. Zero The current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object is the same version as *value*. Greater than zero The current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object is a version subsequent to *value*. -or-*value* is null.
- uid: System.Version.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Version
  name: Equals(Object)
  fullName: System.Version.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 226
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object is equal to a specified object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object, or null.
    return:
      type: System.Boolean
      description: true if the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object and *obj* are both <xref href="System.Version" data-throw-if-not-resolved="false"></xref> objects, and every component of the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object matches the corresponding component of *obj*; otherwise, false.
  overridden: System.Object.Equals(System.Object)
- uid: System.Version.Equals(System.Version)
  id: Equals(System.Version)
  parent: System.Version
  name: Equals(Version)
  fullName: System.Version.Equals(System.Version)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 241
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object and a specified <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object represent the same value.
  syntax:
    content: public bool Equals(Version obj)
    content.vb: Public Function Equals(obj As Version) As Boolean
    parameters:
    - id: obj
      type: System.Version
      description: A <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object to compare to the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object, or null.
    return:
      type: System.Boolean
      description: true if every component of the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object matches the corresponding component of the *obj* parameter; otherwise, false.
- uid: System.Version.GetHashCode
  id: GetHashCode
  parent: System.Version
  name: GetHashCode()
  fullName: System.Version.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 256
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a hash code for the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overridden: System.Object.GetHashCode
- uid: System.Version.op_Equality(System.Version,System.Version)
  id: op_Equality(System.Version,System.Version)
  parent: System.Version
  name: Equality(Version, Version)
  fullName: System.Version.Equality(System.Version, System.Version)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 431
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether two specified <xref href="System.Version" data-throw-if-not-resolved="false"></xref> objects are equal.
  syntax:
    content: public static bool operator ==(Version v1, Version v2)
    content.vb: Public Shared Operator =(v1 As Version, v2 As Version) As Boolean
    parameters:
    - id: v1
      type: System.Version
      description: The first <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
    - id: v2
      type: System.Version
      description: The second <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Boolean
      description: true if *v1* equals *v2*; otherwise, false.
- uid: System.Version.op_GreaterThan(System.Version,System.Version)
  id: op_GreaterThan(System.Version,System.Version)
  parent: System.Version
  name: GreaterThan(Version, Version)
  fullName: System.Version.GreaterThan(System.Version, System.Version)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 457
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether the first specified <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object is greater than the second specified <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public static bool operator>(Version v1, Version v2)
    content.vb: Public Shared Operator>(v1 As Version, v2 As Version) As Boolean
    parameters:
    - id: v1
      type: System.Version
      description: The first <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
    - id: v2
      type: System.Version
      description: The second <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Boolean
      description: true if *v1* is greater than *v2*; otherwise, false.
- uid: System.Version.op_GreaterThanOrEqual(System.Version,System.Version)
  id: op_GreaterThanOrEqual(System.Version,System.Version)
  parent: System.Version
  name: GreaterThanOrEqual(Version, Version)
  fullName: System.Version.GreaterThanOrEqual(System.Version, System.Version)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 461
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether the first specified <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object is greater than or equal to the second specified <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public static bool operator >=(Version v1, Version v2)
    content.vb: Public Shared Operator >=(v1 As Version, v2 As Version) As Boolean
    parameters:
    - id: v1
      type: System.Version
      description: The first <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
    - id: v2
      type: System.Version
      description: The second <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Boolean
      description: true if *v1* is greater than or equal to *v2*; otherwise, false.
- uid: System.Version.op_Inequality(System.Version,System.Version)
  id: op_Inequality(System.Version,System.Version)
  parent: System.Version
  name: Inequality(Version, Version)
  fullName: System.Version.Inequality(System.Version, System.Version)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 439
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether two specified <xref href="System.Version" data-throw-if-not-resolved="false"></xref> objects are not equal.
  syntax:
    content: public static bool operator !=(Version v1, Version v2)
    content.vb: Public Shared Operator <>(v1 As Version, v2 As Version) As Boolean
    parameters:
    - id: v1
      type: System.Version
      description: The first <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
    - id: v2
      type: System.Version
      description: The second <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Boolean
      description: true if *v1* does not equal *v2*; otherwise, false.
- uid: System.Version.op_LessThan(System.Version,System.Version)
  id: op_LessThan(System.Version,System.Version)
  parent: System.Version
  name: LessThan(Version, Version)
  fullName: System.Version.LessThan(System.Version, System.Version)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 443
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether the first specified <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object is less than the second specified <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public static bool operator <(Version v1, Version v2)
    content.vb: Public Shared Operator <(v1 As Version, v2 As Version) As Boolean
    parameters:
    - id: v1
      type: System.Version
      description: The first <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
    - id: v2
      type: System.Version
      description: The second <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Boolean
      description: true if *v1* is less than *v2*; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*v1* is null.'
- uid: System.Version.op_LessThanOrEqual(System.Version,System.Version)
  id: op_LessThanOrEqual(System.Version,System.Version)
  parent: System.Version
  name: LessThanOrEqual(Version, Version)
  fullName: System.Version.LessThanOrEqual(System.Version, System.Version)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 450
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether the first specified <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object is less than or equal to the second <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public static bool operator <=(Version v1, Version v2)
    content.vb: Public Shared Operator <=(v1 As Version, v2 As Version) As Boolean
    parameters:
    - id: v1
      type: System.Version
      description: The first <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
    - id: v2
      type: System.Version
      description: The second <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Boolean
      description: true if *v1* is less than or equal to *v2*; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*v1* is null.'
- uid: System.Version.Parse(System.String)
  id: Parse(System.String)
  parent: System.Version
  name: Parse(String)
  fullName: System.Version.Parse(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 347
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of a version number to an equivalent <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public static Version Parse(string input)
    content.vb: Public Shared Function Parse(input As String) As Version
    parameters:
    - id: input
      type: System.String
      description: A string that contains a version number to convert.
    return:
      type: System.Version
      description: An object that is equivalent to the version number specified in the *input* parameter.
  exceptions:
  - type: System.ArgumentNullException
    description: '*input* is null.'
  - type: System.ArgumentException
    description: '*input* has fewer than two or more than four version components.'
  - type: System.ArgumentOutOfRangeException
    description: At least one component in *input* is less than zero.
  - type: System.FormatException
    description: At least one component in *input* is not an integer.
  - type: System.OverflowException
    description: At least one component in *input* represents a number that is greater than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.
- uid: System.Version.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  parent: System.Version
  name: IComparable.CompareTo(Object)
  name.vb: System.IComparable.CompareTo(Object)
  fullName: System.Version.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2250
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object version)
    content.vb: Function System.IComparable.CompareTo(version As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: version
      type: System.Object
    return:
      type: System.Int32
- uid: System.Version.ToString
  id: ToString
  parent: System.Version
  name: ToString()
  fullName: System.Version.ToString()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 271
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object to its equivalent <xref href="System.String" data-throw-if-not-resolved="false"></xref> representation.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: 'The <xref href="System.String" data-throw-if-not-resolved="false"></xref> representation of the values of the major, minor, build, and revision components of the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object, as depicted in the following format. Each component is separated by a period character (''.''). Square brackets (''['' and '']'') indicate a component that will not appear in the return value if the component is not defined: major.minor[.build[.revision]] For example, if you create a <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object using the constructor Version(1,1), the returned string is "1.1". If you create a <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object using the constructor Version(1,3,4,2), the returned string is "1.3.4.2".'
  overridden: System.Object.ToString
- uid: System.Version.ToString(System.Int32)
  id: ToString(System.Int32)
  parent: System.Version
  name: ToString(Int32)
  fullName: System.Version.ToString(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 277
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object to its equivalent <xref href="System.String" data-throw-if-not-resolved="false"></xref> representation. A specified count indicates the number of components to return.
  syntax:
    content: public string ToString(int fieldCount)
    content.vb: Public Function ToString(fieldCount As Integer) As String
    parameters:
    - id: fieldCount
      type: System.Int32
      description: The number of components to return. The *fieldCount* ranges from 0 to 4.
    return:
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> representation of the values of the major, minor, build, and revision components of the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object, each separated by a period character ('.'). The *fieldCount* parameter determines how many components are returned.fieldCount Return Value 0 An empty string (""). 1 major 2 major.minor 3 major.minor.build 4 major.minor.build.revision For example, if you create <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object using the constructor Version(1,3,5), ToString(2) returns "1.3" and ToString(4) throws an exception.
  exceptions:
  - type: System.ArgumentException
    description: '*fieldCount* is less than 0, or more than 4.-or- *fieldCount* is more than the number of components defined in the current <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object.'
- uid: System.Version.TryParse(System.String,System.Version@)
  id: TryParse(System.String,System.Version@)
  parent: System.Version
  name: TryParse(String, out Version)
  name.vb: TryParse(String, ByRef Version)
  fullName: System.Version.TryParse(System.String, out System.Version)
  fullName.vb: System.Version.TryParse(System.String, ByRef System.Version)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Version.cs
    startLine: 361
  assemblies:
  - System.Runtime
  namespace: System
  summary: Tries to convert the string representation of a version number to an equivalent <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object, and returns a value that indicates whether the conversion succeeded.
  syntax:
    content: public static bool TryParse(string input, out Version result)
    content.vb: Public Shared Function TryParse(input As String, ByRef result As Version) As Boolean
    parameters:
    - id: input
      type: System.String
      description: A string that contains a version number to convert.
    - id: result
      type: System.Version
      description: When this method returns, contains the <xref href="System.Version" data-throw-if-not-resolved="false"></xref> equivalent of the number that is contained in *input*, if the conversion succeeded, or a <xref href="System.Version" data-throw-if-not-resolved="false"></xref> object whose major and minor version numbers are 0 if the conversion failed. If *input* is null or <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>, *result* is null when the method returns.
    return:
      type: System.Boolean
      description: true if the *input* parameter was converted successfully; otherwise, false.
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System.IComparable{System.Version}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Version>
  name.vb: IComparable(Of Version)
  fullName: System.IComparable<System.Version>
  fullName.vb: System.IComparable(Of System.Version)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - uid: System.Version
    name: Version
    fullName: System.Version
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Version
    name: Version
    fullName: System.Version
  - name: )
    fullName: )
- uid: System.IEquatable{System.Version}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Version>
  name.vb: IEquatable(Of Version)
  fullName: System.IEquatable<System.Version>
  fullName.vb: System.IEquatable(Of System.Version)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - uid: System.Version
    name: Version
    fullName: System.Version
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Version
    name: Version
    fullName: System.Version
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.IComparable`1
  parent: System
  isExternal: false
  name: IComparable<>
  name.vb: IComparable(Of )
  fullName: System.IComparable<>
  fullName.vb: System.IComparable(Of )
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<>
  name.vb: IEquatable(Of )
  fullName: System.IEquatable<>
  fullName.vb: System.IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Version
  parent: System
  isExternal: false
  name: Version
  fullName: System.Version
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
- uid: System.OverflowException
  isExternal: false
  name: OverflowException
  fullName: System.OverflowException
