items:
- uid: System.Xml.IXmlLineInfo
  id: IXmlLineInfo
  parent: System.Xml
  children:
  - System.Xml.IXmlLineInfo.HasLineInfo
  - System.Xml.IXmlLineInfo.LineNumber
  - System.Xml.IXmlLineInfo.LinePosition
  langs:
  - csharp
  - vb
  name: IXmlLineInfo
  fullName: System.Xml.IXmlLineInfo
  type: Interface
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 18
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Provides an interface to enable a class to return line and position information.
  syntax:
    content: public interface IXmlLineInfo
    content.vb: Public Interface IXmlLineInfo
- uid: System.Xml.IXmlLineInfo.LineNumber
  id: LineNumber
  parent: System.Xml.IXmlLineInfo
  langs:
  - csharp
  - vb
  name: LineNumber
  fullName: System.Xml.IXmlLineInfo.LineNumber
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 20
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the current line number.
  syntax:
    content: int LineNumber { get; }
    content.vb: ReadOnly Property LineNumber As Integer
    parameters: []
    return:
      type: System.Int32
      description: The current line number or 0 if no line information is available (for example, <xref href="System.Xml.IXmlLineInfo.HasLineInfo" data-throw-if-not-resolved="false"></xref> returns false).
- uid: System.Xml.IXmlLineInfo.LinePosition
  id: LinePosition
  parent: System.Xml.IXmlLineInfo
  langs:
  - csharp
  - vb
  name: LinePosition
  fullName: System.Xml.IXmlLineInfo.LinePosition
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 21
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the current line position.
  syntax:
    content: int LinePosition { get; }
    content.vb: ReadOnly Property LinePosition As Integer
    parameters: []
    return:
      type: System.Int32
      description: The current line position or 0 if no line information is available (for example, <xref href="System.Xml.IXmlLineInfo.HasLineInfo" data-throw-if-not-resolved="false"></xref> returns false).
- uid: System.Xml.IXmlLineInfo.HasLineInfo
  id: HasLineInfo
  parent: System.Xml.IXmlLineInfo
  langs:
  - csharp
  - vb
  name: HasLineInfo()
  fullName: System.Xml.IXmlLineInfo.HasLineInfo()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 22
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether the class can return line information.
  syntax:
    content: bool HasLineInfo()
    content.vb: Function HasLineInfo As Boolean
    return:
      type: System.Boolean
      description: true if <xref href="System.Xml.IXmlLineInfo.LineNumber" data-throw-if-not-resolved="false"></xref> and <xref href="System.Xml.IXmlLineInfo.LinePosition" data-throw-if-not-resolved="false"></xref> can be provided; otherwise, false.
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
