items:
- uid: System.Xml.XmlReader
  id: XmlReader
  parent: System.Xml
  children:
  - System.Xml.XmlReader.#ctor
  - System.Xml.XmlReader.AttributeCount
  - System.Xml.XmlReader.BaseURI
  - System.Xml.XmlReader.CanReadBinaryContent
  - System.Xml.XmlReader.CanReadValueChunk
  - System.Xml.XmlReader.CanResolveEntity
  - System.Xml.XmlReader.Create(System.IO.Stream)
  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  - System.Xml.XmlReader.Create(System.IO.TextReader)
  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  - System.Xml.XmlReader.Create(System.String)
  - System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Depth
  - System.Xml.XmlReader.Dispose
  - System.Xml.XmlReader.Dispose(System.Boolean)
  - System.Xml.XmlReader.EOF
  - System.Xml.XmlReader.GetAttribute(System.Int32)
  - System.Xml.XmlReader.GetAttribute(System.String)
  - System.Xml.XmlReader.GetAttribute(System.String,System.String)
  - System.Xml.XmlReader.GetValueAsync
  - System.Xml.XmlReader.HasAttributes
  - System.Xml.XmlReader.HasValue
  - System.Xml.XmlReader.IsDefault
  - System.Xml.XmlReader.IsEmptyElement
  - System.Xml.XmlReader.IsName(System.String)
  - System.Xml.XmlReader.IsNameToken(System.String)
  - System.Xml.XmlReader.IsStartElement
  - System.Xml.XmlReader.IsStartElement(System.String)
  - System.Xml.XmlReader.IsStartElement(System.String,System.String)
  - System.Xml.XmlReader.Item(System.Int32)
  - System.Xml.XmlReader.Item(System.String)
  - System.Xml.XmlReader.Item(System.String,System.String)
  - System.Xml.XmlReader.LocalName
  - System.Xml.XmlReader.LookupNamespace(System.String)
  - System.Xml.XmlReader.MoveToAttribute(System.Int32)
  - System.Xml.XmlReader.MoveToAttribute(System.String)
  - System.Xml.XmlReader.MoveToAttribute(System.String,System.String)
  - System.Xml.XmlReader.MoveToContent
  - System.Xml.XmlReader.MoveToContentAsync
  - System.Xml.XmlReader.MoveToElement
  - System.Xml.XmlReader.MoveToFirstAttribute
  - System.Xml.XmlReader.MoveToNextAttribute
  - System.Xml.XmlReader.Name
  - System.Xml.XmlReader.NamespaceURI
  - System.Xml.XmlReader.NameTable
  - System.Xml.XmlReader.NodeType
  - System.Xml.XmlReader.Prefix
  - System.Xml.XmlReader.Read
  - System.Xml.XmlReader.ReadAsync
  - System.Xml.XmlReader.ReadAttributeValue
  - System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadContentAsBoolean
  - System.Xml.XmlReader.ReadContentAsDateTimeOffset
  - System.Xml.XmlReader.ReadContentAsDecimal
  - System.Xml.XmlReader.ReadContentAsDouble
  - System.Xml.XmlReader.ReadContentAsFloat
  - System.Xml.XmlReader.ReadContentAsInt
  - System.Xml.XmlReader.ReadContentAsLong
  - System.Xml.XmlReader.ReadContentAsObject
  - System.Xml.XmlReader.ReadContentAsObjectAsync
  - System.Xml.XmlReader.ReadContentAsString
  - System.Xml.XmlReader.ReadContentAsStringAsync
  - System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadElementContentAsBoolean
  - System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsDecimal
  - System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsDouble
  - System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsFloat
  - System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsInt
  - System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsLong
  - System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsObject
  - System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsObjectAsync
  - System.Xml.XmlReader.ReadElementContentAsString
  - System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsStringAsync
  - System.Xml.XmlReader.ReadEndElement
  - System.Xml.XmlReader.ReadInnerXml
  - System.Xml.XmlReader.ReadInnerXmlAsync
  - System.Xml.XmlReader.ReadOuterXml
  - System.Xml.XmlReader.ReadOuterXmlAsync
  - System.Xml.XmlReader.ReadStartElement
  - System.Xml.XmlReader.ReadStartElement(System.String)
  - System.Xml.XmlReader.ReadStartElement(System.String,System.String)
  - System.Xml.XmlReader.ReadState
  - System.Xml.XmlReader.ReadSubtree
  - System.Xml.XmlReader.ReadToDescendant(System.String)
  - System.Xml.XmlReader.ReadToDescendant(System.String,System.String)
  - System.Xml.XmlReader.ReadToFollowing(System.String)
  - System.Xml.XmlReader.ReadToFollowing(System.String,System.String)
  - System.Xml.XmlReader.ReadToNextSibling(System.String)
  - System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)
  - System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ResolveEntity
  - System.Xml.XmlReader.Settings
  - System.Xml.XmlReader.Skip
  - System.Xml.XmlReader.SkipAsync
  - System.Xml.XmlReader.Value
  - System.Xml.XmlReader.ValueType
  - System.Xml.XmlReader.XmlLang
  - System.Xml.XmlReader.XmlSpace
  langs:
  - csharp
  - vb
  name: XmlReader
  fullName: System.Xml.XmlReader
  type: Class
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 226
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Represents a reader that provides fast, noncached, forward-only access to XML data.To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public abstract class XmlReader : IDisposable'
    content.vb: Public MustInherit Class XmlReader Inherits IDisposable
  inheritance:
  - System.Object
- uid: System.Xml.XmlReader.#ctor
  id: '#ctor'
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: XmlReader()
  fullName: System.Xml.XmlReader.XmlReader()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 228
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the XmlReader class.
  syntax:
    content: protected XmlReader()
    content.vb: Protected Sub New
- uid: System.Xml.XmlReader.AttributeCount
  id: AttributeCount
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: AttributeCount
  fullName: System.Xml.XmlReader.AttributeCount
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 229
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the number of attributes on the current node.
  syntax:
    content: public abstract int AttributeCount { get; }
    content.vb: Public MustOverride ReadOnly Property AttributeCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of attributes on the current node.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.BaseURI
  id: BaseURI
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: BaseURI
  fullName: System.Xml.XmlReader.BaseURI
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 230
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the base URI of the current node.
  syntax:
    content: public abstract string BaseURI { get; }
    content.vb: Public MustOverride ReadOnly Property BaseURI As String
    parameters: []
    return:
      type: System.String
      description: The base URI of the current node.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.CanReadBinaryContent
  id: CanReadBinaryContent
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: CanReadBinaryContent
  fullName: System.Xml.XmlReader.CanReadBinaryContent
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 231
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> implements the binary content read methods.
  syntax:
    content: public virtual bool CanReadBinaryContent { get; }
    content.vb: Public Overridable ReadOnly Property CanReadBinaryContent As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the binary content read methods are implemented; otherwise false.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.CanReadValueChunk
  id: CanReadValueChunk
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: CanReadValueChunk
  fullName: System.Xml.XmlReader.CanReadValueChunk
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 232
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> implements the <xref href="System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" data-throw-if-not-resolved="false"></xref> method.
  syntax:
    content: public virtual bool CanReadValueChunk { get; }
    content.vb: Public Overridable ReadOnly Property CanReadValueChunk As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> implements the <xref href="System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" data-throw-if-not-resolved="false"></xref> method; otherwise false.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.CanResolveEntity
  id: CanResolveEntity
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: CanResolveEntity
  fullName: System.Xml.XmlReader.CanResolveEntity
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 233
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether this reader can parse and resolve entities.
  syntax:
    content: public virtual bool CanResolveEntity { get; }
    content.vb: Public Overridable ReadOnly Property CanResolveEntity As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the reader can parse and resolve entities; otherwise, false.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.Depth
  id: Depth
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Depth
  fullName: System.Xml.XmlReader.Depth
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 234
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the depth of the current node in the XML document.
  syntax:
    content: public abstract int Depth { get; }
    content.vb: Public MustOverride ReadOnly Property Depth As Integer
    parameters: []
    return:
      type: System.Int32
      description: The depth of the current node in the XML document.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.EOF
  id: EOF
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: EOF
  fullName: System.Xml.XmlReader.EOF
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 235
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.
  syntax:
    content: public abstract bool EOF { get; }
    content.vb: Public MustOverride ReadOnly Property EOF As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the reader is positioned at the end of the stream; otherwise, false.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.HasAttributes
  id: HasAttributes
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: HasAttributes
  fullName: System.Xml.XmlReader.HasAttributes
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 236
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether the current node has any attributes.
  syntax:
    content: public virtual bool HasAttributes { get; }
    content.vb: Public Overridable ReadOnly Property HasAttributes As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current node has attributes; otherwise, false.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.HasValue
  id: HasValue
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: HasValue
  fullName: System.Xml.XmlReader.HasValue
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 237
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets a value indicating whether the current node can have a <xref href="System.Xml.XmlReader.Value" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual bool HasValue { get; }
    content.vb: Public Overridable ReadOnly Property HasValue As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the node on which the reader is currently positioned can have a Value; otherwise, false. If false, the node has a value of String.Empty.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.IsDefault
  id: IsDefault
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: IsDefault
  fullName: System.Xml.XmlReader.IsDefault
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 238
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.
  syntax:
    content: public virtual bool IsDefault { get; }
    content.vb: Public Overridable ReadOnly Property IsDefault As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; false if the attribute value was explicitly set.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.IsEmptyElement
  id: IsEmptyElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: IsEmptyElement
  fullName: System.Xml.XmlReader.IsEmptyElement
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 239
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, &lt;MyElement/&gt;).
  syntax:
    content: public abstract bool IsEmptyElement { get; }
    content.vb: Public MustOverride ReadOnly Property IsEmptyElement As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current node is an element (<xref href="System.Xml.XmlReader.NodeType" data-throw-if-not-resolved="false"></xref> equals XmlNodeType.Element) that ends with /&gt;; otherwise, false.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Item[Int32]
  name.vb: Item(Int32)
  fullName: System.Xml.XmlReader.Item[System.Int32]
  fullName.vb: System.Xml.XmlReader.Item(System.Int32)
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 240
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified index.
  syntax:
    content: public virtual string this[int i] { get; }
    content.vb: Public Overridable ReadOnly Property Item(i As Integer) As String
    parameters:
    - id: i
      type: System.Int32
      description: The index of the attribute.
    return:
      type: System.String
      description: The value of the specified attribute.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.Item(System.String)
  id: Item(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Item[String]
  name.vb: Item(String)
  fullName: System.Xml.XmlReader.Item[System.String]
  fullName.vb: System.Xml.XmlReader.Item(System.String)
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 241
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified <xref href="System.Xml.XmlReader.Name" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual string this[string name] { get; }
    content.vb: Public Overridable ReadOnly Property Item(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the attribute.
    return:
      type: System.String
      description: The value of the specified attribute. If the attribute is not found, null is returned.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Item[String, String]
  name.vb: Item(String, String)
  fullName: System.Xml.XmlReader.Item[System.String, System.String]
  fullName.vb: System.Xml.XmlReader.Item(System.String, System.String)
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 242
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified <xref href="System.Xml.XmlReader.LocalName" data-throw-if-not-resolved="false"></xref> and <xref href="System.Xml.XmlReader.NamespaceURI" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual string this[string name, string namespaceURI] { get; }
    content.vb: Public Overridable ReadOnly Property Item(name As String, namespaceURI As String) As String
    parameters:
    - id: name
      type: System.String
      description: The local name of the attribute.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the attribute.
    return:
      type: System.String
      description: The value of the specified attribute. If the attribute is not found, null is returned.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.LocalName
  id: LocalName
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: LocalName
  fullName: System.Xml.XmlReader.LocalName
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 243
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the local name of the current node.
  syntax:
    content: public abstract string LocalName { get; }
    content.vb: Public MustOverride ReadOnly Property LocalName As String
    parameters: []
    return:
      type: System.String
      description: The name of the current node with the prefix removed. For example, LocalName is book for the element &lt;bk:book&gt;.For node types that do not have a name (like Text, Comment, and so on), this property returns String.Empty.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.Name
  id: Name
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Xml.XmlReader.Name
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 244
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the qualified name of the current node.
  syntax:
    content: public virtual string Name { get; }
    content.vb: Public Overridable ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The qualified name of the current node. For example, Name is bk:book for the element &lt;bk:book&gt;.The name returned is dependent on the <xref href="System.Xml.XmlReader.NodeType" data-throw-if-not-resolved="false"></xref> of the node. The following node types return the listed values. All other node types return an empty string.Node type Name AttributeThe name of the attribute. DocumentTypeThe document type name. ElementThe tag name. EntityReferenceThe name of the entity referenced. ProcessingInstructionThe target of the processing instruction. XmlDeclarationThe literal string xml.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: NamespaceURI
  fullName: System.Xml.XmlReader.NamespaceURI
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 245
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.
  syntax:
    content: public abstract string NamespaceURI { get; }
    content.vb: Public MustOverride ReadOnly Property NamespaceURI As String
    parameters: []
    return:
      type: System.String
      description: The namespace URI of the current node; otherwise an empty string.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.NameTable
  id: NameTable
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: NameTable
  fullName: System.Xml.XmlReader.NameTable
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 246
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the <xref href="System.Xml.XmlNameTable" data-throw-if-not-resolved="false"></xref> associated with this implementation.
  syntax:
    content: public abstract XmlNameTable NameTable { get; }
    content.vb: Public MustOverride ReadOnly Property NameTable As XmlNameTable
    parameters: []
    return:
      type: System.Xml.XmlNameTable
      description: The XmlNameTable enabling you to get the atomized version of a string within the node.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.NodeType
  id: NodeType
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: NodeType
  fullName: System.Xml.XmlReader.NodeType
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 247
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the type of the current node.
  syntax:
    content: public abstract XmlNodeType NodeType { get; }
    content.vb: Public MustOverride ReadOnly Property NodeType As XmlNodeType
    parameters: []
    return:
      type: System.Xml.XmlNodeType
      description: One of the enumeration values that specify the type of the current node.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.Prefix
  id: Prefix
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Prefix
  fullName: System.Xml.XmlReader.Prefix
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 248
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the namespace prefix associated with the current node.
  syntax:
    content: public abstract string Prefix { get; }
    content.vb: Public MustOverride ReadOnly Property Prefix As String
    parameters: []
    return:
      type: System.String
      description: The namespace prefix associated with the current node.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadState
  id: ReadState
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadState
  fullName: System.Xml.XmlReader.ReadState
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 249
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the state of the reader.
  syntax:
    content: public abstract ReadState ReadState { get; }
    content.vb: Public MustOverride ReadOnly Property ReadState As ReadState
    parameters: []
    return:
      type: System.Xml.ReadState
      description: One of the enumeration values that specifies the state of the reader.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.Settings
  id: Settings
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Settings
  fullName: System.Xml.XmlReader.Settings
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 250
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the <xref href="System.Xml.XmlReaderSettings" data-throw-if-not-resolved="false"></xref> object used to create this <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: public virtual XmlReaderSettings Settings { get; }
    content.vb: Public Overridable ReadOnly Property Settings As XmlReaderSettings
    parameters: []
    return:
      type: System.Xml.XmlReaderSettings
      description: The <xref href="System.Xml.XmlReaderSettings" data-throw-if-not-resolved="false"></xref> object used to create this reader instance. If this reader was not created using the <see cref="Overload:System.Xml.XmlReader.Create" /> method, this property returns null.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.Value
  id: Value
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Xml.XmlReader.Value
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 251
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the text value of the current node.
  syntax:
    content: public abstract string Value { get; }
    content.vb: Public MustOverride ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
      description: The value returned depends on the <xref href="System.Xml.XmlReader.NodeType" data-throw-if-not-resolved="false"></xref> of the node. The following table lists node types that have a value to return. All other node types return String.Empty.Node type Value AttributeThe value of the attribute. CDATAThe content of the CDATA section. CommentThe content of the comment. DocumentTypeThe internal subset. ProcessingInstructionThe entire content, excluding the target. SignificantWhitespaceThe white space between markup in a mixed content model. TextThe content of the text node. WhitespaceThe white space between markup. XmlDeclarationThe content of the declaration.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ValueType
  id: ValueType
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ValueType
  fullName: System.Xml.XmlReader.ValueType
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 252
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets The Common Language Runtime (CLR) type for the current node.
  syntax:
    content: public virtual Type ValueType { get; }
    content.vb: Public Overridable ReadOnly Property ValueType As Type
    parameters: []
    return:
      type: System.Type
      description: The CLR type that corresponds to the typed value of the node. The default is System.String.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.XmlLang
  id: XmlLang
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: XmlLang
  fullName: System.Xml.XmlReader.XmlLang
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 253
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the current xml:lang scope.
  syntax:
    content: public virtual string XmlLang { get; }
    content.vb: Public Overridable ReadOnly Property XmlLang As String
    parameters: []
    return:
      type: System.String
      description: The current xml:lang scope.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.XmlSpace
  id: XmlSpace
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: XmlSpace
  fullName: System.Xml.XmlReader.XmlSpace
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 254
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the current xml:space scope.
  syntax:
    content: public virtual XmlSpace XmlSpace { get; }
    content.vb: Public Overridable ReadOnly Property XmlSpace As XmlSpace
    parameters: []
    return:
      type: System.Xml.XmlSpace
      description: One of the <xref href="System.Xml.XmlSpace" data-throw-if-not-resolved="false"></xref> values. If no xml:space scope exists, this property defaults to XmlSpace.None.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.Create(System.IO.Stream)
  id: Create(System.IO.Stream)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Create(IO.Stream)
  fullName: System.Xml.XmlReader.Create(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 255
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance using the specified stream with default settings.
  syntax:
    content: public static XmlReader Create(IO.Stream input)
    content.vb: Public Shared Function Create(input As IO.Stream) As XmlReader
    parameters:
    - id: input
      type: System.IO.Stream
      description: The stream that contains the XML data.The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  exceptions:
  - type: System.ArgumentNullException
    description: The *input* value is null.
  - type: System.Security.SecurityException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> does not have sufficient permissions to access the location of the XML data.
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  id: Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Create(IO.Stream, XmlReaderSettings)
  fullName: System.Xml.XmlReader.Create(System.IO.Stream, System.Xml.XmlReaderSettings)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 256
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance with the specified stream and settings.
  syntax:
    content: public static XmlReader Create(IO.Stream input, XmlReaderSettings settings)
    content.vb: Public Shared Function Create(input As IO.Stream, settings As XmlReaderSettings) As XmlReader
    parameters:
    - id: input
      type: System.IO.Stream
      description: The stream that contains the XML data.The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance. This value can be null.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  exceptions:
  - type: System.ArgumentNullException
    description: The *input* value is null.
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  id: Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Create(IO.Stream, XmlReaderSettings, XmlParserContext)
  fullName: System.Xml.XmlReader.Create(System.IO.Stream, System.Xml.XmlReaderSettings, System.Xml.XmlParserContext)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 257
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance using the specified stream, settings, and context information for parsing.
  syntax:
    content: public static XmlReader Create(IO.Stream input, XmlReaderSettings settings, XmlParserContext inputContext)
    content.vb: Public Shared Function Create(input As IO.Stream, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader
    parameters:
    - id: input
      type: System.IO.Stream
      description: The stream that contains the XML data. The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance. This value can be null.
    - id: inputContext
      type: System.Xml.XmlParserContext
      description: The context information required to parse the XML fragment. The context information can include the <xref href="System.Xml.XmlNameTable" data-throw-if-not-resolved="false"></xref> to use, encoding, namespace scope, the current xml:lang and xml:space scope, base URI, and document type definition. This value can be null.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  exceptions:
  - type: System.ArgumentNullException
    description: The *input* value is null.
- uid: System.Xml.XmlReader.Create(System.IO.TextReader)
  id: Create(System.IO.TextReader)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Create(IO.TextReader)
  fullName: System.Xml.XmlReader.Create(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 258
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance by using the specified text reader.
  syntax:
    content: public static XmlReader Create(IO.TextReader input)
    content.vb: Public Shared Function Create(input As IO.TextReader) As XmlReader
    parameters:
    - id: input
      type: System.IO.TextReader
      description: The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  exceptions:
  - type: System.ArgumentNullException
    description: The *input* value is null.
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  id: Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Create(IO.TextReader, XmlReaderSettings)
  fullName: System.Xml.XmlReader.Create(System.IO.TextReader, System.Xml.XmlReaderSettings)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 259
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance by using the specified text reader and settings.
  syntax:
    content: public static XmlReader Create(IO.TextReader input, XmlReaderSettings settings)
    content.vb: Public Shared Function Create(input As IO.TextReader, settings As XmlReaderSettings) As XmlReader
    parameters:
    - id: input
      type: System.IO.TextReader
      description: The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref>. This value can be null.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  exceptions:
  - type: System.ArgumentNullException
    description: The *input* value is null.
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  id: Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Create(IO.TextReader, XmlReaderSettings, XmlParserContext)
  fullName: System.Xml.XmlReader.Create(System.IO.TextReader, System.Xml.XmlReaderSettings, System.Xml.XmlParserContext)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 260
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance by using the specified text reader, settings, and context information for parsing.
  syntax:
    content: public static XmlReader Create(IO.TextReader input, XmlReaderSettings settings, XmlParserContext inputContext)
    content.vb: Public Shared Function Create(input As IO.TextReader, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader
    parameters:
    - id: input
      type: System.IO.TextReader
      description: The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance. This value can be null.
    - id: inputContext
      type: System.Xml.XmlParserContext
      description: The context information required to parse the XML fragment. The context information can include the <xref href="System.Xml.XmlNameTable" data-throw-if-not-resolved="false"></xref> to use, encoding, namespace scope, the current xml:lang and xml:space scope, base URI, and document type definition.This value can be null.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  exceptions:
  - type: System.ArgumentNullException
    description: The *input* value is null.
  - type: System.ArgumentException
    description: The <xref href="System.Xml.XmlReaderSettings.NameTable" data-throw-if-not-resolved="false"></xref>  and <xref href="System.Xml.XmlParserContext.NameTable" data-throw-if-not-resolved="false"></xref> properties both contain values. (Only one of these NameTable properties can be set and used).
- uid: System.Xml.XmlReader.Create(System.String)
  id: Create(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Create(String)
  fullName: System.Xml.XmlReader.Create(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 261
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance with specified URI.
  syntax:
    content: public static XmlReader Create(string inputUri)
    content.vb: Public Shared Function Create(inputUri As String) As XmlReader
    parameters:
    - id: inputUri
      type: System.String
      description: The URI for the file that contains the XML data. The <xref href="System.Xml.XmlUrlResolver" data-throw-if-not-resolved="false"></xref> class is used to convert the path to a canonical data representation.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  exceptions:
  - type: System.ArgumentNullException
    description: The *inputUri* value is null.
  - type: System.Security.SecurityException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> does not have sufficient permissions to access the location of the XML data.
  - type: System.IO.FileNotFoundException
    description: The file identified by the URI does not exist.
  - type: System.UriFormatException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <xref href="System.FormatException" data-throw-if-not-resolved="false"></xref>, instead.The URI format is not correct.
- uid: System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)
  id: Create(System.String,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Create(String, XmlReaderSettings)
  fullName: System.Xml.XmlReader.Create(System.String, System.Xml.XmlReaderSettings)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 262
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance by using the specified URI and settings.
  syntax:
    content: public static XmlReader Create(string inputUri, XmlReaderSettings settings)
    content.vb: Public Shared Function Create(inputUri As String, settings As XmlReaderSettings) As XmlReader
    parameters:
    - id: inputUri
      type: System.String
      description: The URI for the file containing the XML data. The <xref href="System.Xml.XmlResolver" data-throw-if-not-resolved="false"></xref> object on the <xref href="System.Xml.XmlReaderSettings" data-throw-if-not-resolved="false"></xref> object is used to convert the path to a canonical data representation. If <xref href="System.Xml.XmlReaderSettings.XmlResolver" data-throw-if-not-resolved="false"></xref> is null, a new <xref href="System.Xml.XmlUrlResolver" data-throw-if-not-resolved="false"></xref> object is used.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance. This value can be null.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  exceptions:
  - type: System.ArgumentNullException
    description: The *inputUri* value is null.
  - type: System.IO.FileNotFoundException
    description: The file specified by the URI cannot be found.
  - type: System.UriFormatException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <xref href="System.FormatException" data-throw-if-not-resolved="false"></xref>, instead.The URI format is not correct.
- uid: System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  id: Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Create(XmlReader, XmlReaderSettings)
  fullName: System.Xml.XmlReader.Create(System.Xml.XmlReader, System.Xml.XmlReaderSettings)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 263
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance by using the specified XML reader and settings.
  syntax:
    content: public static XmlReader Create(XmlReader reader, XmlReaderSettings settings)
    content.vb: Public Shared Function Create(reader As XmlReader, settings As XmlReaderSettings) As XmlReader
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The object that you want to use as the underlying XML reader.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> instance.The conformance level of the <xref href="System.Xml.XmlReaderSettings" data-throw-if-not-resolved="false"></xref> object must either match the conformance level of the underlying reader, or it must be set to <xref href="System.Xml.ConformanceLevel.Auto" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.XmlReader
      description: An object that is wrapped around the specified <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.ArgumentNullException
    description: The *reader* value is null.
  - type: System.InvalidOperationException
    description: If the <xref href="System.Xml.XmlReaderSettings" data-throw-if-not-resolved="false"></xref> object specifies a conformance level that is not consistent with conformance level of the underlying reader.-or-The underlying <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is in an <xref href="System.Xml.ReadState.Error" data-throw-if-not-resolved="false"></xref> or <xref href="System.Xml.ReadState.Closed" data-throw-if-not-resolved="false"></xref> state.
- uid: System.Xml.XmlReader.Dispose
  id: Dispose
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Xml.XmlReader.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 264
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Releases all resources used by the current instance of the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Xml.XmlReader.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 265
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Releases the unmanaged resources used by the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.GetAttribute(System.Int32)
  id: GetAttribute(System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: GetAttribute(Int32)
  fullName: System.Xml.XmlReader.GetAttribute(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 266
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified index.
  syntax:
    content: public abstract string GetAttribute(int i)
    content.vb: Public MustOverride Function GetAttribute(i As Integer) As String
    parameters:
    - id: i
      type: System.Int32
      description: The index of the attribute. The index is zero-based. (The first attribute has index 0.)
    return:
      type: System.String
      description: The value of the specified attribute. This method does not move the reader.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*i* is out of range. It must be non-negative and less than the size of the attribute collection.'
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: GetAttribute(String)
  fullName: System.Xml.XmlReader.GetAttribute(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 267
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified <xref href="System.Xml.XmlReader.Name" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public abstract string GetAttribute(string name)
    content.vb: Public MustOverride Function GetAttribute(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the attribute.
    return:
      type: System.String
      description: The value of the specified attribute. If the attribute is not found or the value is String.Empty, null is returned.
  exceptions:
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.GetAttribute(System.String,System.String)
  id: GetAttribute(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: GetAttribute(String, String)
  fullName: System.Xml.XmlReader.GetAttribute(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 268
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified <xref href="System.Xml.XmlReader.LocalName" data-throw-if-not-resolved="false"></xref> and <xref href="System.Xml.XmlReader.NamespaceURI" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public abstract string GetAttribute(string name, string namespaceURI)
    content.vb: Public MustOverride Function GetAttribute(name As String, namespaceURI As String) As String
    parameters:
    - id: name
      type: System.String
      description: The local name of the attribute.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the attribute.
    return:
      type: System.String
      description: The value of the specified attribute. If the attribute is not found or the value is String.Empty, null is returned. This method does not move the reader.
  exceptions:
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.GetValueAsync
  id: GetValueAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: GetValueAsync()
  fullName: System.Xml.XmlReader.GetValueAsync()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 269
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously gets the value of the current node.
  syntax:
    content: public virtual Threading.Tasks.Task<string> GetValueAsync()
    content.vb: Public Overridable Function GetValueAsync As Threading.Tasks.Task(Of String)
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The value of the current node.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.IsName(System.String)
  id: IsName(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: IsName(String)
  fullName: System.Xml.XmlReader.IsName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 270
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Returns a value indicating whether the string argument is a valid XML name.
  syntax:
    content: public static bool IsName(string str)
    content.vb: Public Shared Function IsName(str As String) As Boolean
    parameters:
    - id: str
      type: System.String
      description: The name to validate.
    return:
      type: System.Boolean
      description: true if the name is valid; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: The *str* value is null.
- uid: System.Xml.XmlReader.IsNameToken(System.String)
  id: IsNameToken(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: IsNameToken(String)
  fullName: System.Xml.XmlReader.IsNameToken(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 271
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Returns a value indicating whether or not the string argument is a valid XML name token.
  syntax:
    content: public static bool IsNameToken(string str)
    content.vb: Public Shared Function IsNameToken(str As String) As Boolean
    parameters:
    - id: str
      type: System.String
      description: The name token to validate.
    return:
      type: System.Boolean
      description: true if it is a valid name token; otherwise false.
  exceptions:
  - type: System.ArgumentNullException
    description: The *str* value is null.
- uid: System.Xml.XmlReader.IsStartElement
  id: IsStartElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: IsStartElement()
  fullName: System.Xml.XmlReader.IsStartElement()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 272
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Calls <xref href="System.Xml.XmlReader.MoveToContent" data-throw-if-not-resolved="false"></xref> and tests if the current content node is a start tag or empty element tag.
  syntax:
    content: public virtual bool IsStartElement()
    content.vb: Public Overridable Function IsStartElement As Boolean
    return:
      type: System.Boolean
      description: true if <xref href="System.Xml.XmlReader.MoveToContent" data-throw-if-not-resolved="false"></xref> finds a start tag or empty element tag; false if a node type other than XmlNodeType.Element was found.
  exceptions:
  - type: System.Xml.XmlException
    description: Incorrect XML is encountered in the input stream.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.IsStartElement(System.String)
  id: IsStartElement(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: IsStartElement(String)
  fullName: System.Xml.XmlReader.IsStartElement(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 273
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Calls <xref href="System.Xml.XmlReader.MoveToContent" data-throw-if-not-resolved="false"></xref> and tests if the current content node is a start tag or empty element tag and if the <xref href="System.Xml.XmlReader.Name" data-throw-if-not-resolved="false"></xref> property of the element found matches the given argument.
  syntax:
    content: public virtual bool IsStartElement(string name)
    content.vb: Public Overridable Function IsStartElement(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
      description: The string matched against the Name property of the element found.
    return:
      type: System.Boolean
      description: true if the resulting node is an element and the Name property matches the specified string. false if a node type other than XmlNodeType.Element was found or if the element Name property does not match the specified string.
  exceptions:
  - type: System.Xml.XmlException
    description: Incorrect XML is encountered in the input stream.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.IsStartElement(System.String,System.String)
  id: IsStartElement(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: IsStartElement(String, String)
  fullName: System.Xml.XmlReader.IsStartElement(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 274
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Calls <xref href="System.Xml.XmlReader.MoveToContent" data-throw-if-not-resolved="false"></xref> and tests if the current content node is a start tag or empty element tag and if the <xref href="System.Xml.XmlReader.LocalName" data-throw-if-not-resolved="false"></xref> and <xref href="System.Xml.XmlReader.NamespaceURI" data-throw-if-not-resolved="false"></xref> properties of the element found match the given strings.
  syntax:
    content: public virtual bool IsStartElement(string localname, string ns)
    content.vb: Public Overridable Function IsStartElement(localname As String, ns As String) As Boolean
    parameters:
    - id: localname
      type: System.String
      description: The string to match against the LocalName property of the element found.
    - id: ns
      type: System.String
      description: The string to match against the NamespaceURI property of the element found.
    return:
      type: System.Boolean
      description: true if the resulting node is an element. false if a node type other than XmlNodeType.Element was found or if the LocalName and NamespaceURI properties of the element do not match the specified strings.
  exceptions:
  - type: System.Xml.XmlException
    description: Incorrect XML is encountered in the input stream.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.LookupNamespace(System.String)
  id: LookupNamespace(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: LookupNamespace(String)
  fullName: System.Xml.XmlReader.LookupNamespace(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 275
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, resolves a namespace prefix in the current element's scope.
  syntax:
    content: public abstract string LookupNamespace(string prefix)
    content.vb: Public MustOverride Function LookupNamespace(prefix As String) As String
    parameters:
    - id: prefix
      type: System.String
      description: The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string.
    return:
      type: System.String
      description: The namespace URI to which the prefix maps or null if no matching prefix is found.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.MoveToAttribute(System.Int32)
  id: MoveToAttribute(System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: MoveToAttribute(Int32)
  fullName: System.Xml.XmlReader.MoveToAttribute(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 276
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the attribute with the specified index.
  syntax:
    content: public virtual void MoveToAttribute(int i)
    content.vb: Public Overridable Sub MoveToAttribute(i As Integer)
    parameters:
    - id: i
      type: System.Int32
      description: The index of the attribute.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.ArgumentOutOfRangeException
    description: The parameter has a negative value.
- uid: System.Xml.XmlReader.MoveToAttribute(System.String)
  id: MoveToAttribute(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: MoveToAttribute(String)
  fullName: System.Xml.XmlReader.MoveToAttribute(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 277
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the attribute with the specified <xref href="System.Xml.XmlReader.Name" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public abstract bool MoveToAttribute(string name)
    content.vb: Public MustOverride Function MoveToAttribute(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the attribute.
    return:
      type: System.Boolean
      description: true if the attribute is found; otherwise, false. If false, the reader's position does not change.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.ArgumentException
    description: The parameter is an empty string.
- uid: System.Xml.XmlReader.MoveToAttribute(System.String,System.String)
  id: MoveToAttribute(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: MoveToAttribute(String, String)
  fullName: System.Xml.XmlReader.MoveToAttribute(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 278
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the attribute with the specified <xref href="System.Xml.XmlReader.LocalName" data-throw-if-not-resolved="false"></xref> and <xref href="System.Xml.XmlReader.NamespaceURI" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public abstract bool MoveToAttribute(string name, string ns)
    content.vb: Public MustOverride Function MoveToAttribute(name As String, ns As String) As Boolean
    parameters:
    - id: name
      type: System.String
      description: The local name of the attribute.
    - id: ns
      type: System.String
      description: The namespace URI of the attribute.
    return:
      type: System.Boolean
      description: true if the attribute is found; otherwise, false. If false, the reader's position does not change.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.ArgumentNullException
    description: Both parameter values are null.
- uid: System.Xml.XmlReader.MoveToContent
  id: MoveToContent
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: MoveToContent()
  fullName: System.Xml.XmlReader.MoveToContent()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 279
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: 'Checks whether the current node is a content (non-white space text, CDATA, Element, EndElement, EntityReference, or EndEntity) node. If the node is not a content node, the reader skips ahead to the next content node or end of file. It skips over nodes of the following type: ProcessingInstruction, DocumentType, Comment, Whitespace, or SignificantWhitespace.'
  syntax:
    content: public virtual XmlNodeType MoveToContent()
    content.vb: Public Overridable Function MoveToContent As XmlNodeType
    return:
      type: System.Xml.XmlNodeType
      description: The <xref href="System.Xml.XmlReader.NodeType" data-throw-if-not-resolved="false"></xref> of the current node found by the method or XmlNodeType.None if the reader has reached the end of the input stream.
  exceptions:
  - type: System.Xml.XmlException
    description: Incorrect XML encountered in the input stream.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.MoveToContentAsync
  id: MoveToContentAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: MoveToContentAsync()
  fullName: System.Xml.XmlReader.MoveToContentAsync()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 280
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously checks whether the current node is a content node. If the node is not a content node, the reader skips ahead to the next content node or end of file.
  syntax:
    content: public virtual Threading.Tasks.Task<XmlNodeType> MoveToContentAsync()
    content.vb: Public Overridable Function MoveToContentAsync As Threading.Tasks.Task(Of XmlNodeType)
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlNodeType}
      description: The <xref href="System.Xml.XmlReader.NodeType" data-throw-if-not-resolved="false"></xref> of the current node found by the method or XmlNodeType.None if the reader has reached the end of the input stream.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.MoveToElement
  id: MoveToElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: MoveToElement()
  fullName: System.Xml.XmlReader.MoveToElement()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 281
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the element that contains the current attribute node.
  syntax:
    content: public abstract bool MoveToElement()
    content.vb: Public MustOverride Function MoveToElement As Boolean
    return:
      type: System.Boolean
      description: true if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); false if the reader is not positioned on an attribute (the position of the reader does not change).
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.MoveToFirstAttribute
  id: MoveToFirstAttribute
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: MoveToFirstAttribute()
  fullName: System.Xml.XmlReader.MoveToFirstAttribute()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 282
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the first attribute.
  syntax:
    content: public abstract bool MoveToFirstAttribute()
    content.vb: Public MustOverride Function MoveToFirstAttribute As Boolean
    return:
      type: System.Boolean
      description: true if an attribute exists (the reader moves to the first attribute); otherwise, false (the position of the reader does not change).
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.MoveToNextAttribute
  id: MoveToNextAttribute
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: MoveToNextAttribute()
  fullName: System.Xml.XmlReader.MoveToNextAttribute()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 283
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the next attribute.
  syntax:
    content: public abstract bool MoveToNextAttribute()
    content.vb: Public MustOverride Function MoveToNextAttribute As Boolean
    return:
      type: System.Boolean
      description: true if there is a next attribute; false if there are no more attributes.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.Read
  id: Read
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Read()
  fullName: System.Xml.XmlReader.Read()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 284
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, reads the next node from the stream.
  syntax:
    content: public abstract bool Read()
    content.vb: Public MustOverride Function Read As Boolean
    return:
      type: System.Boolean
      description: true if the next node was read successfully; otherwise, false.
  exceptions:
  - type: System.Xml.XmlException
    description: An error occurred while parsing the XML.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadAsync
  id: ReadAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadAsync()
  fullName: System.Xml.XmlReader.ReadAsync()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 285
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads the next node from the stream.
  syntax:
    content: public virtual Threading.Tasks.Task<bool> ReadAsync()
    content.vb: Public Overridable Function ReadAsync As Threading.Tasks.Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: true if the next node was read successfully; false if there are no more nodes to read.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadAttributeValue
  id: ReadAttributeValue
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadAttributeValue()
  fullName: System.Xml.XmlReader.ReadAttributeValue()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 286
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, parses the attribute value into one or more Text, EntityReference, or EndEntity nodes.
  syntax:
    content: public abstract bool ReadAttributeValue()
    content.vb: Public MustOverride Function ReadAttributeValue As Boolean
    return:
      type: System.Boolean
      description: true if there are nodes to return.false if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.An empty attribute, such as, misc="", returns true with a single node with a value of String.Empty.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAs(Type, IXmlNamespaceResolver)
  fullName: System.Xml.XmlReader.ReadContentAs(System.Type, System.Xml.IXmlNamespaceResolver)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 287
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the content as an object of the type specified.
  syntax:
    content: public virtual object ReadContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver)
    content.vb: Public Overridable Function ReadContentAs(returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Object
    parameters:
    - id: returnType
      type: System.Type
      description: "The type of the value to be returned.Note   With the release of the .NET Framework 3.5, the value of the *returnType* parameter can now be the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> type."
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: An <xref href="System.Xml.IXmlNamespaceResolver" data-throw-if-not-resolved="false"></xref> object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an <xref href="System.Xml.XmlQualifiedName" data-throw-if-not-resolved="false"></xref> object to an xs:string.This value can be null.
    return:
      type: System.Object
      description: The concatenated text content or attribute value converted to the requested type.
  exceptions:
  - type: System.FormatException
    description: The content is not in the correct format for the target type.
  - type: System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.ArgumentNullException
    description: The *returnType* value is null.
  - type: System.InvalidOperationException
    description: The current node is not a supported node type. See the table below for details.
  - type: System.OverflowException
    description: Read Decimal.MaxValue.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsAsync(Type, IXmlNamespaceResolver)
  fullName: System.Xml.XmlReader.ReadContentAsAsync(System.Type, System.Xml.IXmlNamespaceResolver)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 288
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads the content as an object of the type specified.
  syntax:
    content: public virtual Threading.Tasks.Task<object> ReadContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver)
    content.vb: Public Overridable Function ReadContentAsAsync(returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Threading.Tasks.Task(Of Object)
    parameters:
    - id: returnType
      type: System.Type
      description: The type of the value to be returned.
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: An <xref href="System.Xml.IXmlNamespaceResolver" data-throw-if-not-resolved="false"></xref> object that is used to resolve any namespace prefixes related to type conversion.
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: The concatenated text content or attribute value converted to the requested type.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  id: ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsBase64(Byte[], Int32, Int32)
  name.vb: ReadContentAsBase64(Byte(), Int32, Int32)
  fullName: System.Xml.XmlReader.ReadContentAsBase64(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.Xml.XmlReader.ReadContentAsBase64(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 289
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the content and returns the Base64 decoded binary bytes.
  syntax:
    content: public virtual int ReadContentAsBase64(byte[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadContentAsBase64(buffer As Byte(), index As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be null.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  exceptions:
  - type: System.ArgumentNullException
    description: The *buffer* value is null.
  - type: System.InvalidOperationException
    description: <xref href="System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" data-throw-if-not-resolved="false"></xref> is not supported on the current node.
  - type: System.ArgumentOutOfRangeException
    description: The index into the buffer or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> implementation does not support this method.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  id: ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsBase64Async(Byte[], Int32, Int32)
  name.vb: ReadContentAsBase64Async(Byte(), Int32, Int32)
  fullName: System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 290
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads the content and returns the Base64 decoded binary bytes.
  syntax:
    content: public virtual Threading.Tasks.Task<int> ReadContentAsBase64Async(byte[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadContentAsBase64Async(buffer As Byte(), index As Integer, count As Integer) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be null.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of bytes written to the buffer.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  id: ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsBinHex(Byte[], Int32, Int32)
  name.vb: ReadContentAsBinHex(Byte(), Int32, Int32)
  fullName: System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.Xml.XmlReader.ReadContentAsBinHex(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 291
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the content and returns the BinHex decoded binary bytes.
  syntax:
    content: public virtual int ReadContentAsBinHex(byte[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadContentAsBinHex(buffer As Byte(), index As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be null.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  exceptions:
  - type: System.ArgumentNullException
    description: The *buffer* value is null.
  - type: System.InvalidOperationException
    description: <xref href="System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" data-throw-if-not-resolved="false"></xref> is not supported on the current node.
  - type: System.ArgumentOutOfRangeException
    description: The index into the buffer or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> implementation does not support this method.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  id: ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsBinHexAsync(Byte[], Int32, Int32)
  name.vb: ReadContentAsBinHexAsync(Byte(), Int32, Int32)
  fullName: System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 292
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads the content and returns the BinHex decoded binary bytes.
  syntax:
    content: public virtual Threading.Tasks.Task<int> ReadContentAsBinHexAsync(byte[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadContentAsBinHexAsync(buffer As Byte(), index As Integer, count As Integer) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be null.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of bytes written to the buffer.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadContentAsBoolean
  id: ReadContentAsBoolean
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsBoolean()
  fullName: System.Xml.XmlReader.ReadContentAsBoolean()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 293
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the text content at the current position as a Boolean.
  syntax:
    content: public virtual bool ReadContentAsBoolean()
    content.vb: Public Overridable Function ReadContentAsBoolean As Boolean
    return:
      type: System.Boolean
      description: The text content as a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAsDateTimeOffset
  id: ReadContentAsDateTimeOffset
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsDateTimeOffset()
  fullName: System.Xml.XmlReader.ReadContentAsDateTimeOffset()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 294
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the text content at the current position as a <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual DateTimeOffset ReadContentAsDateTimeOffset()
    content.vb: Public Overridable Function ReadContentAsDateTimeOffset As DateTimeOffset
    return:
      type: System.DateTimeOffset
      description: The text content as a <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAsDecimal
  id: ReadContentAsDecimal
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsDecimal()
  fullName: System.Xml.XmlReader.ReadContentAsDecimal()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 295
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the text content at the current position as a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual decimal ReadContentAsDecimal()
    content.vb: Public Overridable Function ReadContentAsDecimal As Decimal
    return:
      type: System.Decimal
      description: The text content at the current position as a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAsDouble
  id: ReadContentAsDouble
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsDouble()
  fullName: System.Xml.XmlReader.ReadContentAsDouble()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 296
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the text content at the current position as a double-precision floating-point number.
  syntax:
    content: public virtual double ReadContentAsDouble()
    content.vb: Public Overridable Function ReadContentAsDouble As Double
    return:
      type: System.Double
      description: The text content as a double-precision floating-point number.
  exceptions:
  - type: System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAsFloat
  id: ReadContentAsFloat
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsFloat()
  fullName: System.Xml.XmlReader.ReadContentAsFloat()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 297
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the text content at the current position as a single-precision floating point number.
  syntax:
    content: public virtual float ReadContentAsFloat()
    content.vb: Public Overridable Function ReadContentAsFloat As Single
    return:
      type: System.Single
      description: The text content at the current position as a single-precision floating point number.
  exceptions:
  - type: System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAsInt
  id: ReadContentAsInt
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsInt()
  fullName: System.Xml.XmlReader.ReadContentAsInt()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 298
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the text content at the current position as a 32-bit signed integer.
  syntax:
    content: public virtual int ReadContentAsInt()
    content.vb: Public Overridable Function ReadContentAsInt As Integer
    return:
      type: System.Int32
      description: The text content as a 32-bit signed integer.
  exceptions:
  - type: System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAsLong
  id: ReadContentAsLong
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsLong()
  fullName: System.Xml.XmlReader.ReadContentAsLong()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 299
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the text content at the current position as a 64-bit signed integer.
  syntax:
    content: public virtual long ReadContentAsLong()
    content.vb: Public Overridable Function ReadContentAsLong As Long
    return:
      type: System.Int64
      description: The text content as a 64-bit signed integer.
  exceptions:
  - type: System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAsObject
  id: ReadContentAsObject
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsObject()
  fullName: System.Xml.XmlReader.ReadContentAsObject()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 300
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the text content at the current position as an <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object ReadContentAsObject()
    content.vb: Public Overridable Function ReadContentAsObject As Object
    return:
      type: System.Object
      description: The text content as the most appropriate common language runtime (CLR) object.
  exceptions:
  - type: System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAsObjectAsync
  id: ReadContentAsObjectAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsObjectAsync()
  fullName: System.Xml.XmlReader.ReadContentAsObjectAsync()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 301
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads the text content at the current position as an <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual Threading.Tasks.Task<object> ReadContentAsObjectAsync()
    content.vb: Public Overridable Function ReadContentAsObjectAsync As Threading.Tasks.Task(Of Object)
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: The text content as the most appropriate common language runtime (CLR) object.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadContentAsString
  id: ReadContentAsString
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsString()
  fullName: System.Xml.XmlReader.ReadContentAsString()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 302
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the text content at the current position as a <xref href="System.String" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual string ReadContentAsString()
    content.vb: Public Overridable Function ReadContentAsString As String
    return:
      type: System.String
      description: The text content as a <xref href="System.String" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadContentAsStringAsync
  id: ReadContentAsStringAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadContentAsStringAsync()
  fullName: System.Xml.XmlReader.ReadContentAsStringAsync()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 303
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads the text content at the current position as a <xref href="System.String" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual Threading.Tasks.Task<string> ReadContentAsStringAsync()
    content.vb: Public Overridable Function ReadContentAsStringAsync As Threading.Tasks.Task(Of String)
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The text content as a <xref href="System.String" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAs(Type, IXmlNamespaceResolver)
  fullName: System.Xml.XmlReader.ReadElementContentAs(System.Type, System.Xml.IXmlNamespaceResolver)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 304
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the element content as the requested type.
  syntax:
    content: public virtual object ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver)
    content.vb: Public Overridable Function ReadElementContentAs(returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Object
    parameters:
    - id: returnType
      type: System.Type
      description: "The type of the value to be returned.Note   With the release of the .NET Framework 3.5, the value of the *returnType* parameter can now be the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> type."
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: An <xref href="System.Xml.IXmlNamespaceResolver" data-throw-if-not-resolved="false"></xref> object that is used to resolve any namespace prefixes related to type conversion.
    return:
      type: System.Object
      description: The element content converted to the requested typed object.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to the requested type.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.OverflowException
    description: Read Decimal.MaxValue.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  id: ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)
  fullName: System.Xml.XmlReader.ReadElementContentAs(System.Type, System.Xml.IXmlNamespaceResolver, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 305
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.
  syntax:
    content: public virtual object ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver, string localName, string namespaceURI)
    content.vb: Public Overridable Function ReadElementContentAs(returnType As Type, namespaceResolver As IXmlNamespaceResolver, localName As String, namespaceURI As String) As Object
    parameters:
    - id: returnType
      type: System.Type
      description: "The type of the value to be returned.Note   With the release of the .NET Framework 3.5, the value of the *returnType* parameter can now be the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> type."
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: An <xref href="System.Xml.IXmlNamespaceResolver" data-throw-if-not-resolved="false"></xref> object that is used to resolve any namespace prefixes related to type conversion.
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Object
      description: The element content converted to the requested typed object.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to the requested type.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  - type: System.OverflowException
    description: Read Decimal.MaxValue.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsAsync(Type, IXmlNamespaceResolver)
  fullName: System.Xml.XmlReader.ReadElementContentAsAsync(System.Type, System.Xml.IXmlNamespaceResolver)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 306
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads the element content as the requested type.
  syntax:
    content: public virtual Threading.Tasks.Task<object> ReadElementContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver)
    content.vb: Public Overridable Function ReadElementContentAsAsync(returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Threading.Tasks.Task(Of Object)
    parameters:
    - id: returnType
      type: System.Type
      description: The type of the value to be returned.
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: An <xref href="System.Xml.IXmlNamespaceResolver" data-throw-if-not-resolved="false"></xref> object that is used to resolve any namespace prefixes related to type conversion.
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: The element content converted to the requested typed object.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  id: ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsBase64(Byte[], Int32, Int32)
  name.vb: ReadElementContentAsBase64(Byte(), Int32, Int32)
  fullName: System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 307
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the element and decodes the Base64 content.
  syntax:
    content: public virtual int ReadElementContentAsBase64(byte[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadElementContentAsBase64(buffer As Byte(), index As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be null.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  exceptions:
  - type: System.ArgumentNullException
    description: The *buffer* value is null.
  - type: System.InvalidOperationException
    description: The current node is not an element node.
  - type: System.ArgumentOutOfRangeException
    description: The index into the buffer or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> implementation does not support this method.
  - type: System.Xml.XmlException
    description: The element contains mixed-content.
  - type: System.FormatException
    description: The content cannot be converted to the requested type.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  id: ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsBase64Async(Byte[], Int32, Int32)
  name.vb: ReadElementContentAsBase64Async(Byte(), Int32, Int32)
  fullName: System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 308
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads the element and decodes the Base64 content.
  syntax:
    content: public virtual Threading.Tasks.Task<int> ReadElementContentAsBase64Async(byte[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadElementContentAsBase64Async(buffer As Byte(), index As Integer, count As Integer) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be null.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of bytes written to the buffer.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  id: ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsBinHex(Byte[], Int32, Int32)
  name.vb: ReadElementContentAsBinHex(Byte(), Int32, Int32)
  fullName: System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 309
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the element and decodes the BinHex content.
  syntax:
    content: public virtual int ReadElementContentAsBinHex(byte[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadElementContentAsBinHex(buffer As Byte(), index As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be null.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  exceptions:
  - type: System.ArgumentNullException
    description: The *buffer* value is null.
  - type: System.InvalidOperationException
    description: The current node is not an element node.
  - type: System.ArgumentOutOfRangeException
    description: The index into the buffer or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> implementation does not support this method.
  - type: System.Xml.XmlException
    description: The element contains mixed-content.
  - type: System.FormatException
    description: The content cannot be converted to the requested type.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  id: ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)
  name.vb: ReadElementContentAsBinHexAsync(Byte(), Int32, Int32)
  fullName: System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 310
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads the element and decodes the BinHex content.
  syntax:
    content: public virtual Threading.Tasks.Task<int> ReadElementContentAsBinHexAsync(byte[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadElementContentAsBinHexAsync(buffer As Byte(), index As Integer, count As Integer) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be null.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of bytes written to the buffer.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean
  id: ReadElementContentAsBoolean
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsBoolean()
  fullName: System.Xml.XmlReader.ReadElementContentAsBoolean()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 311
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual bool ReadElementContentAsBoolean()
    content.vb: Public Overridable Function ReadElementContentAsBoolean As Boolean
    return:
      type: System.Boolean
      description: The element content as a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> object.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)
  id: ReadElementContentAsBoolean(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsBoolean(String, String)
  fullName: System.Xml.XmlReader.ReadElementContentAsBoolean(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 312
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual bool ReadElementContentAsBoolean(string localName, string namespaceURI)
    content.vb: Public Overridable Function ReadElementContentAsBoolean(localName As String, namespaceURI As String) As Boolean
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Boolean
      description: The element content as a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to the requested type.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal
  id: ReadElementContentAsDecimal
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsDecimal()
  fullName: System.Xml.XmlReader.ReadElementContentAsDecimal()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 313
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual decimal ReadElementContentAsDecimal()
    content.vb: Public Overridable Function ReadElementContentAsDecimal As Decimal
    return:
      type: System.Decimal
      description: The element content as a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref>.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)
  id: ReadElementContentAsDecimal(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsDecimal(String, String)
  fullName: System.Xml.XmlReader.ReadElementContentAsDecimal(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 314
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual decimal ReadElementContentAsDecimal(string localName, string namespaceURI)
    content.vb: Public Overridable Function ReadElementContentAsDecimal(localName As String, namespaceURI As String) As Decimal
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Decimal
      description: The element content as a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref>.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsDouble
  id: ReadElementContentAsDouble
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsDouble()
  fullName: System.Xml.XmlReader.ReadElementContentAsDouble()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 315
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a double-precision floating-point number.
  syntax:
    content: public virtual double ReadElementContentAsDouble()
    content.vb: Public Overridable Function ReadElementContentAsDouble As Double
    return:
      type: System.Double
      description: The element content as a double-precision floating-point number.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to a double-precision floating-point number.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)
  id: ReadElementContentAsDouble(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsDouble(String, String)
  fullName: System.Xml.XmlReader.ReadElementContentAsDouble(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 316
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.
  syntax:
    content: public virtual double ReadElementContentAsDouble(string localName, string namespaceURI)
    content.vb: Public Overridable Function ReadElementContentAsDouble(localName As String, namespaceURI As String) As Double
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Double
      description: The element content as a double-precision floating-point number.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to the requested type.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsFloat
  id: ReadElementContentAsFloat
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsFloat()
  fullName: System.Xml.XmlReader.ReadElementContentAsFloat()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 317
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the current element and returns the contents as single-precision floating-point number.
  syntax:
    content: public virtual float ReadElementContentAsFloat()
    content.vb: Public Overridable Function ReadElementContentAsFloat As Single
    return:
      type: System.Single
      description: The element content as a single-precision floating point number.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to a single-precision floating-point number.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)
  id: ReadElementContentAsFloat(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsFloat(String, String)
  fullName: System.Xml.XmlReader.ReadElementContentAsFloat(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 318
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.
  syntax:
    content: public virtual float ReadElementContentAsFloat(string localName, string namespaceURI)
    content.vb: Public Overridable Function ReadElementContentAsFloat(localName As String, namespaceURI As String) As Single
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Single
      description: The element content as a single-precision floating point number.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to a single-precision floating-point number.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsInt
  id: ReadElementContentAsInt
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsInt()
  fullName: System.Xml.XmlReader.ReadElementContentAsInt()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 319
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a 32-bit signed integer.
  syntax:
    content: public virtual int ReadElementContentAsInt()
    content.vb: Public Overridable Function ReadElementContentAsInt As Integer
    return:
      type: System.Int32
      description: The element content as a 32-bit signed integer.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to a 32-bit signed integer.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)
  id: ReadElementContentAsInt(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsInt(String, String)
  fullName: System.Xml.XmlReader.ReadElementContentAsInt(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 320
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.
  syntax:
    content: public virtual int ReadElementContentAsInt(string localName, string namespaceURI)
    content.vb: Public Overridable Function ReadElementContentAsInt(localName As String, namespaceURI As String) As Integer
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Int32
      description: The element content as a 32-bit signed integer.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to a 32-bit signed integer.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsLong
  id: ReadElementContentAsLong
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsLong()
  fullName: System.Xml.XmlReader.ReadElementContentAsLong()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 321
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a 64-bit signed integer.
  syntax:
    content: public virtual long ReadElementContentAsLong()
    content.vb: Public Overridable Function ReadElementContentAsLong As Long
    return:
      type: System.Int64
      description: The element content as a 64-bit signed integer.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to a 64-bit signed integer.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)
  id: ReadElementContentAsLong(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsLong(String, String)
  fullName: System.Xml.XmlReader.ReadElementContentAsLong(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 322
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.
  syntax:
    content: public virtual long ReadElementContentAsLong(string localName, string namespaceURI)
    content.vb: Public Overridable Function ReadElementContentAsLong(localName As String, namespaceURI As String) As Long
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Int64
      description: The element content as a 64-bit signed integer.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to a 64-bit signed integer.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsObject
  id: ReadElementContentAsObject
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsObject()
  fullName: System.Xml.XmlReader.ReadElementContentAsObject()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 323
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the current element and returns the contents as an <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object ReadElementContentAsObject()
    content.vb: Public Overridable Function ReadElementContentAsObject As Object
    return:
      type: System.Object
      description: A boxed common language runtime (CLR) object of the most appropriate type. The <xref href="System.Xml.XmlReader.ValueType" data-throw-if-not-resolved="false"></xref> property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to the requested type
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)
  id: ReadElementContentAsObject(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsObject(String, String)
  fullName: System.Xml.XmlReader.ReadElementContentAsObject(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 324
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object ReadElementContentAsObject(string localName, string namespaceURI)
    content.vb: Public Overridable Function ReadElementContentAsObject(localName As String, namespaceURI As String) As Object
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Object
      description: A boxed common language runtime (CLR) object of the most appropriate type. The <xref href="System.Xml.XmlReader.ValueType" data-throw-if-not-resolved="false"></xref> property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to the requested type.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsObjectAsync
  id: ReadElementContentAsObjectAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsObjectAsync()
  fullName: System.Xml.XmlReader.ReadElementContentAsObjectAsync()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 325
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads the current element and returns the contents as an <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual Threading.Tasks.Task<object> ReadElementContentAsObjectAsync()
    content.vb: Public Overridable Function ReadElementContentAsObjectAsync As Threading.Tasks.Task(Of Object)
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: A boxed common language runtime (CLR) object of the most appropriate type. The <xref href="System.Xml.XmlReader.ValueType" data-throw-if-not-resolved="false"></xref> property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadElementContentAsString
  id: ReadElementContentAsString
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsString()
  fullName: System.Xml.XmlReader.ReadElementContentAsString()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 326
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a <xref href="System.String" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual string ReadElementContentAsString()
    content.vb: Public Overridable Function ReadElementContentAsString As String
    return:
      type: System.String
      description: The element content as a <xref href="System.String" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to a <xref href="System.String" data-throw-if-not-resolved="false"></xref> object.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)
  id: ReadElementContentAsString(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsString(String, String)
  fullName: System.Xml.XmlReader.ReadElementContentAsString(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 327
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href="System.String" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual string ReadElementContentAsString(string localName, string namespaceURI)
    content.vb: Public Overridable Function ReadElementContentAsString(localName As String, namespaceURI As String) As String
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.String
      description: The element content as a <xref href="System.String" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidOperationException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element.
  - type: System.Xml.XmlException
    description: The current element contains child elements.-or-The element content cannot be converted to a <xref href="System.String" data-throw-if-not-resolved="false"></xref> object.
  - type: System.ArgumentNullException
    description: The method is called with null arguments.
  - type: System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadElementContentAsStringAsync
  id: ReadElementContentAsStringAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsStringAsync()
  fullName: System.Xml.XmlReader.ReadElementContentAsStringAsync()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 328
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads the current element and returns the contents as a <xref href="System.String" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual Threading.Tasks.Task<string> ReadElementContentAsStringAsync()
    content.vb: Public Overridable Function ReadElementContentAsStringAsync As Threading.Tasks.Task(Of String)
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The element content as a <xref href="System.String" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadEndElement
  id: ReadEndElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadEndElement()
  fullName: System.Xml.XmlReader.ReadEndElement()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 329
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the current content node is an end tag and advances the reader to the next node.
  syntax:
    content: public virtual void ReadEndElement()
    content.vb: Public Overridable Sub ReadEndElement
  exceptions:
  - type: System.Xml.XmlException
    description: The current node is not an end tag or if incorrect XML is encountered in the input stream.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadInnerXml
  id: ReadInnerXml
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadInnerXml()
  fullName: System.Xml.XmlReader.ReadInnerXml()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 330
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, reads all the content, including markup, as a string.
  syntax:
    content: public virtual string ReadInnerXml()
    content.vb: Public Overridable Function ReadInnerXml As String
    return:
      type: System.String
      description: All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.If the current node is neither an element nor attribute, an empty string is returned.
  exceptions:
  - type: System.Xml.XmlException
    description: The XML was not well-formed, or an error occurred while parsing the XML.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadInnerXmlAsync
  id: ReadInnerXmlAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadInnerXmlAsync()
  fullName: System.Xml.XmlReader.ReadInnerXmlAsync()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 331
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads all the content, including markup, as a string.
  syntax:
    content: public virtual Threading.Tasks.Task<string> ReadInnerXmlAsync()
    content.vb: Public Overridable Function ReadInnerXmlAsync As Threading.Tasks.Task(Of String)
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadOuterXml
  id: ReadOuterXml
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadOuterXml()
  fullName: System.Xml.XmlReader.ReadOuterXml()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 332
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, reads the content, including markup, representing this node and all its children.
  syntax:
    content: public virtual string ReadOuterXml()
    content.vb: Public Overridable Function ReadOuterXml As String
    return:
      type: System.String
      description: If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.
  exceptions:
  - type: System.Xml.XmlException
    description: The XML was not well-formed, or an error occurred while parsing the XML.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadOuterXmlAsync
  id: ReadOuterXmlAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadOuterXmlAsync()
  fullName: System.Xml.XmlReader.ReadOuterXmlAsync()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 333
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads the content, including markup, representing this node and all its children.
  syntax:
    content: public virtual Threading.Tasks.Task<string> ReadOuterXmlAsync()
    content.vb: Public Overridable Function ReadOuterXmlAsync As Threading.Tasks.Task(Of String)
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ReadStartElement
  id: ReadStartElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadStartElement()
  fullName: System.Xml.XmlReader.ReadStartElement()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 334
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the current node is an element and advances the reader to the next node.
  syntax:
    content: public virtual void ReadStartElement()
    content.vb: Public Overridable Sub ReadStartElement
  exceptions:
  - type: System.Xml.XmlException
    description: Incorrect XML was encountered in the input stream.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadStartElement(System.String)
  id: ReadStartElement(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadStartElement(String)
  fullName: System.Xml.XmlReader.ReadStartElement(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 335
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the current content node is an element with the given <xref href="System.Xml.XmlReader.Name" data-throw-if-not-resolved="false"></xref> and advances the reader to the next node.
  syntax:
    content: public virtual void ReadStartElement(string name)
    content.vb: Public Overridable Sub ReadStartElement(name As String)
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the element.
  exceptions:
  - type: System.Xml.XmlException
    description: Incorrect XML was encountered in the input stream. -or- The <xref href="System.Xml.XmlReader.Name" data-throw-if-not-resolved="false"></xref> of the element does not match the given *name*.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadStartElement(System.String,System.String)
  id: ReadStartElement(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadStartElement(String, String)
  fullName: System.Xml.XmlReader.ReadStartElement(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 336
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the current content node is an element with the given <xref href="System.Xml.XmlReader.LocalName" data-throw-if-not-resolved="false"></xref> and <xref href="System.Xml.XmlReader.NamespaceURI" data-throw-if-not-resolved="false"></xref> and advances the reader to the next node.
  syntax:
    content: public virtual void ReadStartElement(string localname, string ns)
    content.vb: Public Overridable Sub ReadStartElement(localname As String, ns As String)
    parameters:
    - id: localname
      type: System.String
      description: The local name of the element.
    - id: ns
      type: System.String
      description: The namespace URI of the element.
  exceptions:
  - type: System.Xml.XmlException
    description: Incorrect XML was encountered in the input stream.-or-The <xref href="System.Xml.XmlReader.LocalName" data-throw-if-not-resolved="false"></xref> and <xref href="System.Xml.XmlReader.NamespaceURI" data-throw-if-not-resolved="false"></xref> properties of the element found do not match the given arguments.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadSubtree
  id: ReadSubtree
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadSubtree()
  fullName: System.Xml.XmlReader.ReadSubtree()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 337
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Returns a new XmlReader instance that can be used to read the current node, and all its descendants.
  syntax:
    content: public virtual XmlReader ReadSubtree()
    content.vb: Public Overridable Function ReadSubtree As XmlReader
    return:
      type: System.Xml.XmlReader
      description: A new XML reader instance set to <xref href="System.Xml.ReadState.Initial" data-throw-if-not-resolved="false"></xref>. Calling the <xref href="System.Xml.XmlReader.Read" data-throw-if-not-resolved="false"></xref> method positions the new reader on the node that was current before the call to the <xref href="System.Xml.XmlReader.ReadSubtree" data-throw-if-not-resolved="false"></xref> method.
  exceptions:
  - type: System.InvalidOperationException
    description: The XML reader isn't positioned on an element when this method is called.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadToDescendant(System.String)
  id: ReadToDescendant(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadToDescendant(String)
  fullName: System.Xml.XmlReader.ReadToDescendant(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 338
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Advances the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> to the next descendant element with the specified qualified name.
  syntax:
    content: public virtual bool ReadToDescendant(string name)
    content.vb: Public Overridable Function ReadToDescendant(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the element you wish to move to.
    return:
      type: System.Boolean
      description: true if a matching descendant element is found; otherwise false. If a matching child element is not found, the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is positioned on the end tag (<xref href="System.Xml.XmlReader.NodeType" data-throw-if-not-resolved="false"></xref> is XmlNodeType.EndElement) of the element.If the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element when <xref href="System.Xml.XmlReader.ReadToDescendant(System.String)" data-throw-if-not-resolved="false"></xref> was called, this method returns false and the position of the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not changed.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.ArgumentException
    description: The parameter is an empty string.
- uid: System.Xml.XmlReader.ReadToDescendant(System.String,System.String)
  id: ReadToDescendant(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadToDescendant(String, String)
  fullName: System.Xml.XmlReader.ReadToDescendant(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 339
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Advances the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> to the next descendant element with the specified local name and namespace URI.
  syntax:
    content: public virtual bool ReadToDescendant(string localName, string namespaceURI)
    content.vb: Public Overridable Function ReadToDescendant(localName As String, namespaceURI As String) As Boolean
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element you wish to move to.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element you wish to move to.
    return:
      type: System.Boolean
      description: true if a matching descendant element is found; otherwise false. If a matching child element is not found, the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is positioned on the end tag (<xref href="System.Xml.XmlReader.NodeType" data-throw-if-not-resolved="false"></xref> is XmlNodeType.EndElement) of the element.If the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not positioned on an element when <xref href="System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" data-throw-if-not-resolved="false"></xref> was called, this method returns false and the position of the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is not changed.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.ArgumentNullException
    description: Both parameter values are null.
- uid: System.Xml.XmlReader.ReadToFollowing(System.String)
  id: ReadToFollowing(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadToFollowing(String)
  fullName: System.Xml.XmlReader.ReadToFollowing(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 340
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads until an element with the specified qualified name is found.
  syntax:
    content: public virtual bool ReadToFollowing(string name)
    content.vb: Public Overridable Function ReadToFollowing(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the element.
    return:
      type: System.Boolean
      description: true if a matching element is found; otherwise false and the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is in an end of file state.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.ArgumentException
    description: The parameter is an empty string.
- uid: System.Xml.XmlReader.ReadToFollowing(System.String,System.String)
  id: ReadToFollowing(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadToFollowing(String, String)
  fullName: System.Xml.XmlReader.ReadToFollowing(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 341
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads until an element with the specified local name and namespace URI is found.
  syntax:
    content: public virtual bool ReadToFollowing(string localName, string namespaceURI)
    content.vb: Public Overridable Function ReadToFollowing(localName As String, namespaceURI As String) As Boolean
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Boolean
      description: true if a matching element is found; otherwise false and the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> is in an end of file state.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.ArgumentNullException
    description: Both parameter values are null.
- uid: System.Xml.XmlReader.ReadToNextSibling(System.String)
  id: ReadToNextSibling(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadToNextSibling(String)
  fullName: System.Xml.XmlReader.ReadToNextSibling(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 342
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Advances the XmlReader to the next sibling element with the specified qualified name.
  syntax:
    content: public virtual bool ReadToNextSibling(string name)
    content.vb: Public Overridable Function ReadToNextSibling(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the sibling element you wish to move to.
    return:
      type: System.Boolean
      description: true if a matching sibling element is found; otherwise false. If a matching sibling element is not found, the XmlReader is positioned on the end tag (<xref href="System.Xml.XmlReader.NodeType" data-throw-if-not-resolved="false"></xref> is XmlNodeType.EndElement) of the parent element.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.ArgumentException
    description: The parameter is an empty string.
- uid: System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)
  id: ReadToNextSibling(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadToNextSibling(String, String)
  fullName: System.Xml.XmlReader.ReadToNextSibling(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 343
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Advances the XmlReader to the next sibling element with the specified local name and namespace URI.
  syntax:
    content: public virtual bool ReadToNextSibling(string localName, string namespaceURI)
    content.vb: Public Overridable Function ReadToNextSibling(localName As String, namespaceURI As String) As Boolean
    parameters:
    - id: localName
      type: System.String
      description: The local name of the sibling element you wish to move to.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the sibling element you wish to move to.
    return:
      type: System.Boolean
      description: true if a matching sibling element is found; otherwise, false. If a matching sibling element is not found, the XmlReader is positioned on the end tag (<xref href="System.Xml.XmlReader.NodeType" data-throw-if-not-resolved="false"></xref> is XmlNodeType.EndElement) of the parent element.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.ArgumentNullException
    description: Both parameter values are null.
- uid: System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  id: ReadValueChunk(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadValueChunk(Char[], Int32, Int32)
  name.vb: ReadValueChunk(Char(), Int32, Int32)
  fullName: System.Xml.XmlReader.ReadValueChunk(System.Char[], System.Int32, System.Int32)
  fullName.vb: System.Xml.XmlReader.ReadValueChunk(System.Char(), System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 344
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads large streams of text embedded in an XML document.
  syntax:
    content: public virtual int ReadValueChunk(char[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadValueChunk(buffer As Char(), index As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Char[]
      description: The array of characters that serves as the buffer to which the text contents are written. This value cannot be null.
    - id: index
      type: System.Int32
      description: The offset within the buffer where the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> can start to copy the results.
    - id: count
      type: System.Int32
      description: The maximum number of characters to copy into the buffer. The actual number of characters copied is returned from this method.
    return:
      type: System.Int32
      description: The number of characters read into the buffer. The value zero is returned when there is no more text content.
  exceptions:
  - type: System.InvalidOperationException
    description: The current node does not have a value (<xref href="System.Xml.XmlReader.HasValue" data-throw-if-not-resolved="false"></xref> is false).
  - type: System.ArgumentNullException
    description: The *buffer* value is null.
  - type: System.ArgumentOutOfRangeException
    description: The index into the buffer, or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> implementation does not support this method.
  - type: System.Xml.XmlException
    description: The XML data is not well-formed.
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)
  id: ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ReadValueChunkAsync(Char[], Int32, Int32)
  name.vb: ReadValueChunkAsync(Char(), Int32, Int32)
  fullName: System.Xml.XmlReader.ReadValueChunkAsync(System.Char[], System.Int32, System.Int32)
  fullName.vb: System.Xml.XmlReader.ReadValueChunkAsync(System.Char(), System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 345
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously reads large streams of text embedded in an XML document.
  syntax:
    content: public virtual Threading.Tasks.Task<int> ReadValueChunkAsync(char[] buffer, int index, int count)
    content.vb: Public Overridable Function ReadValueChunkAsync(buffer As Char(), index As Integer, count As Integer) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Char[]
      description: The array of characters that serves as the buffer to which the text contents are written. This value cannot be null.
    - id: index
      type: System.Int32
      description: The offset within the buffer where the <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> can start to copy the results.
    - id: count
      type: System.Int32
      description: The maximum number of characters to copy into the buffer. The actual number of characters copied is returned from this method.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of characters read into the buffer. The value zero is returned when there is no more text content.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
- uid: System.Xml.XmlReader.ResolveEntity
  id: ResolveEntity
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: ResolveEntity()
  fullName: System.Xml.XmlReader.ResolveEntity()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 346
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, resolves the entity reference for EntityReference nodes.
  syntax:
    content: public abstract void ResolveEntity()
    content.vb: Public MustOverride Sub ResolveEntity
  exceptions:
  - type: System.InvalidOperationException
    description: The reader is not positioned on an EntityReference node; this implementation of the reader cannot resolve entities (<xref href="System.Xml.XmlReader.CanResolveEntity" data-throw-if-not-resolved="false"></xref> returns false).
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.Skip
  id: Skip
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: Skip()
  fullName: System.Xml.XmlReader.Skip()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 347
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Skips the children of the current node.
  syntax:
    content: public virtual void Skip()
    content.vb: Public Overridable Sub Skip
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
- uid: System.Xml.XmlReader.SkipAsync
  id: SkipAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  - vb
  name: SkipAsync()
  fullName: System.Xml.XmlReader.SkipAsync()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 348
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Asynchronously skips the children of the current node.
  syntax:
    content: public virtual Threading.Tasks.Task SkipAsync()
    content.vb: Public Overridable Function SkipAsync As Threading.Tasks.Task
    return:
      type: System.Threading.Tasks.Task
      description: The current node.
  exceptions:
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “An asynchronous operation is already in progress.”"
  - type: System.InvalidOperationException
    description: "An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> asynchronous method was called without setting the <xref href=\"System.Xml.XmlReaderSettings.Async\" data-throw-if-not-resolved=\"false\"></xref> flag to true. In this case, <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”"
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: false
  name: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.ReadState
  parent: System.Xml
  isExternal: false
  name: ReadState
  fullName: System.Xml.ReadState
- uid: System.Xml.XmlReaderSettings
  parent: System.Xml
  isExternal: false
  name: XmlReaderSettings
  fullName: System.Xml.XmlReaderSettings
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Xml.XmlSpace
  parent: System.Xml
  isExternal: false
  name: XmlSpace
  fullName: System.Xml.XmlSpace
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Xml.XmlParserContext
  parent: System.Xml
  isExternal: false
  name: XmlParserContext
  fullName: System.Xml.XmlParserContext
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: TextReader
  fullName: System.IO.TextReader
- uid: System.Threading.Tasks.Task{System.String}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Threading.Tasks.Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task<>
  fullName: System.Threading.Tasks.Task<>
  fullname.vb: System.Threading.Tasks.Task(Of )
  name.vb: Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{System.Xml.XmlNodeType}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<XmlNodeType>
  fullName: System.Threading.Tasks.Task<System.Xml.XmlNodeType>
  fullname.vb: System.Threading.Tasks.Task(Of System.Xml.XmlNodeType)
  name.vb: Threading.Tasks.Task(Of XmlNodeType)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.XmlNodeType
    name: XmlNodeType
    fullName: System.Xml.XmlNodeType
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.XmlNodeType
    name: XmlNodeType
    fullName: System.Xml.XmlNodeType
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Threading.Tasks.Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: false
  name: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Threading.Tasks.Task{System.Object}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  fullname.vb: System.Threading.Tasks.Task(Of System.Object)
  name.vb: Threading.Tasks.Task(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.Int32}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Threading.Tasks.Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Char[]
  isExternal: false
  name: Char[]
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: ()
    fullName: ()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task
  fullName: System.Threading.Tasks.Task
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: false
  name: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: System.UriFormatException
  isExternal: false
  name: UriFormatException
  fullName: System.UriFormatException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Xml.XmlException
  isExternal: false
  name: XmlException
  fullName: System.Xml.XmlException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.OverflowException
  isExternal: false
  name: OverflowException
  fullName: System.OverflowException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
